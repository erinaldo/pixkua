'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("InformesDS"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class InformesDS
    Inherits Global.System.Data.DataSet
    
    Private tableFacturas As FacturasDataTable
    
    Private tableFacturasList As FacturasListDataTable
    
    Private tableVenta As VentaDataTable
    
    Private tableCorteCaja As CorteCajaDataTable
    
    Private tableImagenes As ImagenesDataTable
    
    Private tableFacturacionVTA As FacturacionVTADataTable
    
    Private tableFacturacionDetalle As FacturacionDetalleDataTable
    
    Private tableVentasGeneral As VentasGeneralDataTable
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("Facturas")) Is Nothing) Then
                MyBase.Tables.Add(New FacturasDataTable(ds.Tables("Facturas")))
            End If
            If (Not (ds.Tables("FacturasList")) Is Nothing) Then
                MyBase.Tables.Add(New FacturasListDataTable(ds.Tables("FacturasList")))
            End If
            If (Not (ds.Tables("Venta")) Is Nothing) Then
                MyBase.Tables.Add(New VentaDataTable(ds.Tables("Venta")))
            End If
            If (Not (ds.Tables("CorteCaja")) Is Nothing) Then
                MyBase.Tables.Add(New CorteCajaDataTable(ds.Tables("CorteCaja")))
            End If
            If (Not (ds.Tables("Imagenes")) Is Nothing) Then
                MyBase.Tables.Add(New ImagenesDataTable(ds.Tables("Imagenes")))
            End If
            If (Not (ds.Tables("FacturacionVTA")) Is Nothing) Then
                MyBase.Tables.Add(New FacturacionVTADataTable(ds.Tables("FacturacionVTA")))
            End If
            If (Not (ds.Tables("FacturacionDetalle")) Is Nothing) Then
                MyBase.Tables.Add(New FacturacionDetalleDataTable(ds.Tables("FacturacionDetalle")))
            End If
            If (Not (ds.Tables("VentasGeneral")) Is Nothing) Then
                MyBase.Tables.Add(New VentasGeneralDataTable(ds.Tables("VentasGeneral")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property Facturas() As FacturasDataTable
        Get
            Return Me.tableFacturas
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property FacturasList() As FacturasListDataTable
        Get
            Return Me.tableFacturasList
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property Venta() As VentaDataTable
        Get
            Return Me.tableVenta
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property CorteCaja() As CorteCajaDataTable
        Get
            Return Me.tableCorteCaja
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property Imagenes() As ImagenesDataTable
        Get
            Return Me.tableImagenes
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property FacturacionVTA() As FacturacionVTADataTable
        Get
            Return Me.tableFacturacionVTA
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property FacturacionDetalle() As FacturacionDetalleDataTable
        Get
            Return Me.tableFacturacionDetalle
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property VentasGeneral() As VentasGeneralDataTable
        Get
            Return Me.tableVentasGeneral
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As InformesDS = CType(MyBase.Clone,InformesDS)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXml(reader)
            If (Not (ds.Tables("Facturas")) Is Nothing) Then
                MyBase.Tables.Add(New FacturasDataTable(ds.Tables("Facturas")))
            End If
            If (Not (ds.Tables("FacturasList")) Is Nothing) Then
                MyBase.Tables.Add(New FacturasListDataTable(ds.Tables("FacturasList")))
            End If
            If (Not (ds.Tables("Venta")) Is Nothing) Then
                MyBase.Tables.Add(New VentaDataTable(ds.Tables("Venta")))
            End If
            If (Not (ds.Tables("CorteCaja")) Is Nothing) Then
                MyBase.Tables.Add(New CorteCajaDataTable(ds.Tables("CorteCaja")))
            End If
            If (Not (ds.Tables("Imagenes")) Is Nothing) Then
                MyBase.Tables.Add(New ImagenesDataTable(ds.Tables("Imagenes")))
            End If
            If (Not (ds.Tables("FacturacionVTA")) Is Nothing) Then
                MyBase.Tables.Add(New FacturacionVTADataTable(ds.Tables("FacturacionVTA")))
            End If
            If (Not (ds.Tables("FacturacionDetalle")) Is Nothing) Then
                MyBase.Tables.Add(New FacturacionDetalleDataTable(ds.Tables("FacturacionDetalle")))
            End If
            If (Not (ds.Tables("VentasGeneral")) Is Nothing) Then
                MyBase.Tables.Add(New VentasGeneralDataTable(ds.Tables("VentasGeneral")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableFacturas = CType(MyBase.Tables("Facturas"),FacturasDataTable)
        If (initTable = true) Then
            If (Not (Me.tableFacturas) Is Nothing) Then
                Me.tableFacturas.InitVars
            End If
        End If
        Me.tableFacturasList = CType(MyBase.Tables("FacturasList"),FacturasListDataTable)
        If (initTable = true) Then
            If (Not (Me.tableFacturasList) Is Nothing) Then
                Me.tableFacturasList.InitVars
            End If
        End If
        Me.tableVenta = CType(MyBase.Tables("Venta"),VentaDataTable)
        If (initTable = true) Then
            If (Not (Me.tableVenta) Is Nothing) Then
                Me.tableVenta.InitVars
            End If
        End If
        Me.tableCorteCaja = CType(MyBase.Tables("CorteCaja"),CorteCajaDataTable)
        If (initTable = true) Then
            If (Not (Me.tableCorteCaja) Is Nothing) Then
                Me.tableCorteCaja.InitVars
            End If
        End If
        Me.tableImagenes = CType(MyBase.Tables("Imagenes"),ImagenesDataTable)
        If (initTable = true) Then
            If (Not (Me.tableImagenes) Is Nothing) Then
                Me.tableImagenes.InitVars
            End If
        End If
        Me.tableFacturacionVTA = CType(MyBase.Tables("FacturacionVTA"),FacturacionVTADataTable)
        If (initTable = true) Then
            If (Not (Me.tableFacturacionVTA) Is Nothing) Then
                Me.tableFacturacionVTA.InitVars
            End If
        End If
        Me.tableFacturacionDetalle = CType(MyBase.Tables("FacturacionDetalle"),FacturacionDetalleDataTable)
        If (initTable = true) Then
            If (Not (Me.tableFacturacionDetalle) Is Nothing) Then
                Me.tableFacturacionDetalle.InitVars
            End If
        End If
        Me.tableVentasGeneral = CType(MyBase.Tables("VentasGeneral"),VentasGeneralDataTable)
        If (initTable = true) Then
            If (Not (Me.tableVentasGeneral) Is Nothing) Then
                Me.tableVentasGeneral.InitVars
            End If
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Sub InitClass()
        Me.DataSetName = "InformesDS"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/InformesDS.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableFacturas = New FacturasDataTable()
        MyBase.Tables.Add(Me.tableFacturas)
        Me.tableFacturasList = New FacturasListDataTable()
        MyBase.Tables.Add(Me.tableFacturasList)
        Me.tableVenta = New VentaDataTable()
        MyBase.Tables.Add(Me.tableVenta)
        Me.tableCorteCaja = New CorteCajaDataTable()
        MyBase.Tables.Add(Me.tableCorteCaja)
        Me.tableImagenes = New ImagenesDataTable()
        MyBase.Tables.Add(Me.tableImagenes)
        Me.tableFacturacionVTA = New FacturacionVTADataTable()
        MyBase.Tables.Add(Me.tableFacturacionVTA)
        Me.tableFacturacionDetalle = New FacturacionDetalleDataTable()
        MyBase.Tables.Add(Me.tableFacturacionDetalle)
        Me.tableVentasGeneral = New VentasGeneralDataTable()
        MyBase.Tables.Add(Me.tableVentasGeneral)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeFacturas() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeFacturasList() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeVenta() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeCorteCaja() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeImagenes() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeFacturacionVTA() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeFacturacionDetalle() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeVentasGeneral() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As InformesDS = New InformesDS()
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub FacturasRowChangeEventHandler(ByVal sender As Object, ByVal e As FacturasRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub FacturasListRowChangeEventHandler(ByVal sender As Object, ByVal e As FacturasListRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub VentaRowChangeEventHandler(ByVal sender As Object, ByVal e As VentaRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub CorteCajaRowChangeEventHandler(ByVal sender As Object, ByVal e As CorteCajaRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub ImagenesRowChangeEventHandler(ByVal sender As Object, ByVal e As ImagenesRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub FacturacionVTARowChangeEventHandler(ByVal sender As Object, ByVal e As FacturacionVTARowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub FacturacionDetalleRowChangeEventHandler(ByVal sender As Object, ByVal e As FacturacionDetalleRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub VentasGeneralRowChangeEventHandler(ByVal sender As Object, ByVal e As VentasGeneralRowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class FacturasDataTable
        Inherits Global.System.Data.TypedTableBase(Of FacturasRow)
        
        Private columnSerie As Global.System.Data.DataColumn
        
        Private columnFolio As Global.System.Data.DataColumn
        
        Private columnUUID As Global.System.Data.DataColumn
        
        Private columnFechaFactura As Global.System.Data.DataColumn
        
        Private columnFechaTimbrado As Global.System.Data.DataColumn
        
        Private columnFacturaLetra As Global.System.Data.DataColumn
        
        Private columnSubTotal As Global.System.Data.DataColumn
        
        Private columnTotalDescuentos As Global.System.Data.DataColumn
        
        Private columnMotivoDescuentos As Global.System.Data.DataColumn
        
        Private columnImpTrasladados As Global.System.Data.DataColumn
        
        Private columnImpRetenidos As Global.System.Data.DataColumn
        
        Private columnTotal As Global.System.Data.DataColumn
        
        Private columnTotalLetra As Global.System.Data.DataColumn
        
        Private columnIdDocumento As Global.System.Data.DataColumn
        
        Private columnReferencia As Global.System.Data.DataColumn
        
        Private columnDivisa As Global.System.Data.DataColumn
        
        Private columnAbrevDivisa As Global.System.Data.DataColumn
        
        Private columnActiva As Global.System.Data.DataColumn
        
        Private columnTipoPago As Global.System.Data.DataColumn
        
        Private columnDiasCredito As Global.System.Data.DataColumn
        
        Private columnCodigoCliente As Global.System.Data.DataColumn
        
        Private columnRFC As Global.System.Data.DataColumn
        
        Private columnRazonSocial As Global.System.Data.DataColumn
        
        Private columnCalleFIS As Global.System.Data.DataColumn
        
        Private columnNumExtFIS As Global.System.Data.DataColumn
        
        Private columnNumIntFIS As Global.System.Data.DataColumn
        
        Private columnColoniaFIS As Global.System.Data.DataColumn
        
        Private columnCPCliente As Global.System.Data.DataColumn
        
        Private columnPoblacionCliente As Global.System.Data.DataColumn
        
        Private columnEstadoCliente As Global.System.Data.DataColumn
        
        Private columnCalleSucursal As Global.System.Data.DataColumn
        
        Private columnNumExtSucursal As Global.System.Data.DataColumn
        
        Private columnNumIntSucursal As Global.System.Data.DataColumn
        
        Private columnColoniaSucursal As Global.System.Data.DataColumn
        
        Private columnCPSucursal As Global.System.Data.DataColumn
        
        Private columnPoblacionSucursal As Global.System.Data.DataColumn
        
        Private columnEstadoSucursal As Global.System.Data.DataColumn
        
        Private columnTelefonoSucursal As Global.System.Data.DataColumn
        
        Private columnEmailSucursal As Global.System.Data.DataColumn
        
        Private columnCodigoConcepto As Global.System.Data.DataColumn
        
        Private columnDescripcionConcepto As Global.System.Data.DataColumn
        
        Private columnFactorUnidad As Global.System.Data.DataColumn
        
        Private columnUnidadMedida As Global.System.Data.DataColumn
        
        Private columnCantidad As Global.System.Data.DataColumn
        
        Private columnPrecioUnitario As Global.System.Data.DataColumn
        
        Private columnPorcImpTras1 As Global.System.Data.DataColumn
        
        Private columnPorcImpTras2 As Global.System.Data.DataColumn
        
        Private columnPorcImpRet1 As Global.System.Data.DataColumn
        
        Private columnPorcImpRet2 As Global.System.Data.DataColumn
        
        Private columnDescUnitario As Global.System.Data.DataColumn
        
        Private columnCadenaOriginal As Global.System.Data.DataColumn
        
        Private columnSelloDigital As Global.System.Data.DataColumn
        
        Private columnNumCertificado As Global.System.Data.DataColumn
        
        Private columnNumAprobacion As Global.System.Data.DataColumn
        
        Private columnAnioAprobacion As Global.System.Data.DataColumn
        
        Private columnCadenaOriginalCert As Global.System.Data.DataColumn
        
        Private columnNumCertificadoSAT As Global.System.Data.DataColumn
        
        Private columnSelloSAT As Global.System.Data.DataColumn
        
        Private columnRFCEmisor As Global.System.Data.DataColumn
        
        Private columnRazonSocialEmisor As Global.System.Data.DataColumn
        
        Private columnCalleEmisor As Global.System.Data.DataColumn
        
        Private columnNumExtEmisor As Global.System.Data.DataColumn
        
        Private columnNumIntEmisor As Global.System.Data.DataColumn
        
        Private columnColoniaEmisor As Global.System.Data.DataColumn
        
        Private columnCPEmisor As Global.System.Data.DataColumn
        
        Private columnPoblacionEmisor As Global.System.Data.DataColumn
        
        Private columnEstadoEmisor As Global.System.Data.DataColumn
        
        Private columnMunicipioEmisor As Global.System.Data.DataColumn
        
        Private columnMetodoPago As Global.System.Data.DataColumn
        
        Private columnCuentaPago As Global.System.Data.DataColumn
        
        Private columnFormaPago As Global.System.Data.DataColumn
        
        Private columnRegimenFiscal As Global.System.Data.DataColumn
        
        Private columnQrCode As Global.System.Data.DataColumn
        
        Private columnNumPedimento As Global.System.Data.DataColumn
        
        Private columnFechaPedimento As Global.System.Data.DataColumn
        
        Private columnAduana As Global.System.Data.DataColumn
        
        Private columnObservaciones As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "Facturas"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SerieColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSerie
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FolioColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFolio
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property UUIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUUID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FechaFacturaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFechaFactura
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FechaTimbradoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFechaTimbrado
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FacturaLetraColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFacturaLetra
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SubTotalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSubTotal
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TotalDescuentosColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTotalDescuentos
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MotivoDescuentosColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMotivoDescuentos
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ImpTrasladadosColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnImpTrasladados
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ImpRetenidosColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnImpRetenidos
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TotalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTotal
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TotalLetraColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTotalLetra
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IdDocumentoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIdDocumento
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ReferenciaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnReferencia
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DivisaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDivisa
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AbrevDivisaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAbrevDivisa
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ActivaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnActiva
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TipoPagoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTipoPago
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DiasCreditoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDiasCredito
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CodigoClienteColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCodigoCliente
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RFCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRFC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RazonSocialColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRazonSocial
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CalleFISColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCalleFIS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NumExtFISColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNumExtFIS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NumIntFISColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNumIntFIS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ColoniaFISColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnColoniaFIS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CPClienteColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCPCliente
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PoblacionClienteColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPoblacionCliente
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property EstadoClienteColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEstadoCliente
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CalleSucursalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCalleSucursal
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NumExtSucursalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNumExtSucursal
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NumIntSucursalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNumIntSucursal
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ColoniaSucursalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnColoniaSucursal
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CPSucursalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCPSucursal
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PoblacionSucursalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPoblacionSucursal
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property EstadoSucursalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEstadoSucursal
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TelefonoSucursalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTelefonoSucursal
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property EmailSucursalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEmailSucursal
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CodigoConceptoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCodigoConcepto
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DescripcionConceptoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDescripcionConcepto
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FactorUnidadColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFactorUnidad
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property UnidadMedidaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUnidadMedida
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CantidadColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCantidad
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PrecioUnitarioColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPrecioUnitario
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PorcImpTras1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnPorcImpTras1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PorcImpTras2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnPorcImpTras2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PorcImpRet1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnPorcImpRet1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PorcImpRet2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnPorcImpRet2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DescUnitarioColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDescUnitario
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CadenaOriginalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCadenaOriginal
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SelloDigitalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSelloDigital
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NumCertificadoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNumCertificado
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NumAprobacionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNumAprobacion
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AnioAprobacionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAnioAprobacion
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CadenaOriginalCertColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCadenaOriginalCert
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NumCertificadoSATColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNumCertificadoSAT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SelloSATColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSelloSAT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RFCEmisorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRFCEmisor
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RazonSocialEmisorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRazonSocialEmisor
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CalleEmisorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCalleEmisor
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NumExtEmisorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNumExtEmisor
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NumIntEmisorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNumIntEmisor
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ColoniaEmisorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnColoniaEmisor
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CPEmisorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCPEmisor
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PoblacionEmisorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPoblacionEmisor
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property EstadoEmisorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEstadoEmisor
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MunicipioEmisorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMunicipioEmisor
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MetodoPagoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMetodoPago
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CuentaPagoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCuentaPago
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FormaPagoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFormaPago
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RegimenFiscalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRegimenFiscal
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property QrCodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnQrCode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NumPedimentoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNumPedimento
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FechaPedimentoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFechaPedimento
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AduanaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAduana
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ObservacionesColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnObservaciones
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As FacturasRow
            Get
                Return CType(Me.Rows(index),FacturasRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event FacturasRowChanging As FacturasRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event FacturasRowChanged As FacturasRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event FacturasRowDeleting As FacturasRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event FacturasRowDeleted As FacturasRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddFacturasRow(ByVal row As FacturasRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddFacturasRow( _
                    ByVal Serie As String,  _
                    ByVal Folio As Integer,  _
                    ByVal UUID As String,  _
                    ByVal FechaFactura As Date,  _
                    ByVal FechaTimbrado As Date,  _
                    ByVal FacturaLetra As String,  _
                    ByVal SubTotal As Decimal,  _
                    ByVal TotalDescuentos As Decimal,  _
                    ByVal MotivoDescuentos As String,  _
                    ByVal ImpTrasladados As Decimal,  _
                    ByVal ImpRetenidos As Decimal,  _
                    ByVal Total As Decimal,  _
                    ByVal TotalLetra As String,  _
                    ByVal IdDocumento As String,  _
                    ByVal Referencia As String,  _
                    ByVal Divisa As String,  _
                    ByVal AbrevDivisa As String,  _
                    ByVal Activa As Boolean,  _
                    ByVal TipoPago As String,  _
                    ByVal DiasCredito As Integer,  _
                    ByVal CodigoCliente As String,  _
                    ByVal RFC As String,  _
                    ByVal RazonSocial As String,  _
                    ByVal CalleFIS As String,  _
                    ByVal NumExtFIS As String,  _
                    ByVal NumIntFIS As String,  _
                    ByVal ColoniaFIS As String,  _
                    ByVal CPCliente As String,  _
                    ByVal PoblacionCliente As String,  _
                    ByVal EstadoCliente As String,  _
                    ByVal CalleSucursal As String,  _
                    ByVal NumExtSucursal As String,  _
                    ByVal NumIntSucursal As String,  _
                    ByVal ColoniaSucursal As String,  _
                    ByVal CPSucursal As String,  _
                    ByVal PoblacionSucursal As String,  _
                    ByVal EstadoSucursal As String,  _
                    ByVal TelefonoSucursal As String,  _
                    ByVal EmailSucursal As String,  _
                    ByVal CodigoConcepto As String,  _
                    ByVal DescripcionConcepto As String,  _
                    ByVal FactorUnidad As Integer,  _
                    ByVal UnidadMedida As String,  _
                    ByVal Cantidad As Decimal,  _
                    ByVal PrecioUnitario As Decimal,  _
                    ByVal PorcImpTras1 As Decimal,  _
                    ByVal PorcImpTras2 As Decimal,  _
                    ByVal PorcImpRet1 As Decimal,  _
                    ByVal PorcImpRet2 As Decimal,  _
                    ByVal DescUnitario As Decimal,  _
                    ByVal CadenaOriginal As String,  _
                    ByVal SelloDigital As String,  _
                    ByVal NumCertificado As String,  _
                    ByVal NumAprobacion As Integer,  _
                    ByVal AnioAprobacion As Integer,  _
                    ByVal CadenaOriginalCert As String,  _
                    ByVal NumCertificadoSAT As String,  _
                    ByVal SelloSAT As String,  _
                    ByVal RFCEmisor As String,  _
                    ByVal RazonSocialEmisor As String,  _
                    ByVal CalleEmisor As String,  _
                    ByVal NumExtEmisor As String,  _
                    ByVal NumIntEmisor As String,  _
                    ByVal ColoniaEmisor As String,  _
                    ByVal CPEmisor As String,  _
                    ByVal PoblacionEmisor As String,  _
                    ByVal EstadoEmisor As String,  _
                    ByVal MunicipioEmisor As String,  _
                    ByVal MetodoPago As String,  _
                    ByVal CuentaPago As String,  _
                    ByVal FormaPago As String,  _
                    ByVal RegimenFiscal As String,  _
                    ByVal QrCode() As Byte,  _
                    ByVal NumPedimento As String,  _
                    ByVal FechaPedimento As Date,  _
                    ByVal Aduana As String,  _
                    ByVal Observaciones As String) As FacturasRow
            Dim rowFacturasRow As FacturasRow = CType(Me.NewRow,FacturasRow)
            Dim columnValuesArray() As Object = New Object() {Serie, Folio, UUID, FechaFactura, FechaTimbrado, FacturaLetra, SubTotal, TotalDescuentos, MotivoDescuentos, ImpTrasladados, ImpRetenidos, Total, TotalLetra, IdDocumento, Referencia, Divisa, AbrevDivisa, Activa, TipoPago, DiasCredito, CodigoCliente, RFC, RazonSocial, CalleFIS, NumExtFIS, NumIntFIS, ColoniaFIS, CPCliente, PoblacionCliente, EstadoCliente, CalleSucursal, NumExtSucursal, NumIntSucursal, ColoniaSucursal, CPSucursal, PoblacionSucursal, EstadoSucursal, TelefonoSucursal, EmailSucursal, CodigoConcepto, DescripcionConcepto, FactorUnidad, UnidadMedida, Cantidad, PrecioUnitario, PorcImpTras1, PorcImpTras2, PorcImpRet1, PorcImpRet2, DescUnitario, CadenaOriginal, SelloDigital, NumCertificado, NumAprobacion, AnioAprobacion, CadenaOriginalCert, NumCertificadoSAT, SelloSAT, RFCEmisor, RazonSocialEmisor, CalleEmisor, NumExtEmisor, NumIntEmisor, ColoniaEmisor, CPEmisor, PoblacionEmisor, EstadoEmisor, MunicipioEmisor, MetodoPago, CuentaPago, FormaPago, RegimenFiscal, QrCode, NumPedimento, FechaPedimento, Aduana, Observaciones}
            rowFacturasRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowFacturasRow)
            Return rowFacturasRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As FacturasDataTable = CType(MyBase.Clone,FacturasDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New FacturasDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnSerie = MyBase.Columns("Serie")
            Me.columnFolio = MyBase.Columns("Folio")
            Me.columnUUID = MyBase.Columns("UUID")
            Me.columnFechaFactura = MyBase.Columns("FechaFactura")
            Me.columnFechaTimbrado = MyBase.Columns("FechaTimbrado")
            Me.columnFacturaLetra = MyBase.Columns("FacturaLetra")
            Me.columnSubTotal = MyBase.Columns("SubTotal")
            Me.columnTotalDescuentos = MyBase.Columns("TotalDescuentos")
            Me.columnMotivoDescuentos = MyBase.Columns("MotivoDescuentos")
            Me.columnImpTrasladados = MyBase.Columns("ImpTrasladados")
            Me.columnImpRetenidos = MyBase.Columns("ImpRetenidos")
            Me.columnTotal = MyBase.Columns("Total")
            Me.columnTotalLetra = MyBase.Columns("TotalLetra")
            Me.columnIdDocumento = MyBase.Columns("IdDocumento")
            Me.columnReferencia = MyBase.Columns("Referencia")
            Me.columnDivisa = MyBase.Columns("Divisa")
            Me.columnAbrevDivisa = MyBase.Columns("AbrevDivisa")
            Me.columnActiva = MyBase.Columns("Activa")
            Me.columnTipoPago = MyBase.Columns("TipoPago")
            Me.columnDiasCredito = MyBase.Columns("DiasCredito")
            Me.columnCodigoCliente = MyBase.Columns("CodigoCliente")
            Me.columnRFC = MyBase.Columns("RFC")
            Me.columnRazonSocial = MyBase.Columns("RazonSocial")
            Me.columnCalleFIS = MyBase.Columns("CalleFIS")
            Me.columnNumExtFIS = MyBase.Columns("NumExtFIS")
            Me.columnNumIntFIS = MyBase.Columns("NumIntFIS")
            Me.columnColoniaFIS = MyBase.Columns("ColoniaFIS")
            Me.columnCPCliente = MyBase.Columns("CPCliente")
            Me.columnPoblacionCliente = MyBase.Columns("PoblacionCliente")
            Me.columnEstadoCliente = MyBase.Columns("EstadoCliente")
            Me.columnCalleSucursal = MyBase.Columns("CalleSucursal")
            Me.columnNumExtSucursal = MyBase.Columns("NumExtSucursal")
            Me.columnNumIntSucursal = MyBase.Columns("NumIntSucursal")
            Me.columnColoniaSucursal = MyBase.Columns("ColoniaSucursal")
            Me.columnCPSucursal = MyBase.Columns("CPSucursal")
            Me.columnPoblacionSucursal = MyBase.Columns("PoblacionSucursal")
            Me.columnEstadoSucursal = MyBase.Columns("EstadoSucursal")
            Me.columnTelefonoSucursal = MyBase.Columns("TelefonoSucursal")
            Me.columnEmailSucursal = MyBase.Columns("EmailSucursal")
            Me.columnCodigoConcepto = MyBase.Columns("CodigoConcepto")
            Me.columnDescripcionConcepto = MyBase.Columns("DescripcionConcepto")
            Me.columnFactorUnidad = MyBase.Columns("FactorUnidad")
            Me.columnUnidadMedida = MyBase.Columns("UnidadMedida")
            Me.columnCantidad = MyBase.Columns("Cantidad")
            Me.columnPrecioUnitario = MyBase.Columns("PrecioUnitario")
            Me.columnPorcImpTras1 = MyBase.Columns("PorcImpTras1")
            Me.columnPorcImpTras2 = MyBase.Columns("PorcImpTras2")
            Me.columnPorcImpRet1 = MyBase.Columns("PorcImpRet1")
            Me.columnPorcImpRet2 = MyBase.Columns("PorcImpRet2")
            Me.columnDescUnitario = MyBase.Columns("DescUnitario")
            Me.columnCadenaOriginal = MyBase.Columns("CadenaOriginal")
            Me.columnSelloDigital = MyBase.Columns("SelloDigital")
            Me.columnNumCertificado = MyBase.Columns("NumCertificado")
            Me.columnNumAprobacion = MyBase.Columns("NumAprobacion")
            Me.columnAnioAprobacion = MyBase.Columns("AnioAprobacion")
            Me.columnCadenaOriginalCert = MyBase.Columns("CadenaOriginalCert")
            Me.columnNumCertificadoSAT = MyBase.Columns("NumCertificadoSAT")
            Me.columnSelloSAT = MyBase.Columns("SelloSAT")
            Me.columnRFCEmisor = MyBase.Columns("RFCEmisor")
            Me.columnRazonSocialEmisor = MyBase.Columns("RazonSocialEmisor")
            Me.columnCalleEmisor = MyBase.Columns("CalleEmisor")
            Me.columnNumExtEmisor = MyBase.Columns("NumExtEmisor")
            Me.columnNumIntEmisor = MyBase.Columns("NumIntEmisor")
            Me.columnColoniaEmisor = MyBase.Columns("ColoniaEmisor")
            Me.columnCPEmisor = MyBase.Columns("CPEmisor")
            Me.columnPoblacionEmisor = MyBase.Columns("PoblacionEmisor")
            Me.columnEstadoEmisor = MyBase.Columns("EstadoEmisor")
            Me.columnMunicipioEmisor = MyBase.Columns("MunicipioEmisor")
            Me.columnMetodoPago = MyBase.Columns("MetodoPago")
            Me.columnCuentaPago = MyBase.Columns("CuentaPago")
            Me.columnFormaPago = MyBase.Columns("FormaPago")
            Me.columnRegimenFiscal = MyBase.Columns("RegimenFiscal")
            Me.columnQrCode = MyBase.Columns("QrCode")
            Me.columnNumPedimento = MyBase.Columns("NumPedimento")
            Me.columnFechaPedimento = MyBase.Columns("FechaPedimento")
            Me.columnAduana = MyBase.Columns("Aduana")
            Me.columnObservaciones = MyBase.Columns("Observaciones")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnSerie = New Global.System.Data.DataColumn("Serie", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSerie)
            Me.columnFolio = New Global.System.Data.DataColumn("Folio", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFolio)
            Me.columnUUID = New Global.System.Data.DataColumn("UUID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUUID)
            Me.columnFechaFactura = New Global.System.Data.DataColumn("FechaFactura", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFechaFactura)
            Me.columnFechaTimbrado = New Global.System.Data.DataColumn("FechaTimbrado", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFechaTimbrado)
            Me.columnFacturaLetra = New Global.System.Data.DataColumn("FacturaLetra", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFacturaLetra)
            Me.columnSubTotal = New Global.System.Data.DataColumn("SubTotal", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSubTotal)
            Me.columnTotalDescuentos = New Global.System.Data.DataColumn("TotalDescuentos", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTotalDescuentos)
            Me.columnMotivoDescuentos = New Global.System.Data.DataColumn("MotivoDescuentos", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMotivoDescuentos)
            Me.columnImpTrasladados = New Global.System.Data.DataColumn("ImpTrasladados", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnImpTrasladados)
            Me.columnImpRetenidos = New Global.System.Data.DataColumn("ImpRetenidos", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnImpRetenidos)
            Me.columnTotal = New Global.System.Data.DataColumn("Total", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTotal)
            Me.columnTotalLetra = New Global.System.Data.DataColumn("TotalLetra", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTotalLetra)
            Me.columnIdDocumento = New Global.System.Data.DataColumn("IdDocumento", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIdDocumento)
            Me.columnReferencia = New Global.System.Data.DataColumn("Referencia", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnReferencia)
            Me.columnDivisa = New Global.System.Data.DataColumn("Divisa", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDivisa)
            Me.columnAbrevDivisa = New Global.System.Data.DataColumn("AbrevDivisa", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAbrevDivisa)
            Me.columnActiva = New Global.System.Data.DataColumn("Activa", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnActiva)
            Me.columnTipoPago = New Global.System.Data.DataColumn("TipoPago", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTipoPago)
            Me.columnDiasCredito = New Global.System.Data.DataColumn("DiasCredito", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDiasCredito)
            Me.columnCodigoCliente = New Global.System.Data.DataColumn("CodigoCliente", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCodigoCliente)
            Me.columnRFC = New Global.System.Data.DataColumn("RFC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRFC)
            Me.columnRazonSocial = New Global.System.Data.DataColumn("RazonSocial", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRazonSocial)
            Me.columnCalleFIS = New Global.System.Data.DataColumn("CalleFIS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCalleFIS)
            Me.columnNumExtFIS = New Global.System.Data.DataColumn("NumExtFIS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNumExtFIS)
            Me.columnNumIntFIS = New Global.System.Data.DataColumn("NumIntFIS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNumIntFIS)
            Me.columnColoniaFIS = New Global.System.Data.DataColumn("ColoniaFIS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColoniaFIS)
            Me.columnCPCliente = New Global.System.Data.DataColumn("CPCliente", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCPCliente)
            Me.columnPoblacionCliente = New Global.System.Data.DataColumn("PoblacionCliente", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPoblacionCliente)
            Me.columnEstadoCliente = New Global.System.Data.DataColumn("EstadoCliente", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEstadoCliente)
            Me.columnCalleSucursal = New Global.System.Data.DataColumn("CalleSucursal", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCalleSucursal)
            Me.columnNumExtSucursal = New Global.System.Data.DataColumn("NumExtSucursal", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNumExtSucursal)
            Me.columnNumIntSucursal = New Global.System.Data.DataColumn("NumIntSucursal", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNumIntSucursal)
            Me.columnColoniaSucursal = New Global.System.Data.DataColumn("ColoniaSucursal", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColoniaSucursal)
            Me.columnCPSucursal = New Global.System.Data.DataColumn("CPSucursal", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCPSucursal)
            Me.columnPoblacionSucursal = New Global.System.Data.DataColumn("PoblacionSucursal", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPoblacionSucursal)
            Me.columnEstadoSucursal = New Global.System.Data.DataColumn("EstadoSucursal", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEstadoSucursal)
            Me.columnTelefonoSucursal = New Global.System.Data.DataColumn("TelefonoSucursal", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTelefonoSucursal)
            Me.columnEmailSucursal = New Global.System.Data.DataColumn("EmailSucursal", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEmailSucursal)
            Me.columnCodigoConcepto = New Global.System.Data.DataColumn("CodigoConcepto", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCodigoConcepto)
            Me.columnDescripcionConcepto = New Global.System.Data.DataColumn("DescripcionConcepto", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDescripcionConcepto)
            Me.columnFactorUnidad = New Global.System.Data.DataColumn("FactorUnidad", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFactorUnidad)
            Me.columnUnidadMedida = New Global.System.Data.DataColumn("UnidadMedida", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUnidadMedida)
            Me.columnCantidad = New Global.System.Data.DataColumn("Cantidad", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCantidad)
            Me.columnPrecioUnitario = New Global.System.Data.DataColumn("PrecioUnitario", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPrecioUnitario)
            Me.columnPorcImpTras1 = New Global.System.Data.DataColumn("PorcImpTras1", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPorcImpTras1)
            Me.columnPorcImpTras2 = New Global.System.Data.DataColumn("PorcImpTras2", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPorcImpTras2)
            Me.columnPorcImpRet1 = New Global.System.Data.DataColumn("PorcImpRet1", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPorcImpRet1)
            Me.columnPorcImpRet2 = New Global.System.Data.DataColumn("PorcImpRet2", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPorcImpRet2)
            Me.columnDescUnitario = New Global.System.Data.DataColumn("DescUnitario", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDescUnitario)
            Me.columnCadenaOriginal = New Global.System.Data.DataColumn("CadenaOriginal", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCadenaOriginal)
            Me.columnSelloDigital = New Global.System.Data.DataColumn("SelloDigital", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSelloDigital)
            Me.columnNumCertificado = New Global.System.Data.DataColumn("NumCertificado", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNumCertificado)
            Me.columnNumAprobacion = New Global.System.Data.DataColumn("NumAprobacion", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNumAprobacion)
            Me.columnAnioAprobacion = New Global.System.Data.DataColumn("AnioAprobacion", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAnioAprobacion)
            Me.columnCadenaOriginalCert = New Global.System.Data.DataColumn("CadenaOriginalCert", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCadenaOriginalCert)
            Me.columnNumCertificadoSAT = New Global.System.Data.DataColumn("NumCertificadoSAT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNumCertificadoSAT)
            Me.columnSelloSAT = New Global.System.Data.DataColumn("SelloSAT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSelloSAT)
            Me.columnRFCEmisor = New Global.System.Data.DataColumn("RFCEmisor", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRFCEmisor)
            Me.columnRazonSocialEmisor = New Global.System.Data.DataColumn("RazonSocialEmisor", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRazonSocialEmisor)
            Me.columnCalleEmisor = New Global.System.Data.DataColumn("CalleEmisor", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCalleEmisor)
            Me.columnNumExtEmisor = New Global.System.Data.DataColumn("NumExtEmisor", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNumExtEmisor)
            Me.columnNumIntEmisor = New Global.System.Data.DataColumn("NumIntEmisor", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNumIntEmisor)
            Me.columnColoniaEmisor = New Global.System.Data.DataColumn("ColoniaEmisor", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColoniaEmisor)
            Me.columnCPEmisor = New Global.System.Data.DataColumn("CPEmisor", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCPEmisor)
            Me.columnPoblacionEmisor = New Global.System.Data.DataColumn("PoblacionEmisor", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPoblacionEmisor)
            Me.columnEstadoEmisor = New Global.System.Data.DataColumn("EstadoEmisor", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEstadoEmisor)
            Me.columnMunicipioEmisor = New Global.System.Data.DataColumn("MunicipioEmisor", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMunicipioEmisor)
            Me.columnMetodoPago = New Global.System.Data.DataColumn("MetodoPago", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMetodoPago)
            Me.columnCuentaPago = New Global.System.Data.DataColumn("CuentaPago", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCuentaPago)
            Me.columnFormaPago = New Global.System.Data.DataColumn("FormaPago", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFormaPago)
            Me.columnRegimenFiscal = New Global.System.Data.DataColumn("RegimenFiscal", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRegimenFiscal)
            Me.columnQrCode = New Global.System.Data.DataColumn("QrCode", GetType(Byte()), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnQrCode)
            Me.columnNumPedimento = New Global.System.Data.DataColumn("NumPedimento", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNumPedimento)
            Me.columnFechaPedimento = New Global.System.Data.DataColumn("FechaPedimento", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFechaPedimento)
            Me.columnAduana = New Global.System.Data.DataColumn("Aduana", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAduana)
            Me.columnObservaciones = New Global.System.Data.DataColumn("Observaciones", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnObservaciones)
            Me.columnSerie.AllowDBNull = false
            Me.columnSerie.DefaultValue = CType("",String)
            Me.columnFolio.AllowDBNull = false
            Me.columnUUID.DefaultValue = CType("",String)
            Me.columnFechaFactura.AllowDBNull = false
            Me.columnFacturaLetra.ReadOnly = true
            Me.columnFacturaLetra.MaxLength = 1035
            Me.columnSubTotal.AllowDBNull = false
            Me.columnTotalDescuentos.AllowDBNull = false
            Me.columnMotivoDescuentos.DefaultValue = CType("",String)
            Me.columnImpTrasladados.AllowDBNull = false
            Me.columnImpRetenidos.AllowDBNull = false
            Me.columnTotal.AllowDBNull = false
            Me.columnTotalLetra.ReadOnly = true
            Me.columnTotalLetra.MaxLength = 1024
            Me.columnReferencia.DefaultValue = CType("",String)
            Me.columnDivisa.DefaultValue = CType("",String)
            Me.columnAbrevDivisa.DefaultValue = CType("",String)
            Me.columnActiva.AllowDBNull = false
            Me.columnTipoPago.ReadOnly = true
            Me.columnTipoPago.MaxLength = 15
            Me.columnDiasCredito.AllowDBNull = false
            Me.columnCodigoCliente.AllowDBNull = false
            Me.columnCodigoCliente.MaxLength = 32
            Me.columnRFC.ReadOnly = true
            Me.columnRFC.MaxLength = 2147483647
            Me.columnRazonSocial.ReadOnly = true
            Me.columnRazonSocial.MaxLength = 2147483647
            Me.columnCalleFIS.ReadOnly = true
            Me.columnCalleFIS.MaxLength = 2147483647
            Me.columnNumExtFIS.ReadOnly = true
            Me.columnNumExtFIS.MaxLength = 2147483647
            Me.columnNumIntFIS.ReadOnly = true
            Me.columnNumIntFIS.MaxLength = 2147483647
            Me.columnColoniaFIS.ReadOnly = true
            Me.columnColoniaFIS.MaxLength = 2147483647
            Me.columnCPCliente.ReadOnly = true
            Me.columnCPCliente.MaxLength = 2147483647
            Me.columnPoblacionCliente.ReadOnly = true
            Me.columnPoblacionCliente.MaxLength = 2147483647
            Me.columnEstadoCliente.ReadOnly = true
            Me.columnEstadoCliente.MaxLength = 2147483647
            Me.columnCalleSucursal.ReadOnly = true
            Me.columnCalleSucursal.MaxLength = 2147483647
            Me.columnNumExtSucursal.ReadOnly = true
            Me.columnNumExtSucursal.MaxLength = 2147483647
            Me.columnNumIntSucursal.ReadOnly = true
            Me.columnNumIntSucursal.MaxLength = 2147483647
            Me.columnColoniaSucursal.ReadOnly = true
            Me.columnColoniaSucursal.MaxLength = 2147483647
            Me.columnCPSucursal.ReadOnly = true
            Me.columnCPSucursal.MaxLength = 2147483647
            Me.columnPoblacionSucursal.ReadOnly = true
            Me.columnPoblacionSucursal.MaxLength = 2147483647
            Me.columnEstadoSucursal.ReadOnly = true
            Me.columnEstadoSucursal.MaxLength = 2147483647
            Me.columnTelefonoSucursal.AllowDBNull = false
            Me.columnTelefonoSucursal.MaxLength = 32
            Me.columnEmailSucursal.AllowDBNull = false
            Me.columnEmailSucursal.MaxLength = 128
            Me.columnCodigoConcepto.AllowDBNull = false
            Me.columnCodigoConcepto.MaxLength = 32
            Me.columnDescripcionConcepto.AllowDBNull = false
            Me.columnDescripcionConcepto.MaxLength = 1024
            Me.columnFactorUnidad.AllowDBNull = false
            Me.columnUnidadMedida.AllowDBNull = false
            Me.columnUnidadMedida.MaxLength = 64
            Me.columnCantidad.AllowDBNull = false
            Me.columnPrecioUnitario.AllowDBNull = false
            Me.columnPorcImpTras1.AllowDBNull = false
            Me.columnPorcImpTras2.AllowDBNull = false
            Me.columnPorcImpRet1.AllowDBNull = false
            Me.columnPorcImpRet2.AllowDBNull = false
            Me.columnDescUnitario.DefaultValue = CType(0D,Decimal)
            Me.columnCadenaOriginal.DefaultValue = CType("",String)
            Me.columnSelloDigital.AllowDBNull = false
            Me.columnSelloDigital.MaxLength = 2048
            Me.columnNumCertificado.AllowDBNull = false
            Me.columnNumCertificado.MaxLength = 20
            Me.columnNumAprobacion.AllowDBNull = false
            Me.columnAnioAprobacion.AllowDBNull = false
            Me.columnCadenaOriginalCert.DefaultValue = CType("",String)
            Me.columnNumCertificadoSAT.DefaultValue = CType("",String)
            Me.columnSelloSAT.DefaultValue = CType("",String)
            Me.columnRFCEmisor.ReadOnly = true
            Me.columnRFCEmisor.MaxLength = 2147483647
            Me.columnRazonSocialEmisor.ReadOnly = true
            Me.columnRazonSocialEmisor.MaxLength = 2147483647
            Me.columnCalleEmisor.ReadOnly = true
            Me.columnCalleEmisor.MaxLength = 2147483647
            Me.columnNumExtEmisor.ReadOnly = true
            Me.columnNumExtEmisor.MaxLength = 2147483647
            Me.columnNumIntEmisor.ReadOnly = true
            Me.columnNumIntEmisor.MaxLength = 2147483647
            Me.columnColoniaEmisor.ReadOnly = true
            Me.columnColoniaEmisor.MaxLength = 2147483647
            Me.columnCPEmisor.ReadOnly = true
            Me.columnCPEmisor.MaxLength = 2147483647
            Me.columnPoblacionEmisor.ReadOnly = true
            Me.columnPoblacionEmisor.MaxLength = 2147483647
            Me.columnEstadoEmisor.ReadOnly = true
            Me.columnEstadoEmisor.MaxLength = 2147483647
            Me.columnMunicipioEmisor.ReadOnly = true
            Me.columnMunicipioEmisor.MaxLength = 2147483647
            Me.columnMetodoPago.DefaultValue = CType("",String)
            Me.columnCuentaPago.DefaultValue = CType("",String)
            Me.columnFormaPago.DefaultValue = CType("",String)
            Me.columnRegimenFiscal.DefaultValue = CType("",String)
            Me.columnNumPedimento.DefaultValue = CType("",String)
            Me.columnAduana.DefaultValue = CType("",String)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewFacturasRow() As FacturasRow
            Return CType(Me.NewRow,FacturasRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New FacturasRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(FacturasRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.FacturasRowChangedEvent) Is Nothing) Then
                RaiseEvent FacturasRowChanged(Me, New FacturasRowChangeEvent(CType(e.Row,FacturasRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.FacturasRowChangingEvent) Is Nothing) Then
                RaiseEvent FacturasRowChanging(Me, New FacturasRowChangeEvent(CType(e.Row,FacturasRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.FacturasRowDeletedEvent) Is Nothing) Then
                RaiseEvent FacturasRowDeleted(Me, New FacturasRowChangeEvent(CType(e.Row,FacturasRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.FacturasRowDeletingEvent) Is Nothing) Then
                RaiseEvent FacturasRowDeleting(Me, New FacturasRowChangeEvent(CType(e.Row,FacturasRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveFacturasRow(ByVal row As FacturasRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As InformesDS = New InformesDS()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "FacturasDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class FacturasListDataTable
        Inherits Global.System.Data.TypedTableBase(Of FacturasListRow)
        
        Private columnFechaComprobante As Global.System.Data.DataColumn
        
        Private columnHoraComprobante As Global.System.Data.DataColumn
        
        Private columnIdCFDSerie As Global.System.Data.DataColumn
        
        Private columnSerie As Global.System.Data.DataColumn
        
        Private columnFolio As Global.System.Data.DataColumn
        
        Private columnUUID As Global.System.Data.DataColumn
        
        Private columnIdCliente As Global.System.Data.DataColumn
        
        Private columnRFC As Global.System.Data.DataColumn
        
        Private columnRazonSocial As Global.System.Data.DataColumn
        
        Private columnSubTotal As Global.System.Data.DataColumn
        
        Private columnImpTrasladados As Global.System.Data.DataColumn
        
        Private columnTotal As Global.System.Data.DataColumn
        
        Private columnEstatus As Global.System.Data.DataColumn
        
        Private columnFechaCancelacion As Global.System.Data.DataColumn
        
        Private columnIdDocumento As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "FacturasList"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FechaComprobanteColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFechaComprobante
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property HoraComprobanteColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHoraComprobante
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IdCFDSerieColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIdCFDSerie
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SerieColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSerie
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FolioColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFolio
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property UUIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUUID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IdClienteColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIdCliente
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RFCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRFC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RazonSocialColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRazonSocial
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SubTotalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSubTotal
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ImpTrasladadosColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnImpTrasladados
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TotalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTotal
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property EstatusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEstatus
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FechaCancelacionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFechaCancelacion
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IdDocumentoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIdDocumento
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As FacturasListRow
            Get
                Return CType(Me.Rows(index),FacturasListRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event FacturasListRowChanging As FacturasListRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event FacturasListRowChanged As FacturasListRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event FacturasListRowDeleting As FacturasListRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event FacturasListRowDeleted As FacturasListRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddFacturasListRow(ByVal row As FacturasListRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddFacturasListRow(ByVal FechaComprobante As Date, ByVal HoraComprobante As Date, ByVal IdCFDSerie As Integer, ByVal Serie As String, ByVal Folio As Integer, ByVal UUID As String, ByVal IdCliente As Integer, ByVal RFC As String, ByVal RazonSocial As String, ByVal SubTotal As Decimal, ByVal ImpTrasladados As Decimal, ByVal Total As Decimal, ByVal Estatus As String, ByVal FechaCancelacion As Date, ByVal IdDocumento As String) As FacturasListRow
            Dim rowFacturasListRow As FacturasListRow = CType(Me.NewRow,FacturasListRow)
            Dim columnValuesArray() As Object = New Object() {FechaComprobante, HoraComprobante, IdCFDSerie, Serie, Folio, UUID, IdCliente, RFC, RazonSocial, SubTotal, ImpTrasladados, Total, Estatus, FechaCancelacion, IdDocumento}
            rowFacturasListRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowFacturasListRow)
            Return rowFacturasListRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As FacturasListDataTable = CType(MyBase.Clone,FacturasListDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New FacturasListDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnFechaComprobante = MyBase.Columns("FechaComprobante")
            Me.columnHoraComprobante = MyBase.Columns("HoraComprobante")
            Me.columnIdCFDSerie = MyBase.Columns("IdCFDSerie")
            Me.columnSerie = MyBase.Columns("Serie")
            Me.columnFolio = MyBase.Columns("Folio")
            Me.columnUUID = MyBase.Columns("UUID")
            Me.columnIdCliente = MyBase.Columns("IdCliente")
            Me.columnRFC = MyBase.Columns("RFC")
            Me.columnRazonSocial = MyBase.Columns("RazonSocial")
            Me.columnSubTotal = MyBase.Columns("SubTotal")
            Me.columnImpTrasladados = MyBase.Columns("ImpTrasladados")
            Me.columnTotal = MyBase.Columns("Total")
            Me.columnEstatus = MyBase.Columns("Estatus")
            Me.columnFechaCancelacion = MyBase.Columns("FechaCancelacion")
            Me.columnIdDocumento = MyBase.Columns("IdDocumento")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnFechaComprobante = New Global.System.Data.DataColumn("FechaComprobante", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFechaComprobante)
            Me.columnHoraComprobante = New Global.System.Data.DataColumn("HoraComprobante", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHoraComprobante)
            Me.columnIdCFDSerie = New Global.System.Data.DataColumn("IdCFDSerie", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIdCFDSerie)
            Me.columnSerie = New Global.System.Data.DataColumn("Serie", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSerie)
            Me.columnFolio = New Global.System.Data.DataColumn("Folio", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFolio)
            Me.columnUUID = New Global.System.Data.DataColumn("UUID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUUID)
            Me.columnIdCliente = New Global.System.Data.DataColumn("IdCliente", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIdCliente)
            Me.columnRFC = New Global.System.Data.DataColumn("RFC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRFC)
            Me.columnRazonSocial = New Global.System.Data.DataColumn("RazonSocial", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRazonSocial)
            Me.columnSubTotal = New Global.System.Data.DataColumn("SubTotal", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSubTotal)
            Me.columnImpTrasladados = New Global.System.Data.DataColumn("ImpTrasladados", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnImpTrasladados)
            Me.columnTotal = New Global.System.Data.DataColumn("Total", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTotal)
            Me.columnEstatus = New Global.System.Data.DataColumn("Estatus", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEstatus)
            Me.columnFechaCancelacion = New Global.System.Data.DataColumn("FechaCancelacion", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFechaCancelacion)
            Me.columnIdDocumento = New Global.System.Data.DataColumn("IdDocumento", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIdDocumento)
            Me.columnIdCFDSerie.DefaultValue = CType(0,Integer)
            Me.columnSerie.AllowDBNull = false
            Me.columnFolio.AllowDBNull = false
            Me.columnUUID.DefaultValue = CType("",String)
            Me.columnIdCliente.DefaultValue = CType(0,Integer)
            Me.columnIdDocumento.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewFacturasListRow() As FacturasListRow
            Return CType(Me.NewRow,FacturasListRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New FacturasListRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(FacturasListRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.FacturasListRowChangedEvent) Is Nothing) Then
                RaiseEvent FacturasListRowChanged(Me, New FacturasListRowChangeEvent(CType(e.Row,FacturasListRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.FacturasListRowChangingEvent) Is Nothing) Then
                RaiseEvent FacturasListRowChanging(Me, New FacturasListRowChangeEvent(CType(e.Row,FacturasListRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.FacturasListRowDeletedEvent) Is Nothing) Then
                RaiseEvent FacturasListRowDeleted(Me, New FacturasListRowChangeEvent(CType(e.Row,FacturasListRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.FacturasListRowDeletingEvent) Is Nothing) Then
                RaiseEvent FacturasListRowDeleting(Me, New FacturasListRowChangeEvent(CType(e.Row,FacturasListRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveFacturasListRow(ByVal row As FacturasListRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As InformesDS = New InformesDS()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "FacturasListDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class VentaDataTable
        Inherits Global.System.Data.TypedTableBase(Of VentaRow)
        
        Private columnIdVentaTit As Global.System.Data.DataColumn
        
        Private columnFecha As Global.System.Data.DataColumn
        
        Private columnCodigoCliente As Global.System.Data.DataColumn
        
        Private columnNombreCliente As Global.System.Data.DataColumn
        
        Private columnRFC As Global.System.Data.DataColumn
        
        Private columnRazonSocial As Global.System.Data.DataColumn
        
        Private columnSubTotal As Global.System.Data.DataColumn
        
        Private columnTotalDescuentos As Global.System.Data.DataColumn
        
        Private columnTotalImpuestosRet As Global.System.Data.DataColumn
        
        Private columnTotalImpuestosTras As Global.System.Data.DataColumn
        
        Private columnTotal As Global.System.Data.DataColumn
        
        Private columnCondicionesPago As Global.System.Data.DataColumn
        
        Private columnCaja As Global.System.Data.DataColumn
        
        Private columnCantidad As Global.System.Data.DataColumn
        
        Private columnCodigoConcepto As Global.System.Data.DataColumn
        
        Private columnDescripcionConcepto As Global.System.Data.DataColumn
        
        Private columnPrecioUnitario As Global.System.Data.DataColumn
        
        Private columnTipoCambio As Global.System.Data.DataColumn
        
        Private columnDivisa As Global.System.Data.DataColumn
        
        Private columnDivisaAbrev As Global.System.Data.DataColumn
        
        Private columnNumPedimento As Global.System.Data.DataColumn
        
        Private columnFechaPedimento As Global.System.Data.DataColumn
        
        Private columnAduana As Global.System.Data.DataColumn
        
        Private columnOrdenCompra As Global.System.Data.DataColumn
        
        Private columnReferencia As Global.System.Data.DataColumn
        
        Private columnRazonSocialEmpresa As Global.System.Data.DataColumn
        
        Private columnLogo As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "Venta"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IdVentaTitColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIdVentaTit
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FechaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFecha
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CodigoClienteColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCodigoCliente
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NombreClienteColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNombreCliente
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RFCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRFC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RazonSocialColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRazonSocial
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SubTotalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSubTotal
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TotalDescuentosColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTotalDescuentos
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TotalImpuestosRetColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTotalImpuestosRet
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TotalImpuestosTrasColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTotalImpuestosTras
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TotalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTotal
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CondicionesPagoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCondicionesPago
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CajaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCaja
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CantidadColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCantidad
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CodigoConceptoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCodigoConcepto
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DescripcionConceptoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDescripcionConcepto
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PrecioUnitarioColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPrecioUnitario
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TipoCambioColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTipoCambio
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DivisaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDivisa
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DivisaAbrevColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDivisaAbrev
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NumPedimentoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNumPedimento
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FechaPedimentoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFechaPedimento
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AduanaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAduana
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property OrdenCompraColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOrdenCompra
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ReferenciaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnReferencia
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RazonSocialEmpresaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRazonSocialEmpresa
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property LogoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLogo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As VentaRow
            Get
                Return CType(Me.Rows(index),VentaRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event VentaRowChanging As VentaRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event VentaRowChanged As VentaRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event VentaRowDeleting As VentaRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event VentaRowDeleted As VentaRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddVentaRow(ByVal row As VentaRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddVentaRow( _
                    ByVal IdVentaTit As String,  _
                    ByVal Fecha As Date,  _
                    ByVal CodigoCliente As String,  _
                    ByVal NombreCliente As String,  _
                    ByVal RFC As String,  _
                    ByVal RazonSocial As String,  _
                    ByVal SubTotal As Decimal,  _
                    ByVal TotalDescuentos As Decimal,  _
                    ByVal TotalImpuestosRet As Decimal,  _
                    ByVal TotalImpuestosTras As Decimal,  _
                    ByVal Total As Decimal,  _
                    ByVal CondicionesPago As String,  _
                    ByVal Caja As String,  _
                    ByVal Cantidad As Decimal,  _
                    ByVal CodigoConcepto As String,  _
                    ByVal DescripcionConcepto As String,  _
                    ByVal PrecioUnitario As Decimal,  _
                    ByVal TipoCambio As Decimal,  _
                    ByVal Divisa As String,  _
                    ByVal DivisaAbrev As String,  _
                    ByVal NumPedimento As String,  _
                    ByVal FechaPedimento As Date,  _
                    ByVal Aduana As String,  _
                    ByVal OrdenCompra As String,  _
                    ByVal Referencia As String,  _
                    ByVal RazonSocialEmpresa As String,  _
                    ByVal Logo() As Byte) As VentaRow
            Dim rowVentaRow As VentaRow = CType(Me.NewRow,VentaRow)
            Dim columnValuesArray() As Object = New Object() {IdVentaTit, Fecha, CodigoCliente, NombreCliente, RFC, RazonSocial, SubTotal, TotalDescuentos, TotalImpuestosRet, TotalImpuestosTras, Total, CondicionesPago, Caja, Cantidad, CodigoConcepto, DescripcionConcepto, PrecioUnitario, TipoCambio, Divisa, DivisaAbrev, NumPedimento, FechaPedimento, Aduana, OrdenCompra, Referencia, RazonSocialEmpresa, Logo}
            rowVentaRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowVentaRow)
            Return rowVentaRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As VentaDataTable = CType(MyBase.Clone,VentaDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New VentaDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnIdVentaTit = MyBase.Columns("IdVentaTit")
            Me.columnFecha = MyBase.Columns("Fecha")
            Me.columnCodigoCliente = MyBase.Columns("CodigoCliente")
            Me.columnNombreCliente = MyBase.Columns("NombreCliente")
            Me.columnRFC = MyBase.Columns("RFC")
            Me.columnRazonSocial = MyBase.Columns("RazonSocial")
            Me.columnSubTotal = MyBase.Columns("SubTotal")
            Me.columnTotalDescuentos = MyBase.Columns("TotalDescuentos")
            Me.columnTotalImpuestosRet = MyBase.Columns("TotalImpuestosRet")
            Me.columnTotalImpuestosTras = MyBase.Columns("TotalImpuestosTras")
            Me.columnTotal = MyBase.Columns("Total")
            Me.columnCondicionesPago = MyBase.Columns("CondicionesPago")
            Me.columnCaja = MyBase.Columns("Caja")
            Me.columnCantidad = MyBase.Columns("Cantidad")
            Me.columnCodigoConcepto = MyBase.Columns("CodigoConcepto")
            Me.columnDescripcionConcepto = MyBase.Columns("DescripcionConcepto")
            Me.columnPrecioUnitario = MyBase.Columns("PrecioUnitario")
            Me.columnTipoCambio = MyBase.Columns("TipoCambio")
            Me.columnDivisa = MyBase.Columns("Divisa")
            Me.columnDivisaAbrev = MyBase.Columns("DivisaAbrev")
            Me.columnNumPedimento = MyBase.Columns("NumPedimento")
            Me.columnFechaPedimento = MyBase.Columns("FechaPedimento")
            Me.columnAduana = MyBase.Columns("Aduana")
            Me.columnOrdenCompra = MyBase.Columns("OrdenCompra")
            Me.columnReferencia = MyBase.Columns("Referencia")
            Me.columnRazonSocialEmpresa = MyBase.Columns("RazonSocialEmpresa")
            Me.columnLogo = MyBase.Columns("Logo")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnIdVentaTit = New Global.System.Data.DataColumn("IdVentaTit", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIdVentaTit)
            Me.columnFecha = New Global.System.Data.DataColumn("Fecha", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFecha)
            Me.columnCodigoCliente = New Global.System.Data.DataColumn("CodigoCliente", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCodigoCliente)
            Me.columnNombreCliente = New Global.System.Data.DataColumn("NombreCliente", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNombreCliente)
            Me.columnRFC = New Global.System.Data.DataColumn("RFC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRFC)
            Me.columnRazonSocial = New Global.System.Data.DataColumn("RazonSocial", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRazonSocial)
            Me.columnSubTotal = New Global.System.Data.DataColumn("SubTotal", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSubTotal)
            Me.columnTotalDescuentos = New Global.System.Data.DataColumn("TotalDescuentos", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTotalDescuentos)
            Me.columnTotalImpuestosRet = New Global.System.Data.DataColumn("TotalImpuestosRet", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTotalImpuestosRet)
            Me.columnTotalImpuestosTras = New Global.System.Data.DataColumn("TotalImpuestosTras", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTotalImpuestosTras)
            Me.columnTotal = New Global.System.Data.DataColumn("Total", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTotal)
            Me.columnCondicionesPago = New Global.System.Data.DataColumn("CondicionesPago", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCondicionesPago)
            Me.columnCaja = New Global.System.Data.DataColumn("Caja", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCaja)
            Me.columnCantidad = New Global.System.Data.DataColumn("Cantidad", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCantidad)
            Me.columnCodigoConcepto = New Global.System.Data.DataColumn("CodigoConcepto", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCodigoConcepto)
            Me.columnDescripcionConcepto = New Global.System.Data.DataColumn("DescripcionConcepto", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDescripcionConcepto)
            Me.columnPrecioUnitario = New Global.System.Data.DataColumn("PrecioUnitario", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPrecioUnitario)
            Me.columnTipoCambio = New Global.System.Data.DataColumn("TipoCambio", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTipoCambio)
            Me.columnDivisa = New Global.System.Data.DataColumn("Divisa", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDivisa)
            Me.columnDivisaAbrev = New Global.System.Data.DataColumn("DivisaAbrev", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDivisaAbrev)
            Me.columnNumPedimento = New Global.System.Data.DataColumn("NumPedimento", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNumPedimento)
            Me.columnFechaPedimento = New Global.System.Data.DataColumn("FechaPedimento", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFechaPedimento)
            Me.columnAduana = New Global.System.Data.DataColumn("Aduana", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAduana)
            Me.columnOrdenCompra = New Global.System.Data.DataColumn("OrdenCompra", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOrdenCompra)
            Me.columnReferencia = New Global.System.Data.DataColumn("Referencia", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnReferencia)
            Me.columnRazonSocialEmpresa = New Global.System.Data.DataColumn("RazonSocialEmpresa", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRazonSocialEmpresa)
            Me.columnLogo = New Global.System.Data.DataColumn("Logo", GetType(Byte()), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLogo)
            Me.columnIdVentaTit.AllowDBNull = false
            Me.columnIdVentaTit.MaxLength = 18
            Me.columnFecha.AllowDBNull = false
            Me.columnCodigoCliente.AllowDBNull = false
            Me.columnCodigoCliente.MaxLength = 32
            Me.columnNombreCliente.AllowDBNull = false
            Me.columnNombreCliente.MaxLength = 128
            Me.columnRFC.DefaultValue = CType("",String)
            Me.columnRazonSocial.DefaultValue = CType("",String)
            Me.columnSubTotal.AllowDBNull = false
            Me.columnTotalDescuentos.AllowDBNull = false
            Me.columnTotalImpuestosRet.AllowDBNull = false
            Me.columnTotalImpuestosTras.AllowDBNull = false
            Me.columnTotal.AllowDBNull = false
            Me.columnCondicionesPago.DefaultValue = CType("",String)
            Me.columnCaja.DefaultValue = CType("",String)
            Me.columnCantidad.AllowDBNull = false
            Me.columnCodigoConcepto.AllowDBNull = false
            Me.columnCodigoConcepto.MaxLength = 32
            Me.columnDescripcionConcepto.AllowDBNull = false
            Me.columnDescripcionConcepto.MaxLength = 1024
            Me.columnPrecioUnitario.AllowDBNull = false
            Me.columnTipoCambio.DefaultValue = CType(0D,Decimal)
            Me.columnDivisa.DefaultValue = CType("",String)
            Me.columnDivisaAbrev.DefaultValue = CType("",String)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewVentaRow() As VentaRow
            Return CType(Me.NewRow,VentaRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New VentaRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(VentaRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.VentaRowChangedEvent) Is Nothing) Then
                RaiseEvent VentaRowChanged(Me, New VentaRowChangeEvent(CType(e.Row,VentaRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.VentaRowChangingEvent) Is Nothing) Then
                RaiseEvent VentaRowChanging(Me, New VentaRowChangeEvent(CType(e.Row,VentaRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.VentaRowDeletedEvent) Is Nothing) Then
                RaiseEvent VentaRowDeleted(Me, New VentaRowChangeEvent(CType(e.Row,VentaRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.VentaRowDeletingEvent) Is Nothing) Then
                RaiseEvent VentaRowDeleting(Me, New VentaRowChangeEvent(CType(e.Row,VentaRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveVentaRow(ByVal row As VentaRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As InformesDS = New InformesDS()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "VentaDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class CorteCajaDataTable
        Inherits Global.System.Data.TypedTableBase(Of CorteCajaRow)
        
        Private columnCaja As Global.System.Data.DataColumn
        
        Private columnCajero As Global.System.Data.DataColumn
        
        Private columnFechaApertura As Global.System.Data.DataColumn
        
        Private columnHoraApertura As Global.System.Data.DataColumn
        
        Private columnFechaCierre As Global.System.Data.DataColumn
        
        Private columnHoraCierre As Global.System.Data.DataColumn
        
        Private columnFormaPago As Global.System.Data.DataColumn
        
        Private columnMonto As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "CorteCaja"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CajaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCaja
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CajeroColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCajero
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FechaAperturaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFechaApertura
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property HoraAperturaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHoraApertura
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FechaCierreColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFechaCierre
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property HoraCierreColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHoraCierre
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FormaPagoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFormaPago
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MontoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMonto
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As CorteCajaRow
            Get
                Return CType(Me.Rows(index),CorteCajaRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event CorteCajaRowChanging As CorteCajaRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event CorteCajaRowChanged As CorteCajaRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event CorteCajaRowDeleting As CorteCajaRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event CorteCajaRowDeleted As CorteCajaRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddCorteCajaRow(ByVal row As CorteCajaRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddCorteCajaRow(ByVal Caja As String, ByVal Cajero As String, ByVal FechaApertura As Date, ByVal HoraApertura As Date, ByVal FechaCierre As Date, ByVal HoraCierre As Date, ByVal FormaPago As String, ByVal Monto As Decimal) As CorteCajaRow
            Dim rowCorteCajaRow As CorteCajaRow = CType(Me.NewRow,CorteCajaRow)
            Dim columnValuesArray() As Object = New Object() {Caja, Cajero, FechaApertura, HoraApertura, FechaCierre, HoraCierre, FormaPago, Monto}
            rowCorteCajaRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowCorteCajaRow)
            Return rowCorteCajaRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As CorteCajaDataTable = CType(MyBase.Clone,CorteCajaDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New CorteCajaDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnCaja = MyBase.Columns("Caja")
            Me.columnCajero = MyBase.Columns("Cajero")
            Me.columnFechaApertura = MyBase.Columns("FechaApertura")
            Me.columnHoraApertura = MyBase.Columns("HoraApertura")
            Me.columnFechaCierre = MyBase.Columns("FechaCierre")
            Me.columnHoraCierre = MyBase.Columns("HoraCierre")
            Me.columnFormaPago = MyBase.Columns("FormaPago")
            Me.columnMonto = MyBase.Columns("Monto")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnCaja = New Global.System.Data.DataColumn("Caja", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCaja)
            Me.columnCajero = New Global.System.Data.DataColumn("Cajero", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCajero)
            Me.columnFechaApertura = New Global.System.Data.DataColumn("FechaApertura", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFechaApertura)
            Me.columnHoraApertura = New Global.System.Data.DataColumn("HoraApertura", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHoraApertura)
            Me.columnFechaCierre = New Global.System.Data.DataColumn("FechaCierre", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFechaCierre)
            Me.columnHoraCierre = New Global.System.Data.DataColumn("HoraCierre", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHoraCierre)
            Me.columnFormaPago = New Global.System.Data.DataColumn("FormaPago", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFormaPago)
            Me.columnMonto = New Global.System.Data.DataColumn("Monto", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMonto)
            Me.columnCaja.AllowDBNull = false
            Me.columnCaja.MaxLength = 64
            Me.columnCajero.ReadOnly = true
            Me.columnCajero.MaxLength = 258
            Me.columnFechaApertura.AllowDBNull = false
            Me.columnHoraApertura.AllowDBNull = false
            Me.columnFormaPago.AllowDBNull = false
            Me.columnFormaPago.MaxLength = 64
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewCorteCajaRow() As CorteCajaRow
            Return CType(Me.NewRow,CorteCajaRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New CorteCajaRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(CorteCajaRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.CorteCajaRowChangedEvent) Is Nothing) Then
                RaiseEvent CorteCajaRowChanged(Me, New CorteCajaRowChangeEvent(CType(e.Row,CorteCajaRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.CorteCajaRowChangingEvent) Is Nothing) Then
                RaiseEvent CorteCajaRowChanging(Me, New CorteCajaRowChangeEvent(CType(e.Row,CorteCajaRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.CorteCajaRowDeletedEvent) Is Nothing) Then
                RaiseEvent CorteCajaRowDeleted(Me, New CorteCajaRowChangeEvent(CType(e.Row,CorteCajaRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.CorteCajaRowDeletingEvent) Is Nothing) Then
                RaiseEvent CorteCajaRowDeleting(Me, New CorteCajaRowChangeEvent(CType(e.Row,CorteCajaRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveCorteCajaRow(ByVal row As CorteCajaRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As InformesDS = New InformesDS()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "CorteCajaDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class ImagenesDataTable
        Inherits Global.System.Data.TypedTableBase(Of ImagenesRow)
        
        Private columnLogo As Global.System.Data.DataColumn
        
        Private columnQrCode As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "Imagenes"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property LogoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLogo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property QrCodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnQrCode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As ImagenesRow
            Get
                Return CType(Me.Rows(index),ImagenesRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ImagenesRowChanging As ImagenesRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ImagenesRowChanged As ImagenesRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ImagenesRowDeleting As ImagenesRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ImagenesRowDeleted As ImagenesRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddImagenesRow(ByVal row As ImagenesRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddImagenesRow(ByVal Logo() As Byte, ByVal QrCode() As Byte) As ImagenesRow
            Dim rowImagenesRow As ImagenesRow = CType(Me.NewRow,ImagenesRow)
            Dim columnValuesArray() As Object = New Object() {Logo, QrCode}
            rowImagenesRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowImagenesRow)
            Return rowImagenesRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As ImagenesDataTable = CType(MyBase.Clone,ImagenesDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New ImagenesDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnLogo = MyBase.Columns("Logo")
            Me.columnQrCode = MyBase.Columns("QrCode")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnLogo = New Global.System.Data.DataColumn("Logo", GetType(Byte()), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLogo)
            Me.columnQrCode = New Global.System.Data.DataColumn("QrCode", GetType(Byte()), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnQrCode)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewImagenesRow() As ImagenesRow
            Return CType(Me.NewRow,ImagenesRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New ImagenesRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(ImagenesRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.ImagenesRowChangedEvent) Is Nothing) Then
                RaiseEvent ImagenesRowChanged(Me, New ImagenesRowChangeEvent(CType(e.Row,ImagenesRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.ImagenesRowChangingEvent) Is Nothing) Then
                RaiseEvent ImagenesRowChanging(Me, New ImagenesRowChangeEvent(CType(e.Row,ImagenesRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.ImagenesRowDeletedEvent) Is Nothing) Then
                RaiseEvent ImagenesRowDeleted(Me, New ImagenesRowChangeEvent(CType(e.Row,ImagenesRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.ImagenesRowDeletingEvent) Is Nothing) Then
                RaiseEvent ImagenesRowDeleting(Me, New ImagenesRowChangeEvent(CType(e.Row,ImagenesRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveImagenesRow(ByVal row As ImagenesRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As InformesDS = New InformesDS()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "ImagenesDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class FacturacionVTADataTable
        Inherits Global.System.Data.TypedTableBase(Of FacturacionVTARow)
        
        Private columnFechaComprobante As Global.System.Data.DataColumn
        
        Private columnFechaCancelacion As Global.System.Data.DataColumn
        
        Private columnIdCFDSerie As Global.System.Data.DataColumn
        
        Private columnFolio As Global.System.Data.DataColumn
        
        Private columnUUID As Global.System.Data.DataColumn
        
        Private columnIdDocumento As Global.System.Data.DataColumn
        
        Private columnActiva As Global.System.Data.DataColumn
        
        Private columnIdSucursal As Global.System.Data.DataColumn
        
        Private columnSucursal As Global.System.Data.DataColumn
        
        Private columnSerie As Global.System.Data.DataColumn
        
        Private columnIdCliente As Global.System.Data.DataColumn
        
        Private columnCodCliente As Global.System.Data.DataColumn
        
        Private columnRFC As Global.System.Data.DataColumn
        
        Private columnRazonSocial As Global.System.Data.DataColumn
        
        Private columnDivisa As Global.System.Data.DataColumn
        
        Private columnTotal As Global.System.Data.DataColumn
        
        Private columnSubtotal As Global.System.Data.DataColumn
        
        Private columnDescuentos As Global.System.Data.DataColumn
        
        Private columnImpuestos As Global.System.Data.DataColumn
        
        Private columnRetenciones As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "FacturacionVTA"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FechaComprobanteColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFechaComprobante
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FechaCancelacionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFechaCancelacion
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IdCFDSerieColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIdCFDSerie
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FolioColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFolio
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property UUIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUUID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IdDocumentoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIdDocumento
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ActivaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnActiva
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IdSucursalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIdSucursal
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SucursalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSucursal
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SerieColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSerie
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IdClienteColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIdCliente
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CodClienteColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCodCliente
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RFCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRFC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RazonSocialColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRazonSocial
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DivisaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDivisa
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TotalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTotal
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SubtotalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSubtotal
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DescuentosColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDescuentos
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ImpuestosColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnImpuestos
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RetencionesColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRetenciones
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As FacturacionVTARow
            Get
                Return CType(Me.Rows(index),FacturacionVTARow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event FacturacionVTARowChanging As FacturacionVTARowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event FacturacionVTARowChanged As FacturacionVTARowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event FacturacionVTARowDeleting As FacturacionVTARowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event FacturacionVTARowDeleted As FacturacionVTARowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddFacturacionVTARow(ByVal row As FacturacionVTARow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddFacturacionVTARow( _
                    ByVal FechaComprobante As Date,  _
                    ByVal FechaCancelacion As Date,  _
                    ByVal IdCFDSerie As Integer,  _
                    ByVal Folio As Integer,  _
                    ByVal UUID As String,  _
                    ByVal IdDocumento As String,  _
                    ByVal Activa As Boolean,  _
                    ByVal IdSucursal As Integer,  _
                    ByVal Sucursal As String,  _
                    ByVal Serie As String,  _
                    ByVal IdCliente As Integer,  _
                    ByVal CodCliente As String,  _
                    ByVal RFC As String,  _
                    ByVal RazonSocial As String,  _
                    ByVal Divisa As String,  _
                    ByVal Total As Decimal,  _
                    ByVal Subtotal As Decimal,  _
                    ByVal Descuentos As Decimal,  _
                    ByVal Impuestos As Decimal,  _
                    ByVal Retenciones As Decimal) As FacturacionVTARow
            Dim rowFacturacionVTARow As FacturacionVTARow = CType(Me.NewRow,FacturacionVTARow)
            Dim columnValuesArray() As Object = New Object() {FechaComprobante, FechaCancelacion, IdCFDSerie, Folio, UUID, IdDocumento, Activa, IdSucursal, Sucursal, Serie, IdCliente, CodCliente, RFC, RazonSocial, Divisa, Total, Subtotal, Descuentos, Impuestos, Retenciones}
            rowFacturacionVTARow.ItemArray = columnValuesArray
            Me.Rows.Add(rowFacturacionVTARow)
            Return rowFacturacionVTARow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByFechaComprobanteIdCFDSerieFolioUUID(ByVal FechaComprobante As Date, ByVal IdCFDSerie As Integer, ByVal Folio As Integer, ByVal UUID As String) As FacturacionVTARow
            Return CType(Me.Rows.Find(New Object() {FechaComprobante, IdCFDSerie, Folio, UUID}),FacturacionVTARow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As FacturacionVTADataTable = CType(MyBase.Clone,FacturacionVTADataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New FacturacionVTADataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnFechaComprobante = MyBase.Columns("FechaComprobante")
            Me.columnFechaCancelacion = MyBase.Columns("FechaCancelacion")
            Me.columnIdCFDSerie = MyBase.Columns("IdCFDSerie")
            Me.columnFolio = MyBase.Columns("Folio")
            Me.columnUUID = MyBase.Columns("UUID")
            Me.columnIdDocumento = MyBase.Columns("IdDocumento")
            Me.columnActiva = MyBase.Columns("Activa")
            Me.columnIdSucursal = MyBase.Columns("IdSucursal")
            Me.columnSucursal = MyBase.Columns("Sucursal")
            Me.columnSerie = MyBase.Columns("Serie")
            Me.columnIdCliente = MyBase.Columns("IdCliente")
            Me.columnCodCliente = MyBase.Columns("CodCliente")
            Me.columnRFC = MyBase.Columns("RFC")
            Me.columnRazonSocial = MyBase.Columns("RazonSocial")
            Me.columnDivisa = MyBase.Columns("Divisa")
            Me.columnTotal = MyBase.Columns("Total")
            Me.columnSubtotal = MyBase.Columns("Subtotal")
            Me.columnDescuentos = MyBase.Columns("Descuentos")
            Me.columnImpuestos = MyBase.Columns("Impuestos")
            Me.columnRetenciones = MyBase.Columns("Retenciones")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnFechaComprobante = New Global.System.Data.DataColumn("FechaComprobante", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFechaComprobante)
            Me.columnFechaCancelacion = New Global.System.Data.DataColumn("FechaCancelacion", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFechaCancelacion)
            Me.columnIdCFDSerie = New Global.System.Data.DataColumn("IdCFDSerie", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIdCFDSerie)
            Me.columnFolio = New Global.System.Data.DataColumn("Folio", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFolio)
            Me.columnUUID = New Global.System.Data.DataColumn("UUID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUUID)
            Me.columnIdDocumento = New Global.System.Data.DataColumn("IdDocumento", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIdDocumento)
            Me.columnActiva = New Global.System.Data.DataColumn("Activa", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnActiva)
            Me.columnIdSucursal = New Global.System.Data.DataColumn("IdSucursal", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIdSucursal)
            Me.columnSucursal = New Global.System.Data.DataColumn("Sucursal", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSucursal)
            Me.columnSerie = New Global.System.Data.DataColumn("Serie", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSerie)
            Me.columnIdCliente = New Global.System.Data.DataColumn("IdCliente", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIdCliente)
            Me.columnCodCliente = New Global.System.Data.DataColumn("CodCliente", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCodCliente)
            Me.columnRFC = New Global.System.Data.DataColumn("RFC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRFC)
            Me.columnRazonSocial = New Global.System.Data.DataColumn("RazonSocial", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRazonSocial)
            Me.columnDivisa = New Global.System.Data.DataColumn("Divisa", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDivisa)
            Me.columnTotal = New Global.System.Data.DataColumn("Total", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTotal)
            Me.columnSubtotal = New Global.System.Data.DataColumn("Subtotal", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSubtotal)
            Me.columnDescuentos = New Global.System.Data.DataColumn("Descuentos", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDescuentos)
            Me.columnImpuestos = New Global.System.Data.DataColumn("Impuestos", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnImpuestos)
            Me.columnRetenciones = New Global.System.Data.DataColumn("Retenciones", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRetenciones)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnFechaComprobante, Me.columnIdCFDSerie, Me.columnFolio, Me.columnUUID}, true))
            Me.columnFechaComprobante.AllowDBNull = false
            Me.columnIdCFDSerie.AllowDBNull = false
            Me.columnFolio.AllowDBNull = false
            Me.columnUUID.AllowDBNull = false
            Me.columnUUID.MaxLength = 36
            Me.columnIdDocumento.AllowDBNull = false
            Me.columnIdDocumento.MaxLength = 18
            Me.columnActiva.AllowDBNull = false
            Me.columnIdSucursal.AllowDBNull = false
            Me.columnSucursal.AllowDBNull = false
            Me.columnSucursal.MaxLength = 64
            Me.columnSerie.AllowDBNull = false
            Me.columnSerie.MaxLength = 10
            Me.columnCodCliente.AllowDBNull = false
            Me.columnCodCliente.MaxLength = 32
            Me.columnRFC.AllowDBNull = false
            Me.columnRFC.MaxLength = 16
            Me.columnRazonSocial.AllowDBNull = false
            Me.columnRazonSocial.MaxLength = 256
            Me.columnDivisa.AllowDBNull = false
            Me.columnDivisa.MaxLength = 32
            Me.columnTotal.ReadOnly = true
            Me.columnSubtotal.ReadOnly = true
            Me.columnDescuentos.ReadOnly = true
            Me.columnImpuestos.ReadOnly = true
            Me.columnRetenciones.ReadOnly = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewFacturacionVTARow() As FacturacionVTARow
            Return CType(Me.NewRow,FacturacionVTARow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New FacturacionVTARow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(FacturacionVTARow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.FacturacionVTARowChangedEvent) Is Nothing) Then
                RaiseEvent FacturacionVTARowChanged(Me, New FacturacionVTARowChangeEvent(CType(e.Row,FacturacionVTARow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.FacturacionVTARowChangingEvent) Is Nothing) Then
                RaiseEvent FacturacionVTARowChanging(Me, New FacturacionVTARowChangeEvent(CType(e.Row,FacturacionVTARow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.FacturacionVTARowDeletedEvent) Is Nothing) Then
                RaiseEvent FacturacionVTARowDeleted(Me, New FacturacionVTARowChangeEvent(CType(e.Row,FacturacionVTARow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.FacturacionVTARowDeletingEvent) Is Nothing) Then
                RaiseEvent FacturacionVTARowDeleting(Me, New FacturacionVTARowChangeEvent(CType(e.Row,FacturacionVTARow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveFacturacionVTARow(ByVal row As FacturacionVTARow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As InformesDS = New InformesDS()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "FacturacionVTADataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class FacturacionDetalleDataTable
        Inherits Global.System.Data.TypedTableBase(Of FacturacionDetalleRow)
        
        Private columnFechaComprobante As Global.System.Data.DataColumn
        
        Private columnFechaCancelacion As Global.System.Data.DataColumn
        
        Private columnIdCFDSerie As Global.System.Data.DataColumn
        
        Private columnFolio As Global.System.Data.DataColumn
        
        Private columnUUID As Global.System.Data.DataColumn
        
        Private columnIdDocumento As Global.System.Data.DataColumn
        
        Private columnActiva As Global.System.Data.DataColumn
        
        Private columnIdSucursal As Global.System.Data.DataColumn
        
        Private columnSucursal As Global.System.Data.DataColumn
        
        Private columnSerie As Global.System.Data.DataColumn
        
        Private columnIdCliente As Global.System.Data.DataColumn
        
        Private columnCodCliente As Global.System.Data.DataColumn
        
        Private columnRFC As Global.System.Data.DataColumn
        
        Private columnRazonSocial As Global.System.Data.DataColumn
        
        Private columnCodigo As Global.System.Data.DataColumn
        
        Private columnDescripcion As Global.System.Data.DataColumn
        
        Private columnCantidad As Global.System.Data.DataColumn
        
        Private columnUnidad As Global.System.Data.DataColumn
        
        Private columnPrecioUnitario As Global.System.Data.DataColumn
        
        Private columnImpuesto As Global.System.Data.DataColumn
        
        Private columnTotal As Global.System.Data.DataColumn
        
        Private columnDivisa As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "FacturacionDetalle"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FechaComprobanteColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFechaComprobante
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FechaCancelacionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFechaCancelacion
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IdCFDSerieColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIdCFDSerie
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FolioColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFolio
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property UUIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUUID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IdDocumentoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIdDocumento
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ActivaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnActiva
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IdSucursalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIdSucursal
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SucursalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSucursal
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SerieColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSerie
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IdClienteColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIdCliente
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CodClienteColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCodCliente
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RFCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRFC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RazonSocialColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRazonSocial
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CodigoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCodigo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DescripcionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDescripcion
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CantidadColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCantidad
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property UnidadColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUnidad
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PrecioUnitarioColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPrecioUnitario
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ImpuestoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnImpuesto
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TotalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTotal
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DivisaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDivisa
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As FacturacionDetalleRow
            Get
                Return CType(Me.Rows(index),FacturacionDetalleRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event FacturacionDetalleRowChanging As FacturacionDetalleRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event FacturacionDetalleRowChanged As FacturacionDetalleRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event FacturacionDetalleRowDeleting As FacturacionDetalleRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event FacturacionDetalleRowDeleted As FacturacionDetalleRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddFacturacionDetalleRow(ByVal row As FacturacionDetalleRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddFacturacionDetalleRow( _
                    ByVal FechaComprobante As Date,  _
                    ByVal FechaCancelacion As Date,  _
                    ByVal IdCFDSerie As Integer,  _
                    ByVal Folio As Integer,  _
                    ByVal UUID As String,  _
                    ByVal IdDocumento As String,  _
                    ByVal Activa As Boolean,  _
                    ByVal IdSucursal As Integer,  _
                    ByVal Sucursal As String,  _
                    ByVal Serie As String,  _
                    ByVal IdCliente As Integer,  _
                    ByVal CodCliente As String,  _
                    ByVal RFC As String,  _
                    ByVal RazonSocial As String,  _
                    ByVal Codigo As String,  _
                    ByVal Descripcion As String,  _
                    ByVal Cantidad As Decimal,  _
                    ByVal Unidad As String,  _
                    ByVal PrecioUnitario As Decimal,  _
                    ByVal Impuesto As Decimal,  _
                    ByVal Total As Decimal,  _
                    ByVal Divisa As String) As FacturacionDetalleRow
            Dim rowFacturacionDetalleRow As FacturacionDetalleRow = CType(Me.NewRow,FacturacionDetalleRow)
            Dim columnValuesArray() As Object = New Object() {FechaComprobante, FechaCancelacion, IdCFDSerie, Folio, UUID, IdDocumento, Activa, IdSucursal, Sucursal, Serie, IdCliente, CodCliente, RFC, RazonSocial, Codigo, Descripcion, Cantidad, Unidad, PrecioUnitario, Impuesto, Total, Divisa}
            rowFacturacionDetalleRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowFacturacionDetalleRow)
            Return rowFacturacionDetalleRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As FacturacionDetalleDataTable = CType(MyBase.Clone,FacturacionDetalleDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New FacturacionDetalleDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnFechaComprobante = MyBase.Columns("FechaComprobante")
            Me.columnFechaCancelacion = MyBase.Columns("FechaCancelacion")
            Me.columnIdCFDSerie = MyBase.Columns("IdCFDSerie")
            Me.columnFolio = MyBase.Columns("Folio")
            Me.columnUUID = MyBase.Columns("UUID")
            Me.columnIdDocumento = MyBase.Columns("IdDocumento")
            Me.columnActiva = MyBase.Columns("Activa")
            Me.columnIdSucursal = MyBase.Columns("IdSucursal")
            Me.columnSucursal = MyBase.Columns("Sucursal")
            Me.columnSerie = MyBase.Columns("Serie")
            Me.columnIdCliente = MyBase.Columns("IdCliente")
            Me.columnCodCliente = MyBase.Columns("CodCliente")
            Me.columnRFC = MyBase.Columns("RFC")
            Me.columnRazonSocial = MyBase.Columns("RazonSocial")
            Me.columnCodigo = MyBase.Columns("Codigo")
            Me.columnDescripcion = MyBase.Columns("Descripcion")
            Me.columnCantidad = MyBase.Columns("Cantidad")
            Me.columnUnidad = MyBase.Columns("Unidad")
            Me.columnPrecioUnitario = MyBase.Columns("PrecioUnitario")
            Me.columnImpuesto = MyBase.Columns("Impuesto")
            Me.columnTotal = MyBase.Columns("Total")
            Me.columnDivisa = MyBase.Columns("Divisa")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnFechaComprobante = New Global.System.Data.DataColumn("FechaComprobante", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFechaComprobante)
            Me.columnFechaCancelacion = New Global.System.Data.DataColumn("FechaCancelacion", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFechaCancelacion)
            Me.columnIdCFDSerie = New Global.System.Data.DataColumn("IdCFDSerie", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIdCFDSerie)
            Me.columnFolio = New Global.System.Data.DataColumn("Folio", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFolio)
            Me.columnUUID = New Global.System.Data.DataColumn("UUID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUUID)
            Me.columnIdDocumento = New Global.System.Data.DataColumn("IdDocumento", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIdDocumento)
            Me.columnActiva = New Global.System.Data.DataColumn("Activa", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnActiva)
            Me.columnIdSucursal = New Global.System.Data.DataColumn("IdSucursal", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIdSucursal)
            Me.columnSucursal = New Global.System.Data.DataColumn("Sucursal", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSucursal)
            Me.columnSerie = New Global.System.Data.DataColumn("Serie", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSerie)
            Me.columnIdCliente = New Global.System.Data.DataColumn("IdCliente", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIdCliente)
            Me.columnCodCliente = New Global.System.Data.DataColumn("CodCliente", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCodCliente)
            Me.columnRFC = New Global.System.Data.DataColumn("RFC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRFC)
            Me.columnRazonSocial = New Global.System.Data.DataColumn("RazonSocial", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRazonSocial)
            Me.columnCodigo = New Global.System.Data.DataColumn("Codigo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCodigo)
            Me.columnDescripcion = New Global.System.Data.DataColumn("Descripcion", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDescripcion)
            Me.columnCantidad = New Global.System.Data.DataColumn("Cantidad", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCantidad)
            Me.columnUnidad = New Global.System.Data.DataColumn("Unidad", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUnidad)
            Me.columnPrecioUnitario = New Global.System.Data.DataColumn("PrecioUnitario", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPrecioUnitario)
            Me.columnImpuesto = New Global.System.Data.DataColumn("Impuesto", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnImpuesto)
            Me.columnTotal = New Global.System.Data.DataColumn("Total", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTotal)
            Me.columnDivisa = New Global.System.Data.DataColumn("Divisa", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDivisa)
            Me.columnFechaComprobante.AllowDBNull = false
            Me.columnIdCFDSerie.AllowDBNull = false
            Me.columnFolio.AllowDBNull = false
            Me.columnUUID.AllowDBNull = false
            Me.columnUUID.MaxLength = 36
            Me.columnIdDocumento.AllowDBNull = false
            Me.columnIdDocumento.MaxLength = 18
            Me.columnActiva.AllowDBNull = false
            Me.columnIdSucursal.AllowDBNull = false
            Me.columnSucursal.AllowDBNull = false
            Me.columnSucursal.MaxLength = 64
            Me.columnSerie.AllowDBNull = false
            Me.columnSerie.MaxLength = 10
            Me.columnIdCliente.AllowDBNull = false
            Me.columnCodCliente.AllowDBNull = false
            Me.columnCodCliente.MaxLength = 32
            Me.columnRFC.AllowDBNull = false
            Me.columnRFC.MaxLength = 16
            Me.columnRazonSocial.AllowDBNull = false
            Me.columnRazonSocial.MaxLength = 256
            Me.columnCodigo.AllowDBNull = false
            Me.columnCodigo.MaxLength = 32
            Me.columnDescripcion.AllowDBNull = false
            Me.columnDescripcion.MaxLength = 1024
            Me.columnCantidad.AllowDBNull = false
            Me.columnUnidad.AllowDBNull = false
            Me.columnUnidad.MaxLength = 64
            Me.columnPrecioUnitario.AllowDBNull = false
            Me.columnImpuesto.ReadOnly = true
            Me.columnTotal.ReadOnly = true
            Me.columnDivisa.AllowDBNull = false
            Me.columnDivisa.MaxLength = 32
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewFacturacionDetalleRow() As FacturacionDetalleRow
            Return CType(Me.NewRow,FacturacionDetalleRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New FacturacionDetalleRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(FacturacionDetalleRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.FacturacionDetalleRowChangedEvent) Is Nothing) Then
                RaiseEvent FacturacionDetalleRowChanged(Me, New FacturacionDetalleRowChangeEvent(CType(e.Row,FacturacionDetalleRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.FacturacionDetalleRowChangingEvent) Is Nothing) Then
                RaiseEvent FacturacionDetalleRowChanging(Me, New FacturacionDetalleRowChangeEvent(CType(e.Row,FacturacionDetalleRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.FacturacionDetalleRowDeletedEvent) Is Nothing) Then
                RaiseEvent FacturacionDetalleRowDeleted(Me, New FacturacionDetalleRowChangeEvent(CType(e.Row,FacturacionDetalleRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.FacturacionDetalleRowDeletingEvent) Is Nothing) Then
                RaiseEvent FacturacionDetalleRowDeleting(Me, New FacturacionDetalleRowChangeEvent(CType(e.Row,FacturacionDetalleRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveFacturacionDetalleRow(ByVal row As FacturacionDetalleRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As InformesDS = New InformesDS()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "FacturacionDetalleDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class VentasGeneralDataTable
        Inherits Global.System.Data.TypedTableBase(Of VentasGeneralRow)
        
        Private columnIdVentaTit As Global.System.Data.DataColumn
        
        Private columnOrdenCompra As Global.System.Data.DataColumn
        
        Private columnFecha As Global.System.Data.DataColumn
        
        Private columnCliente As Global.System.Data.DataColumn
        
        Private columnCodigo As Global.System.Data.DataColumn
        
        Private columnProducto As Global.System.Data.DataColumn
        
        Private columnCantidad As Global.System.Data.DataColumn
        
        Private columnPrecioUnitario As Global.System.Data.DataColumn
        
        Private columnImporte As Global.System.Data.DataColumn
        
        Private columnStatus As Global.System.Data.DataColumn
        
        Private columnFolioFacturaExt As Global.System.Data.DataColumn
        
        Private columnOrdenTrabajo As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "VentasGeneral"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IdVentaTitColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIdVentaTit
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property OrdenCompraColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOrdenCompra
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FechaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFecha
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ClienteColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCliente
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CodigoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCodigo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ProductoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnProducto
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CantidadColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCantidad
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PrecioUnitarioColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPrecioUnitario
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ImporteColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnImporte
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property StatusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnStatus
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FolioFacturaExtColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFolioFacturaExt
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property OrdenTrabajoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOrdenTrabajo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As VentasGeneralRow
            Get
                Return CType(Me.Rows(index),VentasGeneralRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event VentasGeneralRowChanging As VentasGeneralRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event VentasGeneralRowChanged As VentasGeneralRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event VentasGeneralRowDeleting As VentasGeneralRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event VentasGeneralRowDeleted As VentasGeneralRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddVentasGeneralRow(ByVal row As VentasGeneralRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddVentasGeneralRow(ByVal IdVentaTit As String, ByVal OrdenCompra As String, ByVal Fecha As String, ByVal Cliente As String, ByVal Codigo As String, ByVal Producto As String, ByVal Cantidad As String, ByVal PrecioUnitario As String, ByVal Importe As String, ByVal Status As String, ByVal FolioFacturaExt As String, ByVal OrdenTrabajo As String) As VentasGeneralRow
            Dim rowVentasGeneralRow As VentasGeneralRow = CType(Me.NewRow,VentasGeneralRow)
            Dim columnValuesArray() As Object = New Object() {IdVentaTit, OrdenCompra, Fecha, Cliente, Codigo, Producto, Cantidad, PrecioUnitario, Importe, Status, FolioFacturaExt, OrdenTrabajo}
            rowVentasGeneralRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowVentasGeneralRow)
            Return rowVentasGeneralRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As VentasGeneralDataTable = CType(MyBase.Clone,VentasGeneralDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New VentasGeneralDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnIdVentaTit = MyBase.Columns("IdVentaTit")
            Me.columnOrdenCompra = MyBase.Columns("OrdenCompra")
            Me.columnFecha = MyBase.Columns("Fecha")
            Me.columnCliente = MyBase.Columns("Cliente")
            Me.columnCodigo = MyBase.Columns("Codigo")
            Me.columnProducto = MyBase.Columns("Producto")
            Me.columnCantidad = MyBase.Columns("Cantidad")
            Me.columnPrecioUnitario = MyBase.Columns("PrecioUnitario")
            Me.columnImporte = MyBase.Columns("Importe")
            Me.columnStatus = MyBase.Columns("Status")
            Me.columnFolioFacturaExt = MyBase.Columns("FolioFacturaExt")
            Me.columnOrdenTrabajo = MyBase.Columns("OrdenTrabajo")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnIdVentaTit = New Global.System.Data.DataColumn("IdVentaTit", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIdVentaTit)
            Me.columnOrdenCompra = New Global.System.Data.DataColumn("OrdenCompra", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOrdenCompra)
            Me.columnFecha = New Global.System.Data.DataColumn("Fecha", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFecha)
            Me.columnCliente = New Global.System.Data.DataColumn("Cliente", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCliente)
            Me.columnCodigo = New Global.System.Data.DataColumn("Codigo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCodigo)
            Me.columnProducto = New Global.System.Data.DataColumn("Producto", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnProducto)
            Me.columnCantidad = New Global.System.Data.DataColumn("Cantidad", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCantidad)
            Me.columnPrecioUnitario = New Global.System.Data.DataColumn("PrecioUnitario", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPrecioUnitario)
            Me.columnImporte = New Global.System.Data.DataColumn("Importe", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnImporte)
            Me.columnStatus = New Global.System.Data.DataColumn("Status", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStatus)
            Me.columnFolioFacturaExt = New Global.System.Data.DataColumn("FolioFacturaExt", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFolioFacturaExt)
            Me.columnOrdenTrabajo = New Global.System.Data.DataColumn("OrdenTrabajo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOrdenTrabajo)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewVentasGeneralRow() As VentasGeneralRow
            Return CType(Me.NewRow,VentasGeneralRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New VentasGeneralRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(VentasGeneralRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.VentasGeneralRowChangedEvent) Is Nothing) Then
                RaiseEvent VentasGeneralRowChanged(Me, New VentasGeneralRowChangeEvent(CType(e.Row,VentasGeneralRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.VentasGeneralRowChangingEvent) Is Nothing) Then
                RaiseEvent VentasGeneralRowChanging(Me, New VentasGeneralRowChangeEvent(CType(e.Row,VentasGeneralRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.VentasGeneralRowDeletedEvent) Is Nothing) Then
                RaiseEvent VentasGeneralRowDeleted(Me, New VentasGeneralRowChangeEvent(CType(e.Row,VentasGeneralRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.VentasGeneralRowDeletingEvent) Is Nothing) Then
                RaiseEvent VentasGeneralRowDeleting(Me, New VentasGeneralRowChangeEvent(CType(e.Row,VentasGeneralRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveVentasGeneralRow(ByVal row As VentasGeneralRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As InformesDS = New InformesDS()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "VentasGeneralDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class FacturasRow
        Inherits Global.System.Data.DataRow
        
        Private tableFacturas As FacturasDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableFacturas = CType(Me.Table,FacturasDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Serie() As String
            Get
                Return CType(Me(Me.tableFacturas.SerieColumn),String)
            End Get
            Set
                Me(Me.tableFacturas.SerieColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Folio() As Integer
            Get
                Return CType(Me(Me.tableFacturas.FolioColumn),Integer)
            End Get
            Set
                Me(Me.tableFacturas.FolioColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property UUID() As String
            Get
                Try 
                    Return CType(Me(Me.tableFacturas.UUIDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'UUID' in table 'Facturas' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFacturas.UUIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FechaFactura() As Date
            Get
                Return CType(Me(Me.tableFacturas.FechaFacturaColumn),Date)
            End Get
            Set
                Me(Me.tableFacturas.FechaFacturaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FechaTimbrado() As Date
            Get
                Try 
                    Return CType(Me(Me.tableFacturas.FechaTimbradoColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FechaTimbrado' in table 'Facturas' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFacturas.FechaTimbradoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FacturaLetra() As String
            Get
                Try 
                    Return CType(Me(Me.tableFacturas.FacturaLetraColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FacturaLetra' in table 'Facturas' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFacturas.FacturaLetraColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SubTotal() As Decimal
            Get
                Return CType(Me(Me.tableFacturas.SubTotalColumn),Decimal)
            End Get
            Set
                Me(Me.tableFacturas.SubTotalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TotalDescuentos() As Decimal
            Get
                Return CType(Me(Me.tableFacturas.TotalDescuentosColumn),Decimal)
            End Get
            Set
                Me(Me.tableFacturas.TotalDescuentosColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MotivoDescuentos() As String
            Get
                Try 
                    Return CType(Me(Me.tableFacturas.MotivoDescuentosColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MotivoDescuentos' in table 'Facturas' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFacturas.MotivoDescuentosColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ImpTrasladados() As Decimal
            Get
                Return CType(Me(Me.tableFacturas.ImpTrasladadosColumn),Decimal)
            End Get
            Set
                Me(Me.tableFacturas.ImpTrasladadosColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ImpRetenidos() As Decimal
            Get
                Return CType(Me(Me.tableFacturas.ImpRetenidosColumn),Decimal)
            End Get
            Set
                Me(Me.tableFacturas.ImpRetenidosColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Total() As Decimal
            Get
                Return CType(Me(Me.tableFacturas.TotalColumn),Decimal)
            End Get
            Set
                Me(Me.tableFacturas.TotalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TotalLetra() As String
            Get
                Try 
                    Return CType(Me(Me.tableFacturas.TotalLetraColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TotalLetra' in table 'Facturas' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFacturas.TotalLetraColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property IdDocumento() As String
            Get
                Try 
                    Return CType(Me(Me.tableFacturas.IdDocumentoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IdDocumento' in table 'Facturas' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFacturas.IdDocumentoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Referencia() As String
            Get
                Try 
                    Return CType(Me(Me.tableFacturas.ReferenciaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Referencia' in table 'Facturas' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFacturas.ReferenciaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Divisa() As String
            Get
                Try 
                    Return CType(Me(Me.tableFacturas.DivisaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Divisa' in table 'Facturas' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFacturas.DivisaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AbrevDivisa() As String
            Get
                Try 
                    Return CType(Me(Me.tableFacturas.AbrevDivisaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AbrevDivisa' in table 'Facturas' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFacturas.AbrevDivisaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Activa() As Boolean
            Get
                Return CType(Me(Me.tableFacturas.ActivaColumn),Boolean)
            End Get
            Set
                Me(Me.tableFacturas.ActivaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TipoPago() As String
            Get
                Try 
                    Return CType(Me(Me.tableFacturas.TipoPagoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TipoPago' in table 'Facturas' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFacturas.TipoPagoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DiasCredito() As Integer
            Get
                Return CType(Me(Me.tableFacturas.DiasCreditoColumn),Integer)
            End Get
            Set
                Me(Me.tableFacturas.DiasCreditoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CodigoCliente() As String
            Get
                Return CType(Me(Me.tableFacturas.CodigoClienteColumn),String)
            End Get
            Set
                Me(Me.tableFacturas.CodigoClienteColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RFC() As String
            Get
                Try 
                    Return CType(Me(Me.tableFacturas.RFCColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RFC' in table 'Facturas' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFacturas.RFCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RazonSocial() As String
            Get
                Try 
                    Return CType(Me(Me.tableFacturas.RazonSocialColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RazonSocial' in table 'Facturas' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFacturas.RazonSocialColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CalleFIS() As String
            Get
                Try 
                    Return CType(Me(Me.tableFacturas.CalleFISColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CalleFIS' in table 'Facturas' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFacturas.CalleFISColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NumExtFIS() As String
            Get
                Try 
                    Return CType(Me(Me.tableFacturas.NumExtFISColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NumExtFIS' in table 'Facturas' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFacturas.NumExtFISColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NumIntFIS() As String
            Get
                Try 
                    Return CType(Me(Me.tableFacturas.NumIntFISColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NumIntFIS' in table 'Facturas' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFacturas.NumIntFISColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ColoniaFIS() As String
            Get
                Try 
                    Return CType(Me(Me.tableFacturas.ColoniaFISColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ColoniaFIS' in table 'Facturas' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFacturas.ColoniaFISColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CPCliente() As String
            Get
                Try 
                    Return CType(Me(Me.tableFacturas.CPClienteColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CPCliente' in table 'Facturas' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFacturas.CPClienteColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PoblacionCliente() As String
            Get
                Try 
                    Return CType(Me(Me.tableFacturas.PoblacionClienteColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PoblacionCliente' in table 'Facturas' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFacturas.PoblacionClienteColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property EstadoCliente() As String
            Get
                Try 
                    Return CType(Me(Me.tableFacturas.EstadoClienteColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EstadoCliente' in table 'Facturas' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFacturas.EstadoClienteColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CalleSucursal() As String
            Get
                Try 
                    Return CType(Me(Me.tableFacturas.CalleSucursalColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CalleSucursal' in table 'Facturas' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFacturas.CalleSucursalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NumExtSucursal() As String
            Get
                Try 
                    Return CType(Me(Me.tableFacturas.NumExtSucursalColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NumExtSucursal' in table 'Facturas' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFacturas.NumExtSucursalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NumIntSucursal() As String
            Get
                Try 
                    Return CType(Me(Me.tableFacturas.NumIntSucursalColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NumIntSucursal' in table 'Facturas' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFacturas.NumIntSucursalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ColoniaSucursal() As String
            Get
                Try 
                    Return CType(Me(Me.tableFacturas.ColoniaSucursalColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ColoniaSucursal' in table 'Facturas' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFacturas.ColoniaSucursalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CPSucursal() As String
            Get
                Try 
                    Return CType(Me(Me.tableFacturas.CPSucursalColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CPSucursal' in table 'Facturas' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFacturas.CPSucursalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PoblacionSucursal() As String
            Get
                Try 
                    Return CType(Me(Me.tableFacturas.PoblacionSucursalColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PoblacionSucursal' in table 'Facturas' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFacturas.PoblacionSucursalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property EstadoSucursal() As String
            Get
                Try 
                    Return CType(Me(Me.tableFacturas.EstadoSucursalColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EstadoSucursal' in table 'Facturas' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFacturas.EstadoSucursalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TelefonoSucursal() As String
            Get
                Return CType(Me(Me.tableFacturas.TelefonoSucursalColumn),String)
            End Get
            Set
                Me(Me.tableFacturas.TelefonoSucursalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property EmailSucursal() As String
            Get
                Return CType(Me(Me.tableFacturas.EmailSucursalColumn),String)
            End Get
            Set
                Me(Me.tableFacturas.EmailSucursalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CodigoConcepto() As String
            Get
                Return CType(Me(Me.tableFacturas.CodigoConceptoColumn),String)
            End Get
            Set
                Me(Me.tableFacturas.CodigoConceptoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DescripcionConcepto() As String
            Get
                Return CType(Me(Me.tableFacturas.DescripcionConceptoColumn),String)
            End Get
            Set
                Me(Me.tableFacturas.DescripcionConceptoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FactorUnidad() As Integer
            Get
                Return CType(Me(Me.tableFacturas.FactorUnidadColumn),Integer)
            End Get
            Set
                Me(Me.tableFacturas.FactorUnidadColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property UnidadMedida() As String
            Get
                Return CType(Me(Me.tableFacturas.UnidadMedidaColumn),String)
            End Get
            Set
                Me(Me.tableFacturas.UnidadMedidaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Cantidad() As Decimal
            Get
                Return CType(Me(Me.tableFacturas.CantidadColumn),Decimal)
            End Get
            Set
                Me(Me.tableFacturas.CantidadColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PrecioUnitario() As Decimal
            Get
                Return CType(Me(Me.tableFacturas.PrecioUnitarioColumn),Decimal)
            End Get
            Set
                Me(Me.tableFacturas.PrecioUnitarioColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PorcImpTras1() As Decimal
            Get
                Return CType(Me(Me.tableFacturas.PorcImpTras1Column),Decimal)
            End Get
            Set
                Me(Me.tableFacturas.PorcImpTras1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PorcImpTras2() As Decimal
            Get
                Return CType(Me(Me.tableFacturas.PorcImpTras2Column),Decimal)
            End Get
            Set
                Me(Me.tableFacturas.PorcImpTras2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PorcImpRet1() As Decimal
            Get
                Return CType(Me(Me.tableFacturas.PorcImpRet1Column),Decimal)
            End Get
            Set
                Me(Me.tableFacturas.PorcImpRet1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PorcImpRet2() As Decimal
            Get
                Return CType(Me(Me.tableFacturas.PorcImpRet2Column),Decimal)
            End Get
            Set
                Me(Me.tableFacturas.PorcImpRet2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DescUnitario() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableFacturas.DescUnitarioColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DescUnitario' in table 'Facturas' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFacturas.DescUnitarioColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CadenaOriginal() As String
            Get
                Try 
                    Return CType(Me(Me.tableFacturas.CadenaOriginalColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CadenaOriginal' in table 'Facturas' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFacturas.CadenaOriginalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SelloDigital() As String
            Get
                Return CType(Me(Me.tableFacturas.SelloDigitalColumn),String)
            End Get
            Set
                Me(Me.tableFacturas.SelloDigitalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NumCertificado() As String
            Get
                Return CType(Me(Me.tableFacturas.NumCertificadoColumn),String)
            End Get
            Set
                Me(Me.tableFacturas.NumCertificadoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NumAprobacion() As Integer
            Get
                Return CType(Me(Me.tableFacturas.NumAprobacionColumn),Integer)
            End Get
            Set
                Me(Me.tableFacturas.NumAprobacionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AnioAprobacion() As Integer
            Get
                Return CType(Me(Me.tableFacturas.AnioAprobacionColumn),Integer)
            End Get
            Set
                Me(Me.tableFacturas.AnioAprobacionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CadenaOriginalCert() As String
            Get
                Try 
                    Return CType(Me(Me.tableFacturas.CadenaOriginalCertColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CadenaOriginalCert' in table 'Facturas' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFacturas.CadenaOriginalCertColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NumCertificadoSAT() As String
            Get
                Try 
                    Return CType(Me(Me.tableFacturas.NumCertificadoSATColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NumCertificadoSAT' in table 'Facturas' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFacturas.NumCertificadoSATColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SelloSAT() As String
            Get
                Try 
                    Return CType(Me(Me.tableFacturas.SelloSATColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SelloSAT' in table 'Facturas' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFacturas.SelloSATColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RFCEmisor() As String
            Get
                Try 
                    Return CType(Me(Me.tableFacturas.RFCEmisorColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RFCEmisor' in table 'Facturas' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFacturas.RFCEmisorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RazonSocialEmisor() As String
            Get
                Try 
                    Return CType(Me(Me.tableFacturas.RazonSocialEmisorColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RazonSocialEmisor' in table 'Facturas' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFacturas.RazonSocialEmisorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CalleEmisor() As String
            Get
                Try 
                    Return CType(Me(Me.tableFacturas.CalleEmisorColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CalleEmisor' in table 'Facturas' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFacturas.CalleEmisorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NumExtEmisor() As String
            Get
                Try 
                    Return CType(Me(Me.tableFacturas.NumExtEmisorColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NumExtEmisor' in table 'Facturas' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFacturas.NumExtEmisorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NumIntEmisor() As String
            Get
                Try 
                    Return CType(Me(Me.tableFacturas.NumIntEmisorColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NumIntEmisor' in table 'Facturas' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFacturas.NumIntEmisorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ColoniaEmisor() As String
            Get
                Try 
                    Return CType(Me(Me.tableFacturas.ColoniaEmisorColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ColoniaEmisor' in table 'Facturas' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFacturas.ColoniaEmisorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CPEmisor() As String
            Get
                Try 
                    Return CType(Me(Me.tableFacturas.CPEmisorColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CPEmisor' in table 'Facturas' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFacturas.CPEmisorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PoblacionEmisor() As String
            Get
                Try 
                    Return CType(Me(Me.tableFacturas.PoblacionEmisorColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PoblacionEmisor' in table 'Facturas' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFacturas.PoblacionEmisorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property EstadoEmisor() As String
            Get
                Try 
                    Return CType(Me(Me.tableFacturas.EstadoEmisorColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EstadoEmisor' in table 'Facturas' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFacturas.EstadoEmisorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MunicipioEmisor() As String
            Get
                Try 
                    Return CType(Me(Me.tableFacturas.MunicipioEmisorColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MunicipioEmisor' in table 'Facturas' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFacturas.MunicipioEmisorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MetodoPago() As String
            Get
                Try 
                    Return CType(Me(Me.tableFacturas.MetodoPagoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MetodoPago' in table 'Facturas' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFacturas.MetodoPagoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CuentaPago() As String
            Get
                Try 
                    Return CType(Me(Me.tableFacturas.CuentaPagoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CuentaPago' in table 'Facturas' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFacturas.CuentaPagoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FormaPago() As String
            Get
                Try 
                    Return CType(Me(Me.tableFacturas.FormaPagoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FormaPago' in table 'Facturas' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFacturas.FormaPagoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RegimenFiscal() As String
            Get
                Try 
                    Return CType(Me(Me.tableFacturas.RegimenFiscalColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RegimenFiscal' in table 'Facturas' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFacturas.RegimenFiscalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property QrCode() As Byte()
            Get
                Try 
                    Return CType(Me(Me.tableFacturas.QrCodeColumn),Byte())
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'QrCode' in table 'Facturas' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFacturas.QrCodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NumPedimento() As String
            Get
                Try 
                    Return CType(Me(Me.tableFacturas.NumPedimentoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NumPedimento' in table 'Facturas' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFacturas.NumPedimentoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FechaPedimento() As Date
            Get
                Try 
                    Return CType(Me(Me.tableFacturas.FechaPedimentoColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FechaPedimento' in table 'Facturas' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFacturas.FechaPedimentoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Aduana() As String
            Get
                Try 
                    Return CType(Me(Me.tableFacturas.AduanaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Aduana' in table 'Facturas' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFacturas.AduanaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Observaciones() As String
            Get
                Try 
                    Return CType(Me(Me.tableFacturas.ObservacionesColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Observaciones' in table 'Facturas' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFacturas.ObservacionesColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsUUIDNull() As Boolean
            Return Me.IsNull(Me.tableFacturas.UUIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetUUIDNull()
            Me(Me.tableFacturas.UUIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFechaTimbradoNull() As Boolean
            Return Me.IsNull(Me.tableFacturas.FechaTimbradoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFechaTimbradoNull()
            Me(Me.tableFacturas.FechaTimbradoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFacturaLetraNull() As Boolean
            Return Me.IsNull(Me.tableFacturas.FacturaLetraColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFacturaLetraNull()
            Me(Me.tableFacturas.FacturaLetraColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMotivoDescuentosNull() As Boolean
            Return Me.IsNull(Me.tableFacturas.MotivoDescuentosColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMotivoDescuentosNull()
            Me(Me.tableFacturas.MotivoDescuentosColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTotalLetraNull() As Boolean
            Return Me.IsNull(Me.tableFacturas.TotalLetraColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTotalLetraNull()
            Me(Me.tableFacturas.TotalLetraColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsIdDocumentoNull() As Boolean
            Return Me.IsNull(Me.tableFacturas.IdDocumentoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetIdDocumentoNull()
            Me(Me.tableFacturas.IdDocumentoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsReferenciaNull() As Boolean
            Return Me.IsNull(Me.tableFacturas.ReferenciaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetReferenciaNull()
            Me(Me.tableFacturas.ReferenciaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDivisaNull() As Boolean
            Return Me.IsNull(Me.tableFacturas.DivisaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDivisaNull()
            Me(Me.tableFacturas.DivisaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAbrevDivisaNull() As Boolean
            Return Me.IsNull(Me.tableFacturas.AbrevDivisaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAbrevDivisaNull()
            Me(Me.tableFacturas.AbrevDivisaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTipoPagoNull() As Boolean
            Return Me.IsNull(Me.tableFacturas.TipoPagoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTipoPagoNull()
            Me(Me.tableFacturas.TipoPagoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRFCNull() As Boolean
            Return Me.IsNull(Me.tableFacturas.RFCColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRFCNull()
            Me(Me.tableFacturas.RFCColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRazonSocialNull() As Boolean
            Return Me.IsNull(Me.tableFacturas.RazonSocialColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRazonSocialNull()
            Me(Me.tableFacturas.RazonSocialColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCalleFISNull() As Boolean
            Return Me.IsNull(Me.tableFacturas.CalleFISColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCalleFISNull()
            Me(Me.tableFacturas.CalleFISColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNumExtFISNull() As Boolean
            Return Me.IsNull(Me.tableFacturas.NumExtFISColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNumExtFISNull()
            Me(Me.tableFacturas.NumExtFISColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNumIntFISNull() As Boolean
            Return Me.IsNull(Me.tableFacturas.NumIntFISColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNumIntFISNull()
            Me(Me.tableFacturas.NumIntFISColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsColoniaFISNull() As Boolean
            Return Me.IsNull(Me.tableFacturas.ColoniaFISColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetColoniaFISNull()
            Me(Me.tableFacturas.ColoniaFISColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCPClienteNull() As Boolean
            Return Me.IsNull(Me.tableFacturas.CPClienteColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCPClienteNull()
            Me(Me.tableFacturas.CPClienteColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPoblacionClienteNull() As Boolean
            Return Me.IsNull(Me.tableFacturas.PoblacionClienteColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPoblacionClienteNull()
            Me(Me.tableFacturas.PoblacionClienteColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsEstadoClienteNull() As Boolean
            Return Me.IsNull(Me.tableFacturas.EstadoClienteColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetEstadoClienteNull()
            Me(Me.tableFacturas.EstadoClienteColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCalleSucursalNull() As Boolean
            Return Me.IsNull(Me.tableFacturas.CalleSucursalColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCalleSucursalNull()
            Me(Me.tableFacturas.CalleSucursalColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNumExtSucursalNull() As Boolean
            Return Me.IsNull(Me.tableFacturas.NumExtSucursalColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNumExtSucursalNull()
            Me(Me.tableFacturas.NumExtSucursalColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNumIntSucursalNull() As Boolean
            Return Me.IsNull(Me.tableFacturas.NumIntSucursalColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNumIntSucursalNull()
            Me(Me.tableFacturas.NumIntSucursalColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsColoniaSucursalNull() As Boolean
            Return Me.IsNull(Me.tableFacturas.ColoniaSucursalColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetColoniaSucursalNull()
            Me(Me.tableFacturas.ColoniaSucursalColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCPSucursalNull() As Boolean
            Return Me.IsNull(Me.tableFacturas.CPSucursalColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCPSucursalNull()
            Me(Me.tableFacturas.CPSucursalColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPoblacionSucursalNull() As Boolean
            Return Me.IsNull(Me.tableFacturas.PoblacionSucursalColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPoblacionSucursalNull()
            Me(Me.tableFacturas.PoblacionSucursalColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsEstadoSucursalNull() As Boolean
            Return Me.IsNull(Me.tableFacturas.EstadoSucursalColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetEstadoSucursalNull()
            Me(Me.tableFacturas.EstadoSucursalColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDescUnitarioNull() As Boolean
            Return Me.IsNull(Me.tableFacturas.DescUnitarioColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDescUnitarioNull()
            Me(Me.tableFacturas.DescUnitarioColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCadenaOriginalNull() As Boolean
            Return Me.IsNull(Me.tableFacturas.CadenaOriginalColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCadenaOriginalNull()
            Me(Me.tableFacturas.CadenaOriginalColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCadenaOriginalCertNull() As Boolean
            Return Me.IsNull(Me.tableFacturas.CadenaOriginalCertColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCadenaOriginalCertNull()
            Me(Me.tableFacturas.CadenaOriginalCertColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNumCertificadoSATNull() As Boolean
            Return Me.IsNull(Me.tableFacturas.NumCertificadoSATColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNumCertificadoSATNull()
            Me(Me.tableFacturas.NumCertificadoSATColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSelloSATNull() As Boolean
            Return Me.IsNull(Me.tableFacturas.SelloSATColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSelloSATNull()
            Me(Me.tableFacturas.SelloSATColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRFCEmisorNull() As Boolean
            Return Me.IsNull(Me.tableFacturas.RFCEmisorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRFCEmisorNull()
            Me(Me.tableFacturas.RFCEmisorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRazonSocialEmisorNull() As Boolean
            Return Me.IsNull(Me.tableFacturas.RazonSocialEmisorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRazonSocialEmisorNull()
            Me(Me.tableFacturas.RazonSocialEmisorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCalleEmisorNull() As Boolean
            Return Me.IsNull(Me.tableFacturas.CalleEmisorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCalleEmisorNull()
            Me(Me.tableFacturas.CalleEmisorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNumExtEmisorNull() As Boolean
            Return Me.IsNull(Me.tableFacturas.NumExtEmisorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNumExtEmisorNull()
            Me(Me.tableFacturas.NumExtEmisorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNumIntEmisorNull() As Boolean
            Return Me.IsNull(Me.tableFacturas.NumIntEmisorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNumIntEmisorNull()
            Me(Me.tableFacturas.NumIntEmisorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsColoniaEmisorNull() As Boolean
            Return Me.IsNull(Me.tableFacturas.ColoniaEmisorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetColoniaEmisorNull()
            Me(Me.tableFacturas.ColoniaEmisorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCPEmisorNull() As Boolean
            Return Me.IsNull(Me.tableFacturas.CPEmisorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCPEmisorNull()
            Me(Me.tableFacturas.CPEmisorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPoblacionEmisorNull() As Boolean
            Return Me.IsNull(Me.tableFacturas.PoblacionEmisorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPoblacionEmisorNull()
            Me(Me.tableFacturas.PoblacionEmisorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsEstadoEmisorNull() As Boolean
            Return Me.IsNull(Me.tableFacturas.EstadoEmisorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetEstadoEmisorNull()
            Me(Me.tableFacturas.EstadoEmisorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMunicipioEmisorNull() As Boolean
            Return Me.IsNull(Me.tableFacturas.MunicipioEmisorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMunicipioEmisorNull()
            Me(Me.tableFacturas.MunicipioEmisorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMetodoPagoNull() As Boolean
            Return Me.IsNull(Me.tableFacturas.MetodoPagoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMetodoPagoNull()
            Me(Me.tableFacturas.MetodoPagoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCuentaPagoNull() As Boolean
            Return Me.IsNull(Me.tableFacturas.CuentaPagoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCuentaPagoNull()
            Me(Me.tableFacturas.CuentaPagoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFormaPagoNull() As Boolean
            Return Me.IsNull(Me.tableFacturas.FormaPagoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFormaPagoNull()
            Me(Me.tableFacturas.FormaPagoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRegimenFiscalNull() As Boolean
            Return Me.IsNull(Me.tableFacturas.RegimenFiscalColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRegimenFiscalNull()
            Me(Me.tableFacturas.RegimenFiscalColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsQrCodeNull() As Boolean
            Return Me.IsNull(Me.tableFacturas.QrCodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetQrCodeNull()
            Me(Me.tableFacturas.QrCodeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNumPedimentoNull() As Boolean
            Return Me.IsNull(Me.tableFacturas.NumPedimentoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNumPedimentoNull()
            Me(Me.tableFacturas.NumPedimentoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFechaPedimentoNull() As Boolean
            Return Me.IsNull(Me.tableFacturas.FechaPedimentoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFechaPedimentoNull()
            Me(Me.tableFacturas.FechaPedimentoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAduanaNull() As Boolean
            Return Me.IsNull(Me.tableFacturas.AduanaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAduanaNull()
            Me(Me.tableFacturas.AduanaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsObservacionesNull() As Boolean
            Return Me.IsNull(Me.tableFacturas.ObservacionesColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetObservacionesNull()
            Me(Me.tableFacturas.ObservacionesColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class FacturasListRow
        Inherits Global.System.Data.DataRow
        
        Private tableFacturasList As FacturasListDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableFacturasList = CType(Me.Table,FacturasListDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FechaComprobante() As Date
            Get
                Try 
                    Return CType(Me(Me.tableFacturasList.FechaComprobanteColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FechaComprobante' in table 'FacturasList' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFacturasList.FechaComprobanteColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property HoraComprobante() As Date
            Get
                Try 
                    Return CType(Me(Me.tableFacturasList.HoraComprobanteColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HoraComprobante' in table 'FacturasList' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFacturasList.HoraComprobanteColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property IdCFDSerie() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableFacturasList.IdCFDSerieColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IdCFDSerie' in table 'FacturasList' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFacturasList.IdCFDSerieColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Serie() As String
            Get
                Return CType(Me(Me.tableFacturasList.SerieColumn),String)
            End Get
            Set
                Me(Me.tableFacturasList.SerieColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Folio() As Integer
            Get
                Return CType(Me(Me.tableFacturasList.FolioColumn),Integer)
            End Get
            Set
                Me(Me.tableFacturasList.FolioColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property UUID() As String
            Get
                Try 
                    Return CType(Me(Me.tableFacturasList.UUIDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'UUID' in table 'FacturasList' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFacturasList.UUIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property IdCliente() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableFacturasList.IdClienteColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IdCliente' in table 'FacturasList' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFacturasList.IdClienteColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RFC() As String
            Get
                Try 
                    Return CType(Me(Me.tableFacturasList.RFCColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RFC' in table 'FacturasList' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFacturasList.RFCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RazonSocial() As String
            Get
                Try 
                    Return CType(Me(Me.tableFacturasList.RazonSocialColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RazonSocial' in table 'FacturasList' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFacturasList.RazonSocialColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SubTotal() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableFacturasList.SubTotalColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SubTotal' in table 'FacturasList' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFacturasList.SubTotalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ImpTrasladados() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableFacturasList.ImpTrasladadosColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ImpTrasladados' in table 'FacturasList' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFacturasList.ImpTrasladadosColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Total() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableFacturasList.TotalColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Total' in table 'FacturasList' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFacturasList.TotalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Estatus() As String
            Get
                Try 
                    Return CType(Me(Me.tableFacturasList.EstatusColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Estatus' in table 'FacturasList' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFacturasList.EstatusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FechaCancelacion() As Date
            Get
                Try 
                    Return CType(Me(Me.tableFacturasList.FechaCancelacionColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FechaCancelacion' in table 'FacturasList' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFacturasList.FechaCancelacionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property IdDocumento() As String
            Get
                Return CType(Me(Me.tableFacturasList.IdDocumentoColumn),String)
            End Get
            Set
                Me(Me.tableFacturasList.IdDocumentoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFechaComprobanteNull() As Boolean
            Return Me.IsNull(Me.tableFacturasList.FechaComprobanteColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFechaComprobanteNull()
            Me(Me.tableFacturasList.FechaComprobanteColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsHoraComprobanteNull() As Boolean
            Return Me.IsNull(Me.tableFacturasList.HoraComprobanteColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetHoraComprobanteNull()
            Me(Me.tableFacturasList.HoraComprobanteColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsIdCFDSerieNull() As Boolean
            Return Me.IsNull(Me.tableFacturasList.IdCFDSerieColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetIdCFDSerieNull()
            Me(Me.tableFacturasList.IdCFDSerieColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsUUIDNull() As Boolean
            Return Me.IsNull(Me.tableFacturasList.UUIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetUUIDNull()
            Me(Me.tableFacturasList.UUIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsIdClienteNull() As Boolean
            Return Me.IsNull(Me.tableFacturasList.IdClienteColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetIdClienteNull()
            Me(Me.tableFacturasList.IdClienteColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRFCNull() As Boolean
            Return Me.IsNull(Me.tableFacturasList.RFCColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRFCNull()
            Me(Me.tableFacturasList.RFCColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRazonSocialNull() As Boolean
            Return Me.IsNull(Me.tableFacturasList.RazonSocialColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRazonSocialNull()
            Me(Me.tableFacturasList.RazonSocialColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSubTotalNull() As Boolean
            Return Me.IsNull(Me.tableFacturasList.SubTotalColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSubTotalNull()
            Me(Me.tableFacturasList.SubTotalColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsImpTrasladadosNull() As Boolean
            Return Me.IsNull(Me.tableFacturasList.ImpTrasladadosColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetImpTrasladadosNull()
            Me(Me.tableFacturasList.ImpTrasladadosColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTotalNull() As Boolean
            Return Me.IsNull(Me.tableFacturasList.TotalColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTotalNull()
            Me(Me.tableFacturasList.TotalColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsEstatusNull() As Boolean
            Return Me.IsNull(Me.tableFacturasList.EstatusColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetEstatusNull()
            Me(Me.tableFacturasList.EstatusColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFechaCancelacionNull() As Boolean
            Return Me.IsNull(Me.tableFacturasList.FechaCancelacionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFechaCancelacionNull()
            Me(Me.tableFacturasList.FechaCancelacionColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class VentaRow
        Inherits Global.System.Data.DataRow
        
        Private tableVenta As VentaDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableVenta = CType(Me.Table,VentaDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property IdVentaTit() As String
            Get
                Return CType(Me(Me.tableVenta.IdVentaTitColumn),String)
            End Get
            Set
                Me(Me.tableVenta.IdVentaTitColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Fecha() As Date
            Get
                Return CType(Me(Me.tableVenta.FechaColumn),Date)
            End Get
            Set
                Me(Me.tableVenta.FechaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CodigoCliente() As String
            Get
                Return CType(Me(Me.tableVenta.CodigoClienteColumn),String)
            End Get
            Set
                Me(Me.tableVenta.CodigoClienteColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NombreCliente() As String
            Get
                Return CType(Me(Me.tableVenta.NombreClienteColumn),String)
            End Get
            Set
                Me(Me.tableVenta.NombreClienteColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RFC() As String
            Get
                Try 
                    Return CType(Me(Me.tableVenta.RFCColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RFC' in table 'Venta' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVenta.RFCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RazonSocial() As String
            Get
                Try 
                    Return CType(Me(Me.tableVenta.RazonSocialColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RazonSocial' in table 'Venta' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVenta.RazonSocialColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SubTotal() As Decimal
            Get
                Return CType(Me(Me.tableVenta.SubTotalColumn),Decimal)
            End Get
            Set
                Me(Me.tableVenta.SubTotalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TotalDescuentos() As Decimal
            Get
                Return CType(Me(Me.tableVenta.TotalDescuentosColumn),Decimal)
            End Get
            Set
                Me(Me.tableVenta.TotalDescuentosColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TotalImpuestosRet() As Decimal
            Get
                Return CType(Me(Me.tableVenta.TotalImpuestosRetColumn),Decimal)
            End Get
            Set
                Me(Me.tableVenta.TotalImpuestosRetColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TotalImpuestosTras() As Decimal
            Get
                Return CType(Me(Me.tableVenta.TotalImpuestosTrasColumn),Decimal)
            End Get
            Set
                Me(Me.tableVenta.TotalImpuestosTrasColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Total() As Decimal
            Get
                Return CType(Me(Me.tableVenta.TotalColumn),Decimal)
            End Get
            Set
                Me(Me.tableVenta.TotalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CondicionesPago() As String
            Get
                Try 
                    Return CType(Me(Me.tableVenta.CondicionesPagoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CondicionesPago' in table 'Venta' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVenta.CondicionesPagoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Caja() As String
            Get
                Try 
                    Return CType(Me(Me.tableVenta.CajaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Caja' in table 'Venta' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVenta.CajaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Cantidad() As Decimal
            Get
                Return CType(Me(Me.tableVenta.CantidadColumn),Decimal)
            End Get
            Set
                Me(Me.tableVenta.CantidadColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CodigoConcepto() As String
            Get
                Return CType(Me(Me.tableVenta.CodigoConceptoColumn),String)
            End Get
            Set
                Me(Me.tableVenta.CodigoConceptoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DescripcionConcepto() As String
            Get
                Return CType(Me(Me.tableVenta.DescripcionConceptoColumn),String)
            End Get
            Set
                Me(Me.tableVenta.DescripcionConceptoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PrecioUnitario() As Decimal
            Get
                Return CType(Me(Me.tableVenta.PrecioUnitarioColumn),Decimal)
            End Get
            Set
                Me(Me.tableVenta.PrecioUnitarioColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TipoCambio() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableVenta.TipoCambioColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TipoCambio' in table 'Venta' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVenta.TipoCambioColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Divisa() As String
            Get
                Try 
                    Return CType(Me(Me.tableVenta.DivisaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Divisa' in table 'Venta' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVenta.DivisaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DivisaAbrev() As String
            Get
                Try 
                    Return CType(Me(Me.tableVenta.DivisaAbrevColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DivisaAbrev' in table 'Venta' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVenta.DivisaAbrevColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NumPedimento() As String
            Get
                Try 
                    Return CType(Me(Me.tableVenta.NumPedimentoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NumPedimento' in table 'Venta' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVenta.NumPedimentoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FechaPedimento() As Date
            Get
                Try 
                    Return CType(Me(Me.tableVenta.FechaPedimentoColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FechaPedimento' in table 'Venta' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVenta.FechaPedimentoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Aduana() As String
            Get
                Try 
                    Return CType(Me(Me.tableVenta.AduanaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Aduana' in table 'Venta' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVenta.AduanaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property OrdenCompra() As String
            Get
                Try 
                    Return CType(Me(Me.tableVenta.OrdenCompraColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OrdenCompra' in table 'Venta' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVenta.OrdenCompraColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Referencia() As String
            Get
                Try 
                    Return CType(Me(Me.tableVenta.ReferenciaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Referencia' in table 'Venta' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVenta.ReferenciaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RazonSocialEmpresa() As String
            Get
                Try 
                    Return CType(Me(Me.tableVenta.RazonSocialEmpresaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RazonSocialEmpresa' in table 'Venta' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVenta.RazonSocialEmpresaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Logo() As Byte()
            Get
                Try 
                    Return CType(Me(Me.tableVenta.LogoColumn),Byte())
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Logo' in table 'Venta' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVenta.LogoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRFCNull() As Boolean
            Return Me.IsNull(Me.tableVenta.RFCColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRFCNull()
            Me(Me.tableVenta.RFCColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRazonSocialNull() As Boolean
            Return Me.IsNull(Me.tableVenta.RazonSocialColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRazonSocialNull()
            Me(Me.tableVenta.RazonSocialColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCondicionesPagoNull() As Boolean
            Return Me.IsNull(Me.tableVenta.CondicionesPagoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCondicionesPagoNull()
            Me(Me.tableVenta.CondicionesPagoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCajaNull() As Boolean
            Return Me.IsNull(Me.tableVenta.CajaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCajaNull()
            Me(Me.tableVenta.CajaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTipoCambioNull() As Boolean
            Return Me.IsNull(Me.tableVenta.TipoCambioColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTipoCambioNull()
            Me(Me.tableVenta.TipoCambioColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDivisaNull() As Boolean
            Return Me.IsNull(Me.tableVenta.DivisaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDivisaNull()
            Me(Me.tableVenta.DivisaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDivisaAbrevNull() As Boolean
            Return Me.IsNull(Me.tableVenta.DivisaAbrevColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDivisaAbrevNull()
            Me(Me.tableVenta.DivisaAbrevColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNumPedimentoNull() As Boolean
            Return Me.IsNull(Me.tableVenta.NumPedimentoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNumPedimentoNull()
            Me(Me.tableVenta.NumPedimentoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFechaPedimentoNull() As Boolean
            Return Me.IsNull(Me.tableVenta.FechaPedimentoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFechaPedimentoNull()
            Me(Me.tableVenta.FechaPedimentoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAduanaNull() As Boolean
            Return Me.IsNull(Me.tableVenta.AduanaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAduanaNull()
            Me(Me.tableVenta.AduanaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsOrdenCompraNull() As Boolean
            Return Me.IsNull(Me.tableVenta.OrdenCompraColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetOrdenCompraNull()
            Me(Me.tableVenta.OrdenCompraColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsReferenciaNull() As Boolean
            Return Me.IsNull(Me.tableVenta.ReferenciaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetReferenciaNull()
            Me(Me.tableVenta.ReferenciaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRazonSocialEmpresaNull() As Boolean
            Return Me.IsNull(Me.tableVenta.RazonSocialEmpresaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRazonSocialEmpresaNull()
            Me(Me.tableVenta.RazonSocialEmpresaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsLogoNull() As Boolean
            Return Me.IsNull(Me.tableVenta.LogoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetLogoNull()
            Me(Me.tableVenta.LogoColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class CorteCajaRow
        Inherits Global.System.Data.DataRow
        
        Private tableCorteCaja As CorteCajaDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableCorteCaja = CType(Me.Table,CorteCajaDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Caja() As String
            Get
                Return CType(Me(Me.tableCorteCaja.CajaColumn),String)
            End Get
            Set
                Me(Me.tableCorteCaja.CajaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Cajero() As String
            Get
                Try 
                    Return CType(Me(Me.tableCorteCaja.CajeroColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Cajero' in table 'CorteCaja' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCorteCaja.CajeroColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FechaApertura() As Date
            Get
                Return CType(Me(Me.tableCorteCaja.FechaAperturaColumn),Date)
            End Get
            Set
                Me(Me.tableCorteCaja.FechaAperturaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property HoraApertura() As Date
            Get
                Return CType(Me(Me.tableCorteCaja.HoraAperturaColumn),Date)
            End Get
            Set
                Me(Me.tableCorteCaja.HoraAperturaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FechaCierre() As Date
            Get
                Try 
                    Return CType(Me(Me.tableCorteCaja.FechaCierreColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FechaCierre' in table 'CorteCaja' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCorteCaja.FechaCierreColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property HoraCierre() As Date
            Get
                Try 
                    Return CType(Me(Me.tableCorteCaja.HoraCierreColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HoraCierre' in table 'CorteCaja' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCorteCaja.HoraCierreColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FormaPago() As String
            Get
                Return CType(Me(Me.tableCorteCaja.FormaPagoColumn),String)
            End Get
            Set
                Me(Me.tableCorteCaja.FormaPagoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Monto() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCorteCaja.MontoColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Monto' in table 'CorteCaja' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCorteCaja.MontoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCajeroNull() As Boolean
            Return Me.IsNull(Me.tableCorteCaja.CajeroColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCajeroNull()
            Me(Me.tableCorteCaja.CajeroColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFechaCierreNull() As Boolean
            Return Me.IsNull(Me.tableCorteCaja.FechaCierreColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFechaCierreNull()
            Me(Me.tableCorteCaja.FechaCierreColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsHoraCierreNull() As Boolean
            Return Me.IsNull(Me.tableCorteCaja.HoraCierreColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetHoraCierreNull()
            Me(Me.tableCorteCaja.HoraCierreColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMontoNull() As Boolean
            Return Me.IsNull(Me.tableCorteCaja.MontoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMontoNull()
            Me(Me.tableCorteCaja.MontoColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class ImagenesRow
        Inherits Global.System.Data.DataRow
        
        Private tableImagenes As ImagenesDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableImagenes = CType(Me.Table,ImagenesDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Logo() As Byte()
            Get
                Try 
                    Return CType(Me(Me.tableImagenes.LogoColumn),Byte())
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Logo' in table 'Imagenes' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableImagenes.LogoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property QrCode() As Byte()
            Get
                Try 
                    Return CType(Me(Me.tableImagenes.QrCodeColumn),Byte())
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'QrCode' in table 'Imagenes' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableImagenes.QrCodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsLogoNull() As Boolean
            Return Me.IsNull(Me.tableImagenes.LogoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetLogoNull()
            Me(Me.tableImagenes.LogoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsQrCodeNull() As Boolean
            Return Me.IsNull(Me.tableImagenes.QrCodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetQrCodeNull()
            Me(Me.tableImagenes.QrCodeColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class FacturacionVTARow
        Inherits Global.System.Data.DataRow
        
        Private tableFacturacionVTA As FacturacionVTADataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableFacturacionVTA = CType(Me.Table,FacturacionVTADataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FechaComprobante() As Date
            Get
                Return CType(Me(Me.tableFacturacionVTA.FechaComprobanteColumn),Date)
            End Get
            Set
                Me(Me.tableFacturacionVTA.FechaComprobanteColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FechaCancelacion() As Date
            Get
                Try 
                    Return CType(Me(Me.tableFacturacionVTA.FechaCancelacionColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FechaCancelacion' in table 'FacturacionVTA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFacturacionVTA.FechaCancelacionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property IdCFDSerie() As Integer
            Get
                Return CType(Me(Me.tableFacturacionVTA.IdCFDSerieColumn),Integer)
            End Get
            Set
                Me(Me.tableFacturacionVTA.IdCFDSerieColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Folio() As Integer
            Get
                Return CType(Me(Me.tableFacturacionVTA.FolioColumn),Integer)
            End Get
            Set
                Me(Me.tableFacturacionVTA.FolioColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property UUID() As String
            Get
                Return CType(Me(Me.tableFacturacionVTA.UUIDColumn),String)
            End Get
            Set
                Me(Me.tableFacturacionVTA.UUIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property IdDocumento() As String
            Get
                Return CType(Me(Me.tableFacturacionVTA.IdDocumentoColumn),String)
            End Get
            Set
                Me(Me.tableFacturacionVTA.IdDocumentoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Activa() As Boolean
            Get
                Return CType(Me(Me.tableFacturacionVTA.ActivaColumn),Boolean)
            End Get
            Set
                Me(Me.tableFacturacionVTA.ActivaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property IdSucursal() As Integer
            Get
                Return CType(Me(Me.tableFacturacionVTA.IdSucursalColumn),Integer)
            End Get
            Set
                Me(Me.tableFacturacionVTA.IdSucursalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Sucursal() As String
            Get
                Return CType(Me(Me.tableFacturacionVTA.SucursalColumn),String)
            End Get
            Set
                Me(Me.tableFacturacionVTA.SucursalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Serie() As String
            Get
                Return CType(Me(Me.tableFacturacionVTA.SerieColumn),String)
            End Get
            Set
                Me(Me.tableFacturacionVTA.SerieColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property IdCliente() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableFacturacionVTA.IdClienteColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IdCliente' in table 'FacturacionVTA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFacturacionVTA.IdClienteColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CodCliente() As String
            Get
                Return CType(Me(Me.tableFacturacionVTA.CodClienteColumn),String)
            End Get
            Set
                Me(Me.tableFacturacionVTA.CodClienteColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RFC() As String
            Get
                Return CType(Me(Me.tableFacturacionVTA.RFCColumn),String)
            End Get
            Set
                Me(Me.tableFacturacionVTA.RFCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RazonSocial() As String
            Get
                Return CType(Me(Me.tableFacturacionVTA.RazonSocialColumn),String)
            End Get
            Set
                Me(Me.tableFacturacionVTA.RazonSocialColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Divisa() As String
            Get
                Return CType(Me(Me.tableFacturacionVTA.DivisaColumn),String)
            End Get
            Set
                Me(Me.tableFacturacionVTA.DivisaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Total() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableFacturacionVTA.TotalColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Total' in table 'FacturacionVTA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFacturacionVTA.TotalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Subtotal() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableFacturacionVTA.SubtotalColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Subtotal' in table 'FacturacionVTA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFacturacionVTA.SubtotalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Descuentos() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableFacturacionVTA.DescuentosColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Descuentos' in table 'FacturacionVTA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFacturacionVTA.DescuentosColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Impuestos() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableFacturacionVTA.ImpuestosColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Impuestos' in table 'FacturacionVTA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFacturacionVTA.ImpuestosColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Retenciones() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableFacturacionVTA.RetencionesColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Retenciones' in table 'FacturacionVTA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFacturacionVTA.RetencionesColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFechaCancelacionNull() As Boolean
            Return Me.IsNull(Me.tableFacturacionVTA.FechaCancelacionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFechaCancelacionNull()
            Me(Me.tableFacturacionVTA.FechaCancelacionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsIdClienteNull() As Boolean
            Return Me.IsNull(Me.tableFacturacionVTA.IdClienteColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetIdClienteNull()
            Me(Me.tableFacturacionVTA.IdClienteColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTotalNull() As Boolean
            Return Me.IsNull(Me.tableFacturacionVTA.TotalColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTotalNull()
            Me(Me.tableFacturacionVTA.TotalColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSubtotalNull() As Boolean
            Return Me.IsNull(Me.tableFacturacionVTA.SubtotalColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSubtotalNull()
            Me(Me.tableFacturacionVTA.SubtotalColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDescuentosNull() As Boolean
            Return Me.IsNull(Me.tableFacturacionVTA.DescuentosColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDescuentosNull()
            Me(Me.tableFacturacionVTA.DescuentosColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsImpuestosNull() As Boolean
            Return Me.IsNull(Me.tableFacturacionVTA.ImpuestosColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetImpuestosNull()
            Me(Me.tableFacturacionVTA.ImpuestosColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRetencionesNull() As Boolean
            Return Me.IsNull(Me.tableFacturacionVTA.RetencionesColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRetencionesNull()
            Me(Me.tableFacturacionVTA.RetencionesColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class FacturacionDetalleRow
        Inherits Global.System.Data.DataRow
        
        Private tableFacturacionDetalle As FacturacionDetalleDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableFacturacionDetalle = CType(Me.Table,FacturacionDetalleDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FechaComprobante() As Date
            Get
                Return CType(Me(Me.tableFacturacionDetalle.FechaComprobanteColumn),Date)
            End Get
            Set
                Me(Me.tableFacturacionDetalle.FechaComprobanteColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FechaCancelacion() As Date
            Get
                Try 
                    Return CType(Me(Me.tableFacturacionDetalle.FechaCancelacionColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FechaCancelacion' in table 'FacturacionDetalle' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFacturacionDetalle.FechaCancelacionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property IdCFDSerie() As Integer
            Get
                Return CType(Me(Me.tableFacturacionDetalle.IdCFDSerieColumn),Integer)
            End Get
            Set
                Me(Me.tableFacturacionDetalle.IdCFDSerieColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Folio() As Integer
            Get
                Return CType(Me(Me.tableFacturacionDetalle.FolioColumn),Integer)
            End Get
            Set
                Me(Me.tableFacturacionDetalle.FolioColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property UUID() As String
            Get
                Return CType(Me(Me.tableFacturacionDetalle.UUIDColumn),String)
            End Get
            Set
                Me(Me.tableFacturacionDetalle.UUIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property IdDocumento() As String
            Get
                Return CType(Me(Me.tableFacturacionDetalle.IdDocumentoColumn),String)
            End Get
            Set
                Me(Me.tableFacturacionDetalle.IdDocumentoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Activa() As Boolean
            Get
                Return CType(Me(Me.tableFacturacionDetalle.ActivaColumn),Boolean)
            End Get
            Set
                Me(Me.tableFacturacionDetalle.ActivaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property IdSucursal() As Integer
            Get
                Return CType(Me(Me.tableFacturacionDetalle.IdSucursalColumn),Integer)
            End Get
            Set
                Me(Me.tableFacturacionDetalle.IdSucursalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Sucursal() As String
            Get
                Return CType(Me(Me.tableFacturacionDetalle.SucursalColumn),String)
            End Get
            Set
                Me(Me.tableFacturacionDetalle.SucursalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Serie() As String
            Get
                Return CType(Me(Me.tableFacturacionDetalle.SerieColumn),String)
            End Get
            Set
                Me(Me.tableFacturacionDetalle.SerieColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property IdCliente() As Integer
            Get
                Return CType(Me(Me.tableFacturacionDetalle.IdClienteColumn),Integer)
            End Get
            Set
                Me(Me.tableFacturacionDetalle.IdClienteColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CodCliente() As String
            Get
                Return CType(Me(Me.tableFacturacionDetalle.CodClienteColumn),String)
            End Get
            Set
                Me(Me.tableFacturacionDetalle.CodClienteColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RFC() As String
            Get
                Return CType(Me(Me.tableFacturacionDetalle.RFCColumn),String)
            End Get
            Set
                Me(Me.tableFacturacionDetalle.RFCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RazonSocial() As String
            Get
                Return CType(Me(Me.tableFacturacionDetalle.RazonSocialColumn),String)
            End Get
            Set
                Me(Me.tableFacturacionDetalle.RazonSocialColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Codigo() As String
            Get
                Return CType(Me(Me.tableFacturacionDetalle.CodigoColumn),String)
            End Get
            Set
                Me(Me.tableFacturacionDetalle.CodigoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Descripcion() As String
            Get
                Return CType(Me(Me.tableFacturacionDetalle.DescripcionColumn),String)
            End Get
            Set
                Me(Me.tableFacturacionDetalle.DescripcionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Cantidad() As Decimal
            Get
                Return CType(Me(Me.tableFacturacionDetalle.CantidadColumn),Decimal)
            End Get
            Set
                Me(Me.tableFacturacionDetalle.CantidadColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Unidad() As String
            Get
                Return CType(Me(Me.tableFacturacionDetalle.UnidadColumn),String)
            End Get
            Set
                Me(Me.tableFacturacionDetalle.UnidadColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PrecioUnitario() As Decimal
            Get
                Return CType(Me(Me.tableFacturacionDetalle.PrecioUnitarioColumn),Decimal)
            End Get
            Set
                Me(Me.tableFacturacionDetalle.PrecioUnitarioColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Impuesto() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableFacturacionDetalle.ImpuestoColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Impuesto' in table 'FacturacionDetalle' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFacturacionDetalle.ImpuestoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Total() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableFacturacionDetalle.TotalColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Total' in table 'FacturacionDetalle' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFacturacionDetalle.TotalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Divisa() As String
            Get
                Return CType(Me(Me.tableFacturacionDetalle.DivisaColumn),String)
            End Get
            Set
                Me(Me.tableFacturacionDetalle.DivisaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFechaCancelacionNull() As Boolean
            Return Me.IsNull(Me.tableFacturacionDetalle.FechaCancelacionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFechaCancelacionNull()
            Me(Me.tableFacturacionDetalle.FechaCancelacionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsImpuestoNull() As Boolean
            Return Me.IsNull(Me.tableFacturacionDetalle.ImpuestoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetImpuestoNull()
            Me(Me.tableFacturacionDetalle.ImpuestoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTotalNull() As Boolean
            Return Me.IsNull(Me.tableFacturacionDetalle.TotalColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTotalNull()
            Me(Me.tableFacturacionDetalle.TotalColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class VentasGeneralRow
        Inherits Global.System.Data.DataRow
        
        Private tableVentasGeneral As VentasGeneralDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableVentasGeneral = CType(Me.Table,VentasGeneralDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property IdVentaTit() As String
            Get
                Try 
                    Return CType(Me(Me.tableVentasGeneral.IdVentaTitColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IdVentaTit' in table 'VentasGeneral' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVentasGeneral.IdVentaTitColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property OrdenCompra() As String
            Get
                Try 
                    Return CType(Me(Me.tableVentasGeneral.OrdenCompraColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OrdenCompra' in table 'VentasGeneral' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVentasGeneral.OrdenCompraColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Fecha() As String
            Get
                Try 
                    Return CType(Me(Me.tableVentasGeneral.FechaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Fecha' in table 'VentasGeneral' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVentasGeneral.FechaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Cliente() As String
            Get
                Try 
                    Return CType(Me(Me.tableVentasGeneral.ClienteColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Cliente' in table 'VentasGeneral' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVentasGeneral.ClienteColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Codigo() As String
            Get
                Try 
                    Return CType(Me(Me.tableVentasGeneral.CodigoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Codigo' in table 'VentasGeneral' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVentasGeneral.CodigoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Producto() As String
            Get
                Try 
                    Return CType(Me(Me.tableVentasGeneral.ProductoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Producto' in table 'VentasGeneral' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVentasGeneral.ProductoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Cantidad() As String
            Get
                Try 
                    Return CType(Me(Me.tableVentasGeneral.CantidadColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Cantidad' in table 'VentasGeneral' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVentasGeneral.CantidadColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PrecioUnitario() As String
            Get
                Try 
                    Return CType(Me(Me.tableVentasGeneral.PrecioUnitarioColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PrecioUnitario' in table 'VentasGeneral' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVentasGeneral.PrecioUnitarioColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Importe() As String
            Get
                Try 
                    Return CType(Me(Me.tableVentasGeneral.ImporteColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Importe' in table 'VentasGeneral' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVentasGeneral.ImporteColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Status() As String
            Get
                Try 
                    Return CType(Me(Me.tableVentasGeneral.StatusColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Status' in table 'VentasGeneral' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVentasGeneral.StatusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FolioFacturaExt() As String
            Get
                Try 
                    Return CType(Me(Me.tableVentasGeneral.FolioFacturaExtColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FolioFacturaExt' in table 'VentasGeneral' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVentasGeneral.FolioFacturaExtColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property OrdenTrabajo() As String
            Get
                Try 
                    Return CType(Me(Me.tableVentasGeneral.OrdenTrabajoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OrdenTrabajo' in table 'VentasGeneral' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVentasGeneral.OrdenTrabajoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsIdVentaTitNull() As Boolean
            Return Me.IsNull(Me.tableVentasGeneral.IdVentaTitColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetIdVentaTitNull()
            Me(Me.tableVentasGeneral.IdVentaTitColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsOrdenCompraNull() As Boolean
            Return Me.IsNull(Me.tableVentasGeneral.OrdenCompraColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetOrdenCompraNull()
            Me(Me.tableVentasGeneral.OrdenCompraColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFechaNull() As Boolean
            Return Me.IsNull(Me.tableVentasGeneral.FechaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFechaNull()
            Me(Me.tableVentasGeneral.FechaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsClienteNull() As Boolean
            Return Me.IsNull(Me.tableVentasGeneral.ClienteColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetClienteNull()
            Me(Me.tableVentasGeneral.ClienteColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCodigoNull() As Boolean
            Return Me.IsNull(Me.tableVentasGeneral.CodigoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCodigoNull()
            Me(Me.tableVentasGeneral.CodigoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsProductoNull() As Boolean
            Return Me.IsNull(Me.tableVentasGeneral.ProductoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetProductoNull()
            Me(Me.tableVentasGeneral.ProductoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCantidadNull() As Boolean
            Return Me.IsNull(Me.tableVentasGeneral.CantidadColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCantidadNull()
            Me(Me.tableVentasGeneral.CantidadColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPrecioUnitarioNull() As Boolean
            Return Me.IsNull(Me.tableVentasGeneral.PrecioUnitarioColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPrecioUnitarioNull()
            Me(Me.tableVentasGeneral.PrecioUnitarioColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsImporteNull() As Boolean
            Return Me.IsNull(Me.tableVentasGeneral.ImporteColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetImporteNull()
            Me(Me.tableVentasGeneral.ImporteColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsStatusNull() As Boolean
            Return Me.IsNull(Me.tableVentasGeneral.StatusColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetStatusNull()
            Me(Me.tableVentasGeneral.StatusColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFolioFacturaExtNull() As Boolean
            Return Me.IsNull(Me.tableVentasGeneral.FolioFacturaExtColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFolioFacturaExtNull()
            Me(Me.tableVentasGeneral.FolioFacturaExtColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsOrdenTrabajoNull() As Boolean
            Return Me.IsNull(Me.tableVentasGeneral.OrdenTrabajoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetOrdenTrabajoNull()
            Me(Me.tableVentasGeneral.OrdenTrabajoColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class FacturasRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As FacturasRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As FacturasRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As FacturasRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class FacturasListRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As FacturasListRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As FacturasListRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As FacturasListRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class VentaRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As VentaRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As VentaRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As VentaRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class CorteCajaRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As CorteCajaRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As CorteCajaRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As CorteCajaRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class ImagenesRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As ImagenesRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As ImagenesRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As ImagenesRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class FacturacionVTARowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As FacturacionVTARow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As FacturacionVTARow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As FacturacionVTARow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class FacturacionDetalleRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As FacturacionDetalleRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As FacturacionDetalleRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As FacturacionDetalleRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class VentasGeneralRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As VentasGeneralRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As VentasGeneralRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As VentasGeneralRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class
