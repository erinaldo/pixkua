'------------------------------------------------------------------------------
' <auto-generated>
'     Este código fue generado por una herramienta.
'     Versión de runtime:4.0.30319.1
'
'     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
'     se vuelve a generar el código.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.Serializable(), _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"), _
 Global.System.ComponentModel.ToolboxItem(True), _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"), _
 Global.System.Xml.Serialization.XmlRootAttribute("ZonasVentaDS"), _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")> _
Partial Public Class ZonasVentaDS
    Inherits Global.System.Data.DataSet

    Private tableArticulos As ArticulosDataTable

    Private tableServicios As ServiciosDataTable

    Private tableZonas As ZonasDataTable

    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Sub New()
        MyBase.New()
        Me.BeginInit()
        Me.InitClass()
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit()
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, False)
        If (Me.IsBinarySerialized(info, context) = True) Then
            Me.InitVars(False)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)), String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("Articulos")) Is Nothing) Then
                MyBase.Tables.Add(New ArticulosDataTable(ds.Tables("Articulos")))
            End If
            If (Not (ds.Tables("Servicios")) Is Nothing) Then
                MyBase.Tables.Add(New ServiciosDataTable(ds.Tables("Servicios")))
            End If
            If (Not (ds.Tables("Zonas")) Is Nothing) Then
                MyBase.Tables.Add(New ZonasDataTable(ds.Tables("Zonas")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, False, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars()
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
     Global.System.ComponentModel.Browsable(False), _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)> _
    Public ReadOnly Property Articulos() As ArticulosDataTable
        Get
            Return Me.tableArticulos
        End Get
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
     Global.System.ComponentModel.Browsable(False), _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)> _
    Public ReadOnly Property Servicios() As ServiciosDataTable
        Get
            Return Me.tableServicios
        End Get
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
     Global.System.ComponentModel.Browsable(False), _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)> _
    Public ReadOnly Property Zonas() As ZonasDataTable
        Get
            Return Me.tableZonas
        End Get
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
     Global.System.ComponentModel.BrowsableAttribute(True), _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)> _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set(ByVal value As Global.System.Data.SchemaSerializationMode)
            Me._schemaSerializationMode = value
        End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)> _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)> _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit()
        Me.InitClass()
        Me.EndInit()
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As ZonasVentaDS = CType(MyBase.Clone, ZonasVentaDS)
        cln.InitVars()
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return False
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return False
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset()
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXml(reader)
            If (Not (ds.Tables("Articulos")) Is Nothing) Then
                MyBase.Tables.Add(New ArticulosDataTable(ds.Tables("Articulos")))
            End If
            If (Not (ds.Tables("Servicios")) Is Nothing) Then
                MyBase.Tables.Add(New ServiciosDataTable(ds.Tables("Servicios")))
            End If
            If (Not (ds.Tables("Zonas")) Is Nothing) Then
                MyBase.Tables.Add(New ZonasDataTable(ds.Tables("Zonas")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, False, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars()
        Else
            Me.ReadXml(reader)
            Me.InitVars()
        End If
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Friend Overloads Sub InitVars()
        Me.InitVars(True)
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableArticulos = CType(MyBase.Tables("Articulos"), ArticulosDataTable)
        If (initTable = True) Then
            If (Not (Me.tableArticulos) Is Nothing) Then
                Me.tableArticulos.InitVars()
            End If
        End If
        Me.tableServicios = CType(MyBase.Tables("Servicios"), ServiciosDataTable)
        If (initTable = True) Then
            If (Not (Me.tableServicios) Is Nothing) Then
                Me.tableServicios.InitVars()
            End If
        End If
        Me.tableZonas = CType(MyBase.Tables("Zonas"), ZonasDataTable)
        If (initTable = True) Then
            If (Not (Me.tableZonas) Is Nothing) Then
                Me.tableZonas.InitVars()
            End If
        End If
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Private Sub InitClass()
        Me.DataSetName = "ZonasVentaDS"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/ZonasVentaDS.xsd"
        Me.EnforceConstraints = True
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableArticulos = New ArticulosDataTable()
        MyBase.Tables.Add(Me.tableArticulos)
        Me.tableServicios = New ServiciosDataTable()
        MyBase.Tables.Add(Me.tableServicios)
        Me.tableZonas = New ZonasDataTable()
        MyBase.Tables.Add(Me.tableZonas)
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Private Function ShouldSerializeArticulos() As Boolean
        Return False
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Private Function ShouldSerializeServicios() As Boolean
        Return False
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Private Function ShouldSerializeZonas() As Boolean
        Return False
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars()
        End If
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As ZonasVentaDS = New ZonasVentaDS()
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Try
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current, Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0

                        Do While ((s1.Position <> s1.Length) _
                                    AndAlso (s1.ReadByte = s2.ReadByte))


                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If

                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close()
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close()
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function

    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Delegate Sub ArticulosRowChangeEventHandler(ByVal sender As Object, ByVal e As ArticulosRowChangeEvent)

    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Delegate Sub ServiciosRowChangeEventHandler(ByVal sender As Object, ByVal e As ServiciosRowChangeEvent)

    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Delegate Sub ZonasRowChangeEventHandler(ByVal sender As Object, ByVal e As ZonasRowChangeEvent)

    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(), _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")> _
    Partial Public Class ArticulosDataTable
        Inherits Global.System.Data.TypedTableBase(Of ArticulosRow)

        Private columnIdArticuloStock As Global.System.Data.DataColumn

        Private columnCodigoArticulo As Global.System.Data.DataColumn

        Private columnNombreArticulo As Global.System.Data.DataColumn

        Private columnIdDivisa As Global.System.Data.DataColumn

        Private columnDivisa As Global.System.Data.DataColumn

        Private columnPrecio As Global.System.Data.DataColumn

        Private columnDiasEntrega As Global.System.Data.DataColumn

        Private columnIdImpuesto1 As Global.System.Data.DataColumn

        Private columnIdImpuesto2 As Global.System.Data.DataColumn

        Private columnIdImpuesto3 As Global.System.Data.DataColumn

        Private columnImpuesto1 As Global.System.Data.DataColumn

        Private columnImpuesto2 As Global.System.Data.DataColumn

        Private columnImpuesto3 As Global.System.Data.DataColumn

        Private columnPorcRetencion1 As Global.System.Data.DataColumn

        Private columnPorcRetencion2 As Global.System.Data.DataColumn

        Private columnPorcRetencion3 As Global.System.Data.DataColumn

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New()
            MyBase.New()
            Me.TableName = "Articulos"
            Me.BeginInit()
            Me.InitClass()
            Me.EndInit()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New()
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property IdArticuloStockColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIdArticuloStock
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CodigoArticuloColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCodigoArticulo
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property NombreArticuloColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNombreArticulo
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property IdDivisaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIdDivisa
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property DivisaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDivisa
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PrecioColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPrecio
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property DiasEntregaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDiasEntrega
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property IdImpuesto1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnIdImpuesto1
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property IdImpuesto2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnIdImpuesto2
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property IdImpuesto3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnIdImpuesto3
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Impuesto1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnImpuesto1
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Impuesto2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnImpuesto2
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Impuesto3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnImpuesto3
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PorcRetencion1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnPorcRetencion1
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PorcRetencion2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnPorcRetencion2
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PorcRetencion3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnPorcRetencion3
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Browsable(False)> _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Default Public ReadOnly Property Item(ByVal index As Integer) As ArticulosRow
            Get
                Return CType(Me.Rows(index), ArticulosRow)
            End Get
        End Property

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event ArticulosRowChanging As ArticulosRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event ArticulosRowChanged As ArticulosRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event ArticulosRowDeleting As ArticulosRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event ArticulosRowDeleted As ArticulosRowChangeEventHandler

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Sub AddArticulosRow(ByVal row As ArticulosRow)
            Me.Rows.Add(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Function AddArticulosRow( _
                    ByVal IdArticuloStock As Integer, _
                    ByVal CodigoArticulo As String, _
                    ByVal NombreArticulo As String, _
                    ByVal IdDivisa As Integer, _
                    ByVal Divisa As String, _
                    ByVal Precio As Decimal, _
                    ByVal DiasEntrega As Integer, _
                    ByVal IdImpuesto1 As Integer, _
                    ByVal IdImpuesto2 As Integer, _
                    ByVal IdImpuesto3 As Integer, _
                    ByVal Impuesto1 As String, _
                    ByVal Impuesto2 As String, _
                    ByVal Impuesto3 As String, _
                    ByVal PorcRetencion1 As Decimal, _
                    ByVal PorcRetencion2 As Decimal, _
                    ByVal PorcRetencion3 As Decimal) As ArticulosRow
            Dim rowArticulosRow As ArticulosRow = CType(Me.NewRow, ArticulosRow)
            Dim columnValuesArray() As Object = New Object() {IdArticuloStock, CodigoArticulo, NombreArticulo, IdDivisa, Divisa, Precio, DiasEntrega, IdImpuesto1, IdImpuesto2, IdImpuesto3, Impuesto1, Impuesto2, Impuesto3, PorcRetencion1, PorcRetencion2, PorcRetencion3}
            rowArticulosRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowArticulosRow)
            Return rowArticulosRow
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function FindByIdArticuloStock(ByVal IdArticuloStock As Integer) As ArticulosRow
            Return CType(Me.Rows.Find(New Object() {IdArticuloStock}), ArticulosRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As ArticulosDataTable = CType(MyBase.Clone, ArticulosDataTable)
            cln.InitVars()
            Return cln
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New ArticulosDataTable()
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub InitVars()
            Me.columnIdArticuloStock = MyBase.Columns("IdArticuloStock")
            Me.columnCodigoArticulo = MyBase.Columns("CodigoArticulo")
            Me.columnNombreArticulo = MyBase.Columns("NombreArticulo")
            Me.columnIdDivisa = MyBase.Columns("IdDivisa")
            Me.columnDivisa = MyBase.Columns("Divisa")
            Me.columnPrecio = MyBase.Columns("Precio")
            Me.columnDiasEntrega = MyBase.Columns("DiasEntrega")
            Me.columnIdImpuesto1 = MyBase.Columns("IdImpuesto1")
            Me.columnIdImpuesto2 = MyBase.Columns("IdImpuesto2")
            Me.columnIdImpuesto3 = MyBase.Columns("IdImpuesto3")
            Me.columnImpuesto1 = MyBase.Columns("Impuesto1")
            Me.columnImpuesto2 = MyBase.Columns("Impuesto2")
            Me.columnImpuesto3 = MyBase.Columns("Impuesto3")
            Me.columnPorcRetencion1 = MyBase.Columns("PorcRetencion1")
            Me.columnPorcRetencion2 = MyBase.Columns("PorcRetencion2")
            Me.columnPorcRetencion3 = MyBase.Columns("PorcRetencion3")
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitClass()
            Me.columnIdArticuloStock = New Global.System.Data.DataColumn("IdArticuloStock", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIdArticuloStock)
            Me.columnCodigoArticulo = New Global.System.Data.DataColumn("CodigoArticulo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCodigoArticulo)
            Me.columnNombreArticulo = New Global.System.Data.DataColumn("NombreArticulo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNombreArticulo)
            Me.columnIdDivisa = New Global.System.Data.DataColumn("IdDivisa", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIdDivisa)
            Me.columnDivisa = New Global.System.Data.DataColumn("Divisa", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDivisa)
            Me.columnPrecio = New Global.System.Data.DataColumn("Precio", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPrecio)
            Me.columnDiasEntrega = New Global.System.Data.DataColumn("DiasEntrega", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDiasEntrega)
            Me.columnIdImpuesto1 = New Global.System.Data.DataColumn("IdImpuesto1", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIdImpuesto1)
            Me.columnIdImpuesto2 = New Global.System.Data.DataColumn("IdImpuesto2", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIdImpuesto2)
            Me.columnIdImpuesto3 = New Global.System.Data.DataColumn("IdImpuesto3", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIdImpuesto3)
            Me.columnImpuesto1 = New Global.System.Data.DataColumn("Impuesto1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnImpuesto1)
            Me.columnImpuesto2 = New Global.System.Data.DataColumn("Impuesto2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnImpuesto2)
            Me.columnImpuesto3 = New Global.System.Data.DataColumn("Impuesto3", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnImpuesto3)
            Me.columnPorcRetencion1 = New Global.System.Data.DataColumn("PorcRetencion1", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPorcRetencion1)
            Me.columnPorcRetencion2 = New Global.System.Data.DataColumn("PorcRetencion2", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPorcRetencion2)
            Me.columnPorcRetencion3 = New Global.System.Data.DataColumn("PorcRetencion3", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPorcRetencion3)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnIdArticuloStock}, True))
            Me.columnIdArticuloStock.AllowDBNull = False
            Me.columnIdArticuloStock.Unique = True
            Me.columnIdArticuloStock.DefaultValue = CType(0, Integer)
            Me.columnCodigoArticulo.DefaultValue = CType("", String)
            Me.columnNombreArticulo.DefaultValue = CType("", String)
            Me.columnIdDivisa.AllowDBNull = False
            Me.columnIdDivisa.DefaultValue = CType(0, Integer)
            Me.columnDivisa.DefaultValue = CType("", String)
            Me.columnPrecio.AllowDBNull = False
            Me.columnPrecio.DefaultValue = CType(0, Decimal)
            Me.columnDiasEntrega.AllowDBNull = False
            Me.columnDiasEntrega.DefaultValue = CType(0, Integer)
            Me.columnIdImpuesto1.AllowDBNull = False
            Me.columnIdImpuesto1.DefaultValue = CType(0, Integer)
            Me.columnIdImpuesto2.AllowDBNull = False
            Me.columnIdImpuesto2.DefaultValue = CType(0, Integer)
            Me.columnIdImpuesto3.AllowDBNull = False
            Me.columnIdImpuesto3.DefaultValue = CType(0, Integer)
            Me.columnImpuesto1.DefaultValue = CType("", String)
            Me.columnImpuesto2.Caption = "Impuesto1"
            Me.columnImpuesto2.DefaultValue = CType("", String)
            Me.columnImpuesto3.Caption = "Impuesto1"
            Me.columnImpuesto3.DefaultValue = CType("", String)
            Me.columnPorcRetencion1.AllowDBNull = False
            Me.columnPorcRetencion1.DefaultValue = CType(0, Decimal)
            Me.columnPorcRetencion2.AllowDBNull = False
            Me.columnPorcRetencion2.DefaultValue = CType(0, Decimal)
            Me.columnPorcRetencion3.AllowDBNull = False
            Me.columnPorcRetencion3.DefaultValue = CType(0, Decimal)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function NewArticulosRow() As ArticulosRow
            Return CType(Me.NewRow, ArticulosRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New ArticulosRow(builder)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(ArticulosRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.ArticulosRowChangedEvent) Is Nothing) Then
                RaiseEvent ArticulosRowChanged(Me, New ArticulosRowChangeEvent(CType(e.Row, ArticulosRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.ArticulosRowChangingEvent) Is Nothing) Then
                RaiseEvent ArticulosRowChanging(Me, New ArticulosRowChangeEvent(CType(e.Row, ArticulosRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.ArticulosRowDeletedEvent) Is Nothing) Then
                RaiseEvent ArticulosRowDeleted(Me, New ArticulosRowChangeEvent(CType(e.Row, ArticulosRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.ArticulosRowDeletingEvent) Is Nothing) Then
                RaiseEvent ArticulosRowDeleting(Me, New ArticulosRowChangeEvent(CType(e.Row, ArticulosRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub RemoveArticulosRow(ByVal row As ArticulosRow)
            Me.Rows.Remove(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As ZonasVentaDS = New ZonasVentaDS()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "ArticulosDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current, Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0

                            Do While ((s1.Position <> s1.Length) _
                                        AndAlso (s1.ReadByte = s2.ReadByte))


                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If

                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close()
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close()
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class

    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(), _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")> _
    Partial Public Class ServiciosDataTable
        Inherits Global.System.Data.TypedTableBase(Of ServiciosRow)

        Private columnIdServicio As Global.System.Data.DataColumn

        Private columnCodigoServicio As Global.System.Data.DataColumn

        Private columnNombreServicio As Global.System.Data.DataColumn

        Private columnIdDivisa As Global.System.Data.DataColumn

        Private columnDivisa As Global.System.Data.DataColumn

        Private columnPrecio As Global.System.Data.DataColumn

        Private columnDiasEntrega As Global.System.Data.DataColumn

        Private columnIdImpuesto1 As Global.System.Data.DataColumn

        Private columnIdImpuesto2 As Global.System.Data.DataColumn

        Private columnIdImpuesto3 As Global.System.Data.DataColumn

        Private columnImpuesto1 As Global.System.Data.DataColumn

        Private columnImpuesto2 As Global.System.Data.DataColumn

        Private columnImpuesto3 As Global.System.Data.DataColumn

        Private columnPorcRetencion1 As Global.System.Data.DataColumn

        Private columnPorcRetencion2 As Global.System.Data.DataColumn

        Private columnPorcRetencion3 As Global.System.Data.DataColumn

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New()
            MyBase.New()
            Me.TableName = "Servicios"
            Me.BeginInit()
            Me.InitClass()
            Me.EndInit()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New()
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property IdServicioColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIdServicio
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CodigoServicioColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCodigoServicio
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property NombreServicioColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNombreServicio
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property IdDivisaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIdDivisa
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property DivisaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDivisa
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PrecioColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPrecio
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property DiasEntregaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDiasEntrega
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property IdImpuesto1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnIdImpuesto1
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property IdImpuesto2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnIdImpuesto2
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property IdImpuesto3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnIdImpuesto3
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Impuesto1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnImpuesto1
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Impuesto2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnImpuesto2
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Impuesto3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnImpuesto3
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PorcRetencion1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnPorcRetencion1
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PorcRetencion2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnPorcRetencion2
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PorcRetencion3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnPorcRetencion3
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Browsable(False)> _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Default Public ReadOnly Property Item(ByVal index As Integer) As ServiciosRow
            Get
                Return CType(Me.Rows(index), ServiciosRow)
            End Get
        End Property

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event ServiciosRowChanging As ServiciosRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event ServiciosRowChanged As ServiciosRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event ServiciosRowDeleting As ServiciosRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event ServiciosRowDeleted As ServiciosRowChangeEventHandler

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Sub AddServiciosRow(ByVal row As ServiciosRow)
            Me.Rows.Add(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Function AddServiciosRow( _
                    ByVal IdServicio As Integer, _
                    ByVal CodigoServicio As String, _
                    ByVal NombreServicio As String, _
                    ByVal IdDivisa As Integer, _
                    ByVal Divisa As String, _
                    ByVal Precio As Decimal, _
                    ByVal DiasEntrega As Integer, _
                    ByVal IdImpuesto1 As Integer, _
                    ByVal IdImpuesto2 As Integer, _
                    ByVal IdImpuesto3 As Integer, _
                    ByVal Impuesto1 As String, _
                    ByVal Impuesto2 As String, _
                    ByVal Impuesto3 As String, _
                    ByVal PorcRetencion1 As Decimal, _
                    ByVal PorcRetencion2 As Decimal, _
                    ByVal PorcRetencion3 As Decimal) As ServiciosRow
            Dim rowServiciosRow As ServiciosRow = CType(Me.NewRow, ServiciosRow)
            Dim columnValuesArray() As Object = New Object() {IdServicio, CodigoServicio, NombreServicio, IdDivisa, Divisa, Precio, DiasEntrega, IdImpuesto1, IdImpuesto2, IdImpuesto3, Impuesto1, Impuesto2, Impuesto3, PorcRetencion1, PorcRetencion2, PorcRetencion3}
            rowServiciosRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowServiciosRow)
            Return rowServiciosRow
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function FindByIdServicio(ByVal IdServicio As Integer) As ServiciosRow
            Return CType(Me.Rows.Find(New Object() {IdServicio}), ServiciosRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As ServiciosDataTable = CType(MyBase.Clone, ServiciosDataTable)
            cln.InitVars()
            Return cln
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New ServiciosDataTable()
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub InitVars()
            Me.columnIdServicio = MyBase.Columns("IdServicio")
            Me.columnCodigoServicio = MyBase.Columns("CodigoServicio")
            Me.columnNombreServicio = MyBase.Columns("NombreServicio")
            Me.columnIdDivisa = MyBase.Columns("IdDivisa")
            Me.columnDivisa = MyBase.Columns("Divisa")
            Me.columnPrecio = MyBase.Columns("Precio")
            Me.columnDiasEntrega = MyBase.Columns("DiasEntrega")
            Me.columnIdImpuesto1 = MyBase.Columns("IdImpuesto1")
            Me.columnIdImpuesto2 = MyBase.Columns("IdImpuesto2")
            Me.columnIdImpuesto3 = MyBase.Columns("IdImpuesto3")
            Me.columnImpuesto1 = MyBase.Columns("Impuesto1")
            Me.columnImpuesto2 = MyBase.Columns("Impuesto2")
            Me.columnImpuesto3 = MyBase.Columns("Impuesto3")
            Me.columnPorcRetencion1 = MyBase.Columns("PorcRetencion1")
            Me.columnPorcRetencion2 = MyBase.Columns("PorcRetencion2")
            Me.columnPorcRetencion3 = MyBase.Columns("PorcRetencion3")
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitClass()
            Me.columnIdServicio = New Global.System.Data.DataColumn("IdServicio", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIdServicio)
            Me.columnCodigoServicio = New Global.System.Data.DataColumn("CodigoServicio", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCodigoServicio)
            Me.columnNombreServicio = New Global.System.Data.DataColumn("NombreServicio", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNombreServicio)
            Me.columnIdDivisa = New Global.System.Data.DataColumn("IdDivisa", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIdDivisa)
            Me.columnDivisa = New Global.System.Data.DataColumn("Divisa", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDivisa)
            Me.columnPrecio = New Global.System.Data.DataColumn("Precio", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPrecio)
            Me.columnDiasEntrega = New Global.System.Data.DataColumn("DiasEntrega", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDiasEntrega)
            Me.columnIdImpuesto1 = New Global.System.Data.DataColumn("IdImpuesto1", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIdImpuesto1)
            Me.columnIdImpuesto2 = New Global.System.Data.DataColumn("IdImpuesto2", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIdImpuesto2)
            Me.columnIdImpuesto3 = New Global.System.Data.DataColumn("IdImpuesto3", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIdImpuesto3)
            Me.columnImpuesto1 = New Global.System.Data.DataColumn("Impuesto1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnImpuesto1)
            Me.columnImpuesto2 = New Global.System.Data.DataColumn("Impuesto2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnImpuesto2)
            Me.columnImpuesto3 = New Global.System.Data.DataColumn("Impuesto3", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnImpuesto3)
            Me.columnPorcRetencion1 = New Global.System.Data.DataColumn("PorcRetencion1", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPorcRetencion1)
            Me.columnPorcRetencion2 = New Global.System.Data.DataColumn("PorcRetencion2", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPorcRetencion2)
            Me.columnPorcRetencion3 = New Global.System.Data.DataColumn("PorcRetencion3", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPorcRetencion3)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnIdServicio}, True))
            Me.columnIdServicio.AllowDBNull = False
            Me.columnIdServicio.Unique = True
            Me.columnIdServicio.Caption = "IdArticulo"
            Me.columnIdServicio.DefaultValue = CType(0, Integer)
            Me.columnCodigoServicio.Caption = "CodigoArticulo"
            Me.columnCodigoServicio.DefaultValue = CType("", String)
            Me.columnNombreServicio.Caption = "NombreArticulo"
            Me.columnNombreServicio.DefaultValue = CType("", String)
            Me.columnIdDivisa.AllowDBNull = False
            Me.columnIdDivisa.DefaultValue = CType(0, Integer)
            Me.columnDivisa.DefaultValue = CType("", String)
            Me.columnPrecio.AllowDBNull = False
            Me.columnPrecio.DefaultValue = CType(0, Decimal)
            Me.columnDiasEntrega.AllowDBNull = False
            Me.columnDiasEntrega.DefaultValue = CType(0, Integer)
            Me.columnIdImpuesto1.AllowDBNull = False
            Me.columnIdImpuesto1.DefaultValue = CType(0, Integer)
            Me.columnIdImpuesto2.AllowDBNull = False
            Me.columnIdImpuesto2.DefaultValue = CType(0, Integer)
            Me.columnIdImpuesto3.AllowDBNull = False
            Me.columnIdImpuesto3.DefaultValue = CType(0, Integer)
            Me.columnImpuesto1.DefaultValue = CType("", String)
            Me.columnImpuesto2.Caption = "Impuesto1"
            Me.columnImpuesto2.DefaultValue = CType("", String)
            Me.columnImpuesto3.Caption = "Impuesto1"
            Me.columnImpuesto3.DefaultValue = CType("", String)
            Me.columnPorcRetencion1.AllowDBNull = False
            Me.columnPorcRetencion1.DefaultValue = CType(0, Decimal)
            Me.columnPorcRetencion2.AllowDBNull = False
            Me.columnPorcRetencion2.DefaultValue = CType(0, Decimal)
            Me.columnPorcRetencion3.AllowDBNull = False
            Me.columnPorcRetencion3.DefaultValue = CType(0, Decimal)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function NewServiciosRow() As ServiciosRow
            Return CType(Me.NewRow, ServiciosRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New ServiciosRow(builder)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(ServiciosRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.ServiciosRowChangedEvent) Is Nothing) Then
                RaiseEvent ServiciosRowChanged(Me, New ServiciosRowChangeEvent(CType(e.Row, ServiciosRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.ServiciosRowChangingEvent) Is Nothing) Then
                RaiseEvent ServiciosRowChanging(Me, New ServiciosRowChangeEvent(CType(e.Row, ServiciosRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.ServiciosRowDeletedEvent) Is Nothing) Then
                RaiseEvent ServiciosRowDeleted(Me, New ServiciosRowChangeEvent(CType(e.Row, ServiciosRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.ServiciosRowDeletingEvent) Is Nothing) Then
                RaiseEvent ServiciosRowDeleting(Me, New ServiciosRowChangeEvent(CType(e.Row, ServiciosRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub RemoveServiciosRow(ByVal row As ServiciosRow)
            Me.Rows.Remove(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As ZonasVentaDS = New ZonasVentaDS()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "ServiciosDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current, Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0

                            Do While ((s1.Position <> s1.Length) _
                                        AndAlso (s1.ReadByte = s2.ReadByte))


                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If

                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close()
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close()
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class

    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(), _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")> _
    Partial Public Class ZonasDataTable
        Inherits Global.System.Data.TypedTableBase(Of ZonasRow)

        Private columnIdZonaVenta As Global.System.Data.DataColumn

        Private columnZonaVenta As Global.System.Data.DataColumn

        Private columnIdDivisa As Global.System.Data.DataColumn

        Private columnDivisa As Global.System.Data.DataColumn

        Private columnPrecio As Global.System.Data.DataColumn

        Private columnDiasEntrega As Global.System.Data.DataColumn

        Private columnIdImpuesto1 As Global.System.Data.DataColumn

        Private columnIdImpuesto2 As Global.System.Data.DataColumn

        Private columnIdImpuesto3 As Global.System.Data.DataColumn

        Private columnImpuesto1 As Global.System.Data.DataColumn

        Private columnImpuesto2 As Global.System.Data.DataColumn

        Private columnImpuesto3 As Global.System.Data.DataColumn

        Private columnPorcRetencion1 As Global.System.Data.DataColumn

        Private columnPorcRetencion2 As Global.System.Data.DataColumn

        Private columnPorcRetencion3 As Global.System.Data.DataColumn

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New()
            MyBase.New()
            Me.TableName = "Zonas"
            Me.BeginInit()
            Me.InitClass()
            Me.EndInit()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New()
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property IdZonaVentaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIdZonaVenta
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ZonaVentaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnZonaVenta
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property IdDivisaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIdDivisa
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property DivisaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDivisa
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PrecioColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPrecio
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property DiasEntregaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDiasEntrega
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property IdImpuesto1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnIdImpuesto1
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property IdImpuesto2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnIdImpuesto2
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property IdImpuesto3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnIdImpuesto3
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Impuesto1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnImpuesto1
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Impuesto2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnImpuesto2
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Impuesto3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnImpuesto3
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PorcRetencion1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnPorcRetencion1
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PorcRetencion2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnPorcRetencion2
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PorcRetencion3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnPorcRetencion3
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Browsable(False)> _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Default Public ReadOnly Property Item(ByVal index As Integer) As ZonasRow
            Get
                Return CType(Me.Rows(index), ZonasRow)
            End Get
        End Property

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event ZonasRowChanging As ZonasRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event ZonasRowChanged As ZonasRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event ZonasRowDeleting As ZonasRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event ZonasRowDeleted As ZonasRowChangeEventHandler

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Sub AddZonasRow(ByVal row As ZonasRow)
            Me.Rows.Add(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Function AddZonasRow(ByVal IdZonaVenta As Integer, ByVal ZonaVenta As String, ByVal IdDivisa As Integer, ByVal Divisa As String, ByVal Precio As Decimal, ByVal DiasEntrega As Integer, ByVal IdImpuesto1 As Integer, ByVal IdImpuesto2 As Integer, ByVal IdImpuesto3 As Integer, ByVal Impuesto1 As String, ByVal Impuesto2 As String, ByVal Impuesto3 As String, ByVal PorcRetencion1 As Decimal, ByVal PorcRetencion2 As Decimal, ByVal PorcRetencion3 As Decimal) As ZonasRow
            Dim rowZonasRow As ZonasRow = CType(Me.NewRow, ZonasRow)
            Dim columnValuesArray() As Object = New Object() {IdZonaVenta, ZonaVenta, IdDivisa, Divisa, Precio, DiasEntrega, IdImpuesto1, IdImpuesto2, IdImpuesto3, Impuesto1, Impuesto2, Impuesto3, PorcRetencion1, PorcRetencion2, PorcRetencion3}
            rowZonasRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowZonasRow)
            Return rowZonasRow
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function FindByIdZonaVenta(ByVal IdZonaVenta As Integer) As ZonasRow
            Return CType(Me.Rows.Find(New Object() {IdZonaVenta}), ZonasRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As ZonasDataTable = CType(MyBase.Clone, ZonasDataTable)
            cln.InitVars()
            Return cln
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New ZonasDataTable()
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub InitVars()
            Me.columnIdZonaVenta = MyBase.Columns("IdZonaVenta")
            Me.columnZonaVenta = MyBase.Columns("ZonaVenta")
            Me.columnIdDivisa = MyBase.Columns("IdDivisa")
            Me.columnDivisa = MyBase.Columns("Divisa")
            Me.columnPrecio = MyBase.Columns("Precio")
            Me.columnDiasEntrega = MyBase.Columns("DiasEntrega")
            Me.columnIdImpuesto1 = MyBase.Columns("IdImpuesto1")
            Me.columnIdImpuesto2 = MyBase.Columns("IdImpuesto2")
            Me.columnIdImpuesto3 = MyBase.Columns("IdImpuesto3")
            Me.columnImpuesto1 = MyBase.Columns("Impuesto1")
            Me.columnImpuesto2 = MyBase.Columns("Impuesto2")
            Me.columnImpuesto3 = MyBase.Columns("Impuesto3")
            Me.columnPorcRetencion1 = MyBase.Columns("PorcRetencion1")
            Me.columnPorcRetencion2 = MyBase.Columns("PorcRetencion2")
            Me.columnPorcRetencion3 = MyBase.Columns("PorcRetencion3")
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitClass()
            Me.columnIdZonaVenta = New Global.System.Data.DataColumn("IdZonaVenta", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIdZonaVenta)
            Me.columnZonaVenta = New Global.System.Data.DataColumn("ZonaVenta", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnZonaVenta)
            Me.columnIdDivisa = New Global.System.Data.DataColumn("IdDivisa", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIdDivisa)
            Me.columnDivisa = New Global.System.Data.DataColumn("Divisa", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDivisa)
            Me.columnPrecio = New Global.System.Data.DataColumn("Precio", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPrecio)
            Me.columnDiasEntrega = New Global.System.Data.DataColumn("DiasEntrega", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDiasEntrega)
            Me.columnIdImpuesto1 = New Global.System.Data.DataColumn("IdImpuesto1", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIdImpuesto1)
            Me.columnIdImpuesto2 = New Global.System.Data.DataColumn("IdImpuesto2", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIdImpuesto2)
            Me.columnIdImpuesto3 = New Global.System.Data.DataColumn("IdImpuesto3", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIdImpuesto3)
            Me.columnImpuesto1 = New Global.System.Data.DataColumn("Impuesto1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnImpuesto1)
            Me.columnImpuesto2 = New Global.System.Data.DataColumn("Impuesto2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnImpuesto2)
            Me.columnImpuesto3 = New Global.System.Data.DataColumn("Impuesto3", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnImpuesto3)
            Me.columnPorcRetencion1 = New Global.System.Data.DataColumn("PorcRetencion1", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPorcRetencion1)
            Me.columnPorcRetencion2 = New Global.System.Data.DataColumn("PorcRetencion2", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPorcRetencion2)
            Me.columnPorcRetencion3 = New Global.System.Data.DataColumn("PorcRetencion3", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPorcRetencion3)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnIdZonaVenta}, True))
            Me.columnIdZonaVenta.AllowDBNull = False
            Me.columnIdZonaVenta.Unique = True
            Me.columnIdZonaVenta.DefaultValue = CType(0, Integer)
            Me.columnZonaVenta.DefaultValue = CType("", String)
            Me.columnIdDivisa.AllowDBNull = False
            Me.columnIdDivisa.DefaultValue = CType(0, Integer)
            Me.columnDivisa.DefaultValue = CType("", String)
            Me.columnPrecio.AllowDBNull = False
            Me.columnPrecio.DefaultValue = CType(0, Decimal)
            Me.columnDiasEntrega.AllowDBNull = False
            Me.columnDiasEntrega.DefaultValue = CType(0, Integer)
            Me.columnIdImpuesto1.AllowDBNull = False
            Me.columnIdImpuesto1.DefaultValue = CType(0, Integer)
            Me.columnIdImpuesto2.AllowDBNull = False
            Me.columnIdImpuesto2.DefaultValue = CType(0, Integer)
            Me.columnIdImpuesto3.AllowDBNull = False
            Me.columnIdImpuesto3.DefaultValue = CType(0, Integer)
            Me.columnImpuesto1.DefaultValue = CType("", String)
            Me.columnImpuesto2.Caption = "Impuesto1"
            Me.columnImpuesto2.DefaultValue = CType("", String)
            Me.columnImpuesto3.Caption = "Impuesto1"
            Me.columnImpuesto3.DefaultValue = CType("", String)
            Me.columnPorcRetencion1.AllowDBNull = False
            Me.columnPorcRetencion1.DefaultValue = CType(0, Decimal)
            Me.columnPorcRetencion2.AllowDBNull = False
            Me.columnPorcRetencion2.DefaultValue = CType(0, Decimal)
            Me.columnPorcRetencion3.AllowDBNull = False
            Me.columnPorcRetencion3.DefaultValue = CType(0, Decimal)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function NewZonasRow() As ZonasRow
            Return CType(Me.NewRow, ZonasRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New ZonasRow(builder)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(ZonasRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.ZonasRowChangedEvent) Is Nothing) Then
                RaiseEvent ZonasRowChanged(Me, New ZonasRowChangeEvent(CType(e.Row, ZonasRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.ZonasRowChangingEvent) Is Nothing) Then
                RaiseEvent ZonasRowChanging(Me, New ZonasRowChangeEvent(CType(e.Row, ZonasRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.ZonasRowDeletedEvent) Is Nothing) Then
                RaiseEvent ZonasRowDeleted(Me, New ZonasRowChangeEvent(CType(e.Row, ZonasRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.ZonasRowDeletingEvent) Is Nothing) Then
                RaiseEvent ZonasRowDeleting(Me, New ZonasRowChangeEvent(CType(e.Row, ZonasRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub RemoveZonasRow(ByVal row As ZonasRow)
            Me.Rows.Remove(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As ZonasVentaDS = New ZonasVentaDS()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "ZonasDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current, Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0

                            Do While ((s1.Position <> s1.Length) _
                                        AndAlso (s1.ReadByte = s2.ReadByte))


                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If

                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close()
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close()
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class

    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class ArticulosRow
        Inherits Global.System.Data.DataRow

        Private tableArticulos As ArticulosDataTable

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableArticulos = CType(Me.Table, ArticulosDataTable)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property IdArticuloStock() As Integer
            Get
                Return CType(Me(Me.tableArticulos.IdArticuloStockColumn), Integer)
            End Get
            Set(ByVal value As Integer)
                Me(Me.tableArticulos.IdArticuloStockColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CodigoArticulo() As String
            Get
                Try
                    Return CType(Me(Me.tableArticulos.CodigoArticuloColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CodigoArticulo' de la tabla 'Articulos' es DBNull.", e)
                End Try
            End Get
            Set(ByVal value As String)
                Me(Me.tableArticulos.CodigoArticuloColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property NombreArticulo() As String
            Get
                Try
                    Return CType(Me(Me.tableArticulos.NombreArticuloColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'NombreArticulo' de la tabla 'Articulos' es DBNull.", e)
                End Try
            End Get
            Set(ByVal value As String)
                Me(Me.tableArticulos.NombreArticuloColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property IdDivisa() As Integer
            Get
                Return CType(Me(Me.tableArticulos.IdDivisaColumn), Integer)
            End Get
            Set(ByVal value As Integer)
                Me(Me.tableArticulos.IdDivisaColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Divisa() As String
            Get
                Try
                    Return CType(Me(Me.tableArticulos.DivisaColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Divisa' de la tabla 'Articulos' es DBNull.", e)
                End Try
            End Get
            Set(ByVal value As String)
                Me(Me.tableArticulos.DivisaColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Precio() As Decimal
            Get
                Return CType(Me(Me.tableArticulos.PrecioColumn), Decimal)
            End Get
            Set(ByVal value As Decimal)
                Me(Me.tableArticulos.PrecioColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property DiasEntrega() As Integer
            Get
                Return CType(Me(Me.tableArticulos.DiasEntregaColumn), Integer)
            End Get
            Set(ByVal value As Integer)
                Me(Me.tableArticulos.DiasEntregaColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property IdImpuesto1() As Integer
            Get
                Return CType(Me(Me.tableArticulos.IdImpuesto1Column), Integer)
            End Get
            Set(ByVal value As Integer)
                Me(Me.tableArticulos.IdImpuesto1Column) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property IdImpuesto2() As Integer
            Get
                Return CType(Me(Me.tableArticulos.IdImpuesto2Column), Integer)
            End Get
            Set(ByVal value As Integer)
                Me(Me.tableArticulos.IdImpuesto2Column) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property IdImpuesto3() As Integer
            Get
                Return CType(Me(Me.tableArticulos.IdImpuesto3Column), Integer)
            End Get
            Set(ByVal value As Integer)
                Me(Me.tableArticulos.IdImpuesto3Column) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Impuesto1() As String
            Get
                Try
                    Return CType(Me(Me.tableArticulos.Impuesto1Column), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Impuesto1' de la tabla 'Articulos' es DBNull.", e)
                End Try
            End Get
            Set(ByVal value As String)
                Me(Me.tableArticulos.Impuesto1Column) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Impuesto2() As String
            Get
                Try
                    Return CType(Me(Me.tableArticulos.Impuesto2Column), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Impuesto2' de la tabla 'Articulos' es DBNull.", e)
                End Try
            End Get
            Set(ByVal value As String)
                Me(Me.tableArticulos.Impuesto2Column) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Impuesto3() As String
            Get
                Try
                    Return CType(Me(Me.tableArticulos.Impuesto3Column), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Impuesto3' de la tabla 'Articulos' es DBNull.", e)
                End Try
            End Get
            Set(ByVal value As String)
                Me(Me.tableArticulos.Impuesto3Column) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PorcRetencion1() As Decimal
            Get
                Return CType(Me(Me.tableArticulos.PorcRetencion1Column), Decimal)
            End Get
            Set(ByVal value As Decimal)
                Me(Me.tableArticulos.PorcRetencion1Column) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PorcRetencion2() As Decimal
            Get
                Return CType(Me(Me.tableArticulos.PorcRetencion2Column), Decimal)
            End Get
            Set(ByVal value As Decimal)
                Me(Me.tableArticulos.PorcRetencion2Column) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PorcRetencion3() As Decimal
            Get
                Return CType(Me(Me.tableArticulos.PorcRetencion3Column), Decimal)
            End Get
            Set(ByVal value As Decimal)
                Me(Me.tableArticulos.PorcRetencion3Column) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCodigoArticuloNull() As Boolean
            Return Me.IsNull(Me.tableArticulos.CodigoArticuloColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCodigoArticuloNull()
            Me(Me.tableArticulos.CodigoArticuloColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsNombreArticuloNull() As Boolean
            Return Me.IsNull(Me.tableArticulos.NombreArticuloColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetNombreArticuloNull()
            Me(Me.tableArticulos.NombreArticuloColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsDivisaNull() As Boolean
            Return Me.IsNull(Me.tableArticulos.DivisaColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetDivisaNull()
            Me(Me.tableArticulos.DivisaColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsImpuesto1Null() As Boolean
            Return Me.IsNull(Me.tableArticulos.Impuesto1Column)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetImpuesto1Null()
            Me(Me.tableArticulos.Impuesto1Column) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsImpuesto2Null() As Boolean
            Return Me.IsNull(Me.tableArticulos.Impuesto2Column)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetImpuesto2Null()
            Me(Me.tableArticulos.Impuesto2Column) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsImpuesto3Null() As Boolean
            Return Me.IsNull(Me.tableArticulos.Impuesto3Column)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetImpuesto3Null()
            Me(Me.tableArticulos.Impuesto3Column) = Global.System.Convert.DBNull
        End Sub
    End Class

    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class ServiciosRow
        Inherits Global.System.Data.DataRow

        Private tableServicios As ServiciosDataTable

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableServicios = CType(Me.Table, ServiciosDataTable)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property IdServicio() As Integer
            Get
                Return CType(Me(Me.tableServicios.IdServicioColumn), Integer)
            End Get
            Set(ByVal value As Integer)
                Me(Me.tableServicios.IdServicioColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CodigoServicio() As String
            Get
                Try
                    Return CType(Me(Me.tableServicios.CodigoServicioColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CodigoServicio' de la tabla 'Servicios' es DBNull.", e)
                End Try
            End Get
            Set(ByVal value As String)
                Me(Me.tableServicios.CodigoServicioColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property NombreServicio() As String
            Get
                Try
                    Return CType(Me(Me.tableServicios.NombreServicioColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'NombreServicio' de la tabla 'Servicios' es DBNull.", e)
                End Try
            End Get
            Set(ByVal value As String)
                Me(Me.tableServicios.NombreServicioColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property IdDivisa() As Integer
            Get
                Return CType(Me(Me.tableServicios.IdDivisaColumn), Integer)
            End Get
            Set(ByVal value As Integer)
                Me(Me.tableServicios.IdDivisaColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Divisa() As String
            Get
                Try
                    Return CType(Me(Me.tableServicios.DivisaColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Divisa' de la tabla 'Servicios' es DBNull.", e)
                End Try
            End Get
            Set(ByVal value As String)
                Me(Me.tableServicios.DivisaColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Precio() As Decimal
            Get
                Return CType(Me(Me.tableServicios.PrecioColumn), Decimal)
            End Get
            Set(ByVal value As Decimal)
                Me(Me.tableServicios.PrecioColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property DiasEntrega() As Integer
            Get
                Return CType(Me(Me.tableServicios.DiasEntregaColumn), Integer)
            End Get
            Set(ByVal value As Integer)
                Me(Me.tableServicios.DiasEntregaColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property IdImpuesto1() As Integer
            Get
                Return CType(Me(Me.tableServicios.IdImpuesto1Column), Integer)
            End Get
            Set(ByVal value As Integer)
                Me(Me.tableServicios.IdImpuesto1Column) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property IdImpuesto2() As Integer
            Get
                Return CType(Me(Me.tableServicios.IdImpuesto2Column), Integer)
            End Get
            Set(ByVal value As Integer)
                Me(Me.tableServicios.IdImpuesto2Column) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property IdImpuesto3() As Integer
            Get
                Return CType(Me(Me.tableServicios.IdImpuesto3Column), Integer)
            End Get
            Set(ByVal value As Integer)
                Me(Me.tableServicios.IdImpuesto3Column) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Impuesto1() As String
            Get
                Try
                    Return CType(Me(Me.tableServicios.Impuesto1Column), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Impuesto1' de la tabla 'Servicios' es DBNull.", e)
                End Try
            End Get
            Set(ByVal value As String)
                Me(Me.tableServicios.Impuesto1Column) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Impuesto2() As String
            Get
                Try
                    Return CType(Me(Me.tableServicios.Impuesto2Column), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Impuesto2' de la tabla 'Servicios' es DBNull.", e)
                End Try
            End Get
            Set(ByVal value As String)
                Me(Me.tableServicios.Impuesto2Column) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Impuesto3() As String
            Get
                Try
                    Return CType(Me(Me.tableServicios.Impuesto3Column), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Impuesto3' de la tabla 'Servicios' es DBNull.", e)
                End Try
            End Get
            Set(ByVal value As String)
                Me(Me.tableServicios.Impuesto3Column) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PorcRetencion1() As Decimal
            Get
                Return CType(Me(Me.tableServicios.PorcRetencion1Column), Decimal)
            End Get
            Set(ByVal value As Decimal)
                Me(Me.tableServicios.PorcRetencion1Column) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PorcRetencion2() As Decimal
            Get
                Return CType(Me(Me.tableServicios.PorcRetencion2Column), Decimal)
            End Get
            Set(ByVal value As Decimal)
                Me(Me.tableServicios.PorcRetencion2Column) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PorcRetencion3() As Decimal
            Get
                Return CType(Me(Me.tableServicios.PorcRetencion3Column), Decimal)
            End Get
            Set(ByVal value As Decimal)
                Me(Me.tableServicios.PorcRetencion3Column) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCodigoServicioNull() As Boolean
            Return Me.IsNull(Me.tableServicios.CodigoServicioColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCodigoServicioNull()
            Me(Me.tableServicios.CodigoServicioColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsNombreServicioNull() As Boolean
            Return Me.IsNull(Me.tableServicios.NombreServicioColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetNombreServicioNull()
            Me(Me.tableServicios.NombreServicioColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsDivisaNull() As Boolean
            Return Me.IsNull(Me.tableServicios.DivisaColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetDivisaNull()
            Me(Me.tableServicios.DivisaColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsImpuesto1Null() As Boolean
            Return Me.IsNull(Me.tableServicios.Impuesto1Column)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetImpuesto1Null()
            Me(Me.tableServicios.Impuesto1Column) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsImpuesto2Null() As Boolean
            Return Me.IsNull(Me.tableServicios.Impuesto2Column)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetImpuesto2Null()
            Me(Me.tableServicios.Impuesto2Column) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsImpuesto3Null() As Boolean
            Return Me.IsNull(Me.tableServicios.Impuesto3Column)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetImpuesto3Null()
            Me(Me.tableServicios.Impuesto3Column) = Global.System.Convert.DBNull
        End Sub
    End Class

    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class ZonasRow
        Inherits Global.System.Data.DataRow

        Private tableZonas As ZonasDataTable

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableZonas = CType(Me.Table, ZonasDataTable)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property IdZonaVenta() As Integer
            Get
                Return CType(Me(Me.tableZonas.IdZonaVentaColumn), Integer)
            End Get
            Set(ByVal value As Integer)
                Me(Me.tableZonas.IdZonaVentaColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ZonaVenta() As String
            Get
                Try
                    Return CType(Me(Me.tableZonas.ZonaVentaColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ZonaVenta' de la tabla 'Zonas' es DBNull.", e)
                End Try
            End Get
            Set(ByVal value As String)
                Me(Me.tableZonas.ZonaVentaColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property IdDivisa() As Integer
            Get
                Return CType(Me(Me.tableZonas.IdDivisaColumn), Integer)
            End Get
            Set(ByVal value As Integer)
                Me(Me.tableZonas.IdDivisaColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Divisa() As String
            Get
                Try
                    Return CType(Me(Me.tableZonas.DivisaColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Divisa' de la tabla 'Zonas' es DBNull.", e)
                End Try
            End Get
            Set(ByVal value As String)
                Me(Me.tableZonas.DivisaColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Precio() As Decimal
            Get
                Return CType(Me(Me.tableZonas.PrecioColumn), Decimal)
            End Get
            Set(ByVal value As Decimal)
                Me(Me.tableZonas.PrecioColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property DiasEntrega() As Integer
            Get
                Return CType(Me(Me.tableZonas.DiasEntregaColumn), Integer)
            End Get
            Set(ByVal value As Integer)
                Me(Me.tableZonas.DiasEntregaColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property IdImpuesto1() As Integer
            Get
                Return CType(Me(Me.tableZonas.IdImpuesto1Column), Integer)
            End Get
            Set(ByVal value As Integer)
                Me(Me.tableZonas.IdImpuesto1Column) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property IdImpuesto2() As Integer
            Get
                Return CType(Me(Me.tableZonas.IdImpuesto2Column), Integer)
            End Get
            Set(ByVal value As Integer)
                Me(Me.tableZonas.IdImpuesto2Column) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property IdImpuesto3() As Integer
            Get
                Return CType(Me(Me.tableZonas.IdImpuesto3Column), Integer)
            End Get
            Set(ByVal value As Integer)
                Me(Me.tableZonas.IdImpuesto3Column) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Impuesto1() As String
            Get
                Try
                    Return CType(Me(Me.tableZonas.Impuesto1Column), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Impuesto1' de la tabla 'Zonas' es DBNull.", e)
                End Try
            End Get
            Set(ByVal value As String)
                Me(Me.tableZonas.Impuesto1Column) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Impuesto2() As String
            Get
                Try
                    Return CType(Me(Me.tableZonas.Impuesto2Column), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Impuesto2' de la tabla 'Zonas' es DBNull.", e)
                End Try
            End Get
            Set(ByVal value As String)
                Me(Me.tableZonas.Impuesto2Column) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Impuesto3() As String
            Get
                Try
                    Return CType(Me(Me.tableZonas.Impuesto3Column), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Impuesto3' de la tabla 'Zonas' es DBNull.", e)
                End Try
            End Get
            Set(ByVal value As String)
                Me(Me.tableZonas.Impuesto3Column) = Value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PorcRetencion1() As Decimal
            Get
                Return CType(Me(Me.tableZonas.PorcRetencion1Column), Decimal)
            End Get
            Set(ByVal value As Decimal)
                Me(Me.tableZonas.PorcRetencion1Column) = Value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PorcRetencion2() As Decimal
            Get
                Return CType(Me(Me.tableZonas.PorcRetencion2Column), Decimal)
            End Get
            Set(ByVal value As Decimal)
                Me(Me.tableZonas.PorcRetencion2Column) = Value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PorcRetencion3() As Decimal
            Get
                Return CType(Me(Me.tableZonas.PorcRetencion3Column), Decimal)
            End Get
            Set(ByVal value As Decimal)
                Me(Me.tableZonas.PorcRetencion3Column) = Value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsZonaVentaNull() As Boolean
            Return Me.IsNull(Me.tableZonas.ZonaVentaColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetZonaVentaNull()
            Me(Me.tableZonas.ZonaVentaColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsDivisaNull() As Boolean
            Return Me.IsNull(Me.tableZonas.DivisaColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetDivisaNull()
            Me(Me.tableZonas.DivisaColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsImpuesto1Null() As Boolean
            Return Me.IsNull(Me.tableZonas.Impuesto1Column)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetImpuesto1Null()
            Me(Me.tableZonas.Impuesto1Column) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsImpuesto2Null() As Boolean
            Return Me.IsNull(Me.tableZonas.Impuesto2Column)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetImpuesto2Null()
            Me(Me.tableZonas.Impuesto2Column) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsImpuesto3Null() As Boolean
            Return Me.IsNull(Me.tableZonas.Impuesto3Column)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetImpuesto3Null()
            Me(Me.tableZonas.Impuesto3Column) = Global.System.Convert.DBNull
        End Sub
    End Class

    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Class ArticulosRowChangeEvent
        Inherits Global.System.EventArgs

        Private eventRow As ArticulosRow

        Private eventAction As Global.System.Data.DataRowAction

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New(ByVal row As ArticulosRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New()
            Me.eventRow = row
            Me.eventAction = action
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Row() As ArticulosRow
            Get
                Return Me.eventRow
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class

    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Class ServiciosRowChangeEvent
        Inherits Global.System.EventArgs

        Private eventRow As ServiciosRow

        Private eventAction As Global.System.Data.DataRowAction

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New(ByVal row As ServiciosRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New()
            Me.eventRow = row
            Me.eventAction = action
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Row() As ServiciosRow
            Get
                Return Me.eventRow
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class

    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Class ZonasRowChangeEvent
        Inherits Global.System.EventArgs

        Private eventRow As ZonasRow

        Private eventAction As Global.System.Data.DataRowAction

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New(ByVal row As ZonasRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New()
            Me.eventRow = row
            Me.eventAction = action
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Row() As ZonasRow
            Get
                Return Me.eventRow
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class
