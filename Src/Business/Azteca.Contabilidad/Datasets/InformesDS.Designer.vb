'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.18034
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.Serializable(), _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"), _
 Global.System.ComponentModel.ToolboxItem(True), _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"), _
 Global.System.Xml.Serialization.XmlRootAttribute("InformesDS"), _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")> _
Partial Public Class InformesDS
    Inherits Global.System.Data.DataSet

    Private tableComprobantesEmitidos As ComprobantesEmitidosDataTable

    Private tableComprobantesList As ComprobantesListDataTable

    Private tableComprobantesFiscales As ComprobantesFiscalesDataTable

    Private tableBalanceGral As BalanceGralDataTable

    Private tableEstadoResultados As EstadoResultadosDataTable

    Private tablePolizaInforme As PolizaInformeDataTable

    Private tableImagenes As ImagenesDataTable

    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Sub New()
        MyBase.New()
        Me.BeginInit()
        Me.InitClass()
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit()
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, False)
        If (Me.IsBinarySerialized(info, context) = True) Then
            Me.InitVars(False)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)), String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("ComprobantesEmitidos")) Is Nothing) Then
                MyBase.Tables.Add(New ComprobantesEmitidosDataTable(ds.Tables("ComprobantesEmitidos")))
            End If
            If (Not (ds.Tables("ComprobantesList")) Is Nothing) Then
                MyBase.Tables.Add(New ComprobantesListDataTable(ds.Tables("ComprobantesList")))
            End If
            If (Not (ds.Tables("ComprobantesFiscales")) Is Nothing) Then
                MyBase.Tables.Add(New ComprobantesFiscalesDataTable(ds.Tables("ComprobantesFiscales")))
            End If
            If (Not (ds.Tables("BalanceGral")) Is Nothing) Then
                MyBase.Tables.Add(New BalanceGralDataTable(ds.Tables("BalanceGral")))
            End If
            If (Not (ds.Tables("EstadoResultados")) Is Nothing) Then
                MyBase.Tables.Add(New EstadoResultadosDataTable(ds.Tables("EstadoResultados")))
            End If
            If (Not (ds.Tables("PolizaInforme")) Is Nothing) Then
                MyBase.Tables.Add(New PolizaInformeDataTable(ds.Tables("PolizaInforme")))
            End If
            If (Not (ds.Tables("Imagenes")) Is Nothing) Then
                MyBase.Tables.Add(New ImagenesDataTable(ds.Tables("Imagenes")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, False, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars()
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
     Global.System.ComponentModel.Browsable(False), _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)> _
    Public ReadOnly Property ComprobantesEmitidos() As ComprobantesEmitidosDataTable
        Get
            Return Me.tableComprobantesEmitidos
        End Get
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
     Global.System.ComponentModel.Browsable(False), _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)> _
    Public ReadOnly Property ComprobantesList() As ComprobantesListDataTable
        Get
            Return Me.tableComprobantesList
        End Get
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
     Global.System.ComponentModel.Browsable(False), _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)> _
    Public ReadOnly Property ComprobantesFiscales() As ComprobantesFiscalesDataTable
        Get
            Return Me.tableComprobantesFiscales
        End Get
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
     Global.System.ComponentModel.Browsable(False), _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)> _
    Public ReadOnly Property BalanceGral() As BalanceGralDataTable
        Get
            Return Me.tableBalanceGral
        End Get
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
     Global.System.ComponentModel.Browsable(False), _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)> _
    Public ReadOnly Property EstadoResultados() As EstadoResultadosDataTable
        Get
            Return Me.tableEstadoResultados
        End Get
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
     Global.System.ComponentModel.Browsable(False), _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)> _
    Public ReadOnly Property PolizaInforme() As PolizaInformeDataTable
        Get
            Return Me.tablePolizaInforme
        End Get
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
     Global.System.ComponentModel.Browsable(False), _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)> _
    Public ReadOnly Property Imagenes() As ImagenesDataTable
        Get
            Return Me.tableImagenes
        End Get
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
     Global.System.ComponentModel.BrowsableAttribute(True), _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)> _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set(value As Global.System.Data.SchemaSerializationMode)
            Me._schemaSerializationMode = value
        End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)> _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)> _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit()
        Me.InitClass()
        Me.EndInit()
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As InformesDS = CType(MyBase.Clone, InformesDS)
        cln.InitVars()
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return False
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return False
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset()
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXml(reader)
            If (Not (ds.Tables("ComprobantesEmitidos")) Is Nothing) Then
                MyBase.Tables.Add(New ComprobantesEmitidosDataTable(ds.Tables("ComprobantesEmitidos")))
            End If
            If (Not (ds.Tables("ComprobantesList")) Is Nothing) Then
                MyBase.Tables.Add(New ComprobantesListDataTable(ds.Tables("ComprobantesList")))
            End If
            If (Not (ds.Tables("ComprobantesFiscales")) Is Nothing) Then
                MyBase.Tables.Add(New ComprobantesFiscalesDataTable(ds.Tables("ComprobantesFiscales")))
            End If
            If (Not (ds.Tables("BalanceGral")) Is Nothing) Then
                MyBase.Tables.Add(New BalanceGralDataTable(ds.Tables("BalanceGral")))
            End If
            If (Not (ds.Tables("EstadoResultados")) Is Nothing) Then
                MyBase.Tables.Add(New EstadoResultadosDataTable(ds.Tables("EstadoResultados")))
            End If
            If (Not (ds.Tables("PolizaInforme")) Is Nothing) Then
                MyBase.Tables.Add(New PolizaInformeDataTable(ds.Tables("PolizaInforme")))
            End If
            If (Not (ds.Tables("Imagenes")) Is Nothing) Then
                MyBase.Tables.Add(New ImagenesDataTable(ds.Tables("Imagenes")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, False, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars()
        Else
            Me.ReadXml(reader)
            Me.InitVars()
        End If
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Friend Overloads Sub InitVars()
        Me.InitVars(True)
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableComprobantesEmitidos = CType(MyBase.Tables("ComprobantesEmitidos"), ComprobantesEmitidosDataTable)
        If (initTable = True) Then
            If (Not (Me.tableComprobantesEmitidos) Is Nothing) Then
                Me.tableComprobantesEmitidos.InitVars()
            End If
        End If
        Me.tableComprobantesList = CType(MyBase.Tables("ComprobantesList"), ComprobantesListDataTable)
        If (initTable = True) Then
            If (Not (Me.tableComprobantesList) Is Nothing) Then
                Me.tableComprobantesList.InitVars()
            End If
        End If
        Me.tableComprobantesFiscales = CType(MyBase.Tables("ComprobantesFiscales"), ComprobantesFiscalesDataTable)
        If (initTable = True) Then
            If (Not (Me.tableComprobantesFiscales) Is Nothing) Then
                Me.tableComprobantesFiscales.InitVars()
            End If
        End If
        Me.tableBalanceGral = CType(MyBase.Tables("BalanceGral"), BalanceGralDataTable)
        If (initTable = True) Then
            If (Not (Me.tableBalanceGral) Is Nothing) Then
                Me.tableBalanceGral.InitVars()
            End If
        End If
        Me.tableEstadoResultados = CType(MyBase.Tables("EstadoResultados"), EstadoResultadosDataTable)
        If (initTable = True) Then
            If (Not (Me.tableEstadoResultados) Is Nothing) Then
                Me.tableEstadoResultados.InitVars()
            End If
        End If
        Me.tablePolizaInforme = CType(MyBase.Tables("PolizaInforme"), PolizaInformeDataTable)
        If (initTable = True) Then
            If (Not (Me.tablePolizaInforme) Is Nothing) Then
                Me.tablePolizaInforme.InitVars()
            End If
        End If
        Me.tableImagenes = CType(MyBase.Tables("Imagenes"), ImagenesDataTable)
        If (initTable = True) Then
            If (Not (Me.tableImagenes) Is Nothing) Then
                Me.tableImagenes.InitVars()
            End If
        End If
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Private Sub InitClass()
        Me.DataSetName = "InformesDS"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/InformesDS.xsd"
        Me.EnforceConstraints = True
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableComprobantesEmitidos = New ComprobantesEmitidosDataTable()
        MyBase.Tables.Add(Me.tableComprobantesEmitidos)
        Me.tableComprobantesList = New ComprobantesListDataTable()
        MyBase.Tables.Add(Me.tableComprobantesList)
        Me.tableComprobantesFiscales = New ComprobantesFiscalesDataTable()
        MyBase.Tables.Add(Me.tableComprobantesFiscales)
        Me.tableBalanceGral = New BalanceGralDataTable()
        MyBase.Tables.Add(Me.tableBalanceGral)
        Me.tableEstadoResultados = New EstadoResultadosDataTable()
        MyBase.Tables.Add(Me.tableEstadoResultados)
        Me.tablePolizaInforme = New PolizaInformeDataTable()
        MyBase.Tables.Add(Me.tablePolizaInforme)
        Me.tableImagenes = New ImagenesDataTable()
        MyBase.Tables.Add(Me.tableImagenes)
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Private Function ShouldSerializeComprobantesEmitidos() As Boolean
        Return False
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Private Function ShouldSerializeComprobantesList() As Boolean
        Return False
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Private Function ShouldSerializeComprobantesFiscales() As Boolean
        Return False
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Private Function ShouldSerializeBalanceGral() As Boolean
        Return False
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Private Function ShouldSerializeEstadoResultados() As Boolean
        Return False
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Private Function ShouldSerializePolizaInforme() As Boolean
        Return False
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Private Function ShouldSerializeImagenes() As Boolean
        Return False
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars()
        End If
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As InformesDS = New InformesDS()
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Try
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current, Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0

                        Do While ((s1.Position <> s1.Length) _
                                    AndAlso (s1.ReadByte = s2.ReadByte))


                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If

                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close()
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close()
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function

    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Delegate Sub ComprobantesEmitidosRowChangeEventHandler(ByVal sender As Object, ByVal e As ComprobantesEmitidosRowChangeEvent)

    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Delegate Sub ComprobantesListRowChangeEventHandler(ByVal sender As Object, ByVal e As ComprobantesListRowChangeEvent)

    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Delegate Sub ComprobantesFiscalesRowChangeEventHandler(ByVal sender As Object, ByVal e As ComprobantesFiscalesRowChangeEvent)

    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Delegate Sub BalanceGralRowChangeEventHandler(ByVal sender As Object, ByVal e As BalanceGralRowChangeEvent)

    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Delegate Sub EstadoResultadosRowChangeEventHandler(ByVal sender As Object, ByVal e As EstadoResultadosRowChangeEvent)

    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Delegate Sub PolizaInformeRowChangeEventHandler(ByVal sender As Object, ByVal e As PolizaInformeRowChangeEvent)

    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Delegate Sub ImagenesRowChangeEventHandler(ByVal sender As Object, ByVal e As ImagenesRowChangeEvent)

    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(), _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")> _
    Partial Public Class ComprobantesEmitidosDataTable
        Inherits Global.System.Data.TypedTableBase(Of ComprobantesEmitidosRow)

        Private columnRFC As Global.System.Data.DataColumn

        Private columnSerie As Global.System.Data.DataColumn

        Private columnFolio As Global.System.Data.DataColumn

        Private columnNumAprobacion As Global.System.Data.DataColumn

        Private columnHoraComprobante As Global.System.Data.DataColumn

        Private columnTotal As Global.System.Data.DataColumn

        Private columnImpTrasladados As Global.System.Data.DataColumn

        Private columnActiva As Global.System.Data.DataColumn

        Private columnEfecto As Global.System.Data.DataColumn

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New()
            MyBase.New()
            Me.TableName = "ComprobantesEmitidos"
            Me.BeginInit()
            Me.InitClass()
            Me.EndInit()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New()
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property RFCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRFC
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property SerieColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSerie
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property FolioColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFolio
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property NumAprobacionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNumAprobacion
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property HoraComprobanteColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHoraComprobante
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property TotalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTotal
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ImpTrasladadosColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnImpTrasladados
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ActivaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnActiva
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property EfectoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEfecto
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Browsable(False)> _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Default Public ReadOnly Property Item(ByVal index As Integer) As ComprobantesEmitidosRow
            Get
                Return CType(Me.Rows(index), ComprobantesEmitidosRow)
            End Get
        End Property

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event ComprobantesEmitidosRowChanging As ComprobantesEmitidosRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event ComprobantesEmitidosRowChanged As ComprobantesEmitidosRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event ComprobantesEmitidosRowDeleting As ComprobantesEmitidosRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event ComprobantesEmitidosRowDeleted As ComprobantesEmitidosRowChangeEventHandler

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Sub AddComprobantesEmitidosRow(ByVal row As ComprobantesEmitidosRow)
            Me.Rows.Add(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Function AddComprobantesEmitidosRow(ByVal RFC As String, ByVal Serie As String, ByVal Folio As Integer, ByVal NumAprobacion As String, ByVal HoraComprobante As Date, ByVal Total As Decimal, ByVal ImpTrasladados As Decimal, ByVal Activa As Boolean, ByVal Efecto As String) As ComprobantesEmitidosRow
            Dim rowComprobantesEmitidosRow As ComprobantesEmitidosRow = CType(Me.NewRow, ComprobantesEmitidosRow)
            Dim columnValuesArray() As Object = New Object() {RFC, Serie, Folio, NumAprobacion, HoraComprobante, Total, ImpTrasladados, Activa, Efecto}
            rowComprobantesEmitidosRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowComprobantesEmitidosRow)
            Return rowComprobantesEmitidosRow
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As ComprobantesEmitidosDataTable = CType(MyBase.Clone, ComprobantesEmitidosDataTable)
            cln.InitVars()
            Return cln
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New ComprobantesEmitidosDataTable()
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub InitVars()
            Me.columnRFC = MyBase.Columns("RFC")
            Me.columnSerie = MyBase.Columns("Serie")
            Me.columnFolio = MyBase.Columns("Folio")
            Me.columnNumAprobacion = MyBase.Columns("NumAprobacion")
            Me.columnHoraComprobante = MyBase.Columns("HoraComprobante")
            Me.columnTotal = MyBase.Columns("Total")
            Me.columnImpTrasladados = MyBase.Columns("ImpTrasladados")
            Me.columnActiva = MyBase.Columns("Activa")
            Me.columnEfecto = MyBase.Columns("Efecto")
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitClass()
            Me.columnRFC = New Global.System.Data.DataColumn("RFC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRFC)
            Me.columnSerie = New Global.System.Data.DataColumn("Serie", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSerie)
            Me.columnFolio = New Global.System.Data.DataColumn("Folio", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFolio)
            Me.columnNumAprobacion = New Global.System.Data.DataColumn("NumAprobacion", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNumAprobacion)
            Me.columnHoraComprobante = New Global.System.Data.DataColumn("HoraComprobante", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHoraComprobante)
            Me.columnTotal = New Global.System.Data.DataColumn("Total", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTotal)
            Me.columnImpTrasladados = New Global.System.Data.DataColumn("ImpTrasladados", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnImpTrasladados)
            Me.columnActiva = New Global.System.Data.DataColumn("Activa", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnActiva)
            Me.columnEfecto = New Global.System.Data.DataColumn("Efecto", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEfecto)
            Me.columnRFC.DefaultValue = CType("", String)
            Me.columnSerie.DefaultValue = CType("", String)
            Me.columnFolio.DefaultValue = CType(0, Integer)
            Me.columnNumAprobacion.DefaultValue = CType("", String)
            Me.columnTotal.DefaultValue = CType(0D, Decimal)
            Me.columnImpTrasladados.DefaultValue = CType(0D, Decimal)
            Me.columnActiva.DefaultValue = CType(True, Boolean)
            Me.columnEfecto.AllowDBNull = False
            Me.columnEfecto.DefaultValue = CType("", String)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function NewComprobantesEmitidosRow() As ComprobantesEmitidosRow
            Return CType(Me.NewRow, ComprobantesEmitidosRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New ComprobantesEmitidosRow(builder)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(ComprobantesEmitidosRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.ComprobantesEmitidosRowChangedEvent) Is Nothing) Then
                RaiseEvent ComprobantesEmitidosRowChanged(Me, New ComprobantesEmitidosRowChangeEvent(CType(e.Row, ComprobantesEmitidosRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.ComprobantesEmitidosRowChangingEvent) Is Nothing) Then
                RaiseEvent ComprobantesEmitidosRowChanging(Me, New ComprobantesEmitidosRowChangeEvent(CType(e.Row, ComprobantesEmitidosRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.ComprobantesEmitidosRowDeletedEvent) Is Nothing) Then
                RaiseEvent ComprobantesEmitidosRowDeleted(Me, New ComprobantesEmitidosRowChangeEvent(CType(e.Row, ComprobantesEmitidosRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.ComprobantesEmitidosRowDeletingEvent) Is Nothing) Then
                RaiseEvent ComprobantesEmitidosRowDeleting(Me, New ComprobantesEmitidosRowChangeEvent(CType(e.Row, ComprobantesEmitidosRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub RemoveComprobantesEmitidosRow(ByVal row As ComprobantesEmitidosRow)
            Me.Rows.Remove(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As InformesDS = New InformesDS()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "ComprobantesEmitidosDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current, Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0

                            Do While ((s1.Position <> s1.Length) _
                                        AndAlso (s1.ReadByte = s2.ReadByte))


                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If

                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close()
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close()
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class

    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(), _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")> _
    Partial Public Class ComprobantesListDataTable
        Inherits Global.System.Data.TypedTableBase(Of ComprobantesListRow)

        Private columnFechaComprobante As Global.System.Data.DataColumn

        Private columnHoraComprobante As Global.System.Data.DataColumn

        Private columnIdCFDSerie As Global.System.Data.DataColumn

        Private columnSerie As Global.System.Data.DataColumn

        Private columnFolio As Global.System.Data.DataColumn

        Private columnUUID As Global.System.Data.DataColumn

        Private columnIdCliente As Global.System.Data.DataColumn

        Private columnRFC As Global.System.Data.DataColumn

        Private columnRazonSocial As Global.System.Data.DataColumn

        Private columnSubTotal As Global.System.Data.DataColumn

        Private columnImpTrasladados As Global.System.Data.DataColumn

        Private columnTotal As Global.System.Data.DataColumn

        Private columnEstatus As Global.System.Data.DataColumn

        Private columnFechaCancelacion As Global.System.Data.DataColumn

        Private columnIdDocumento As Global.System.Data.DataColumn

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New()
            MyBase.New()
            Me.TableName = "ComprobantesList"
            Me.BeginInit()
            Me.InitClass()
            Me.EndInit()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New()
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property FechaComprobanteColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFechaComprobante
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property HoraComprobanteColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHoraComprobante
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property IdCFDSerieColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIdCFDSerie
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property SerieColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSerie
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property FolioColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFolio
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property UUIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUUID
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property IdClienteColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIdCliente
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property RFCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRFC
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property RazonSocialColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRazonSocial
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property SubTotalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSubTotal
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ImpTrasladadosColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnImpTrasladados
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property TotalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTotal
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property EstatusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEstatus
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property FechaCancelacionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFechaCancelacion
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property IdDocumentoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIdDocumento
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Browsable(False)> _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Default Public ReadOnly Property Item(ByVal index As Integer) As ComprobantesListRow
            Get
                Return CType(Me.Rows(index), ComprobantesListRow)
            End Get
        End Property

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event ComprobantesListRowChanging As ComprobantesListRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event ComprobantesListRowChanged As ComprobantesListRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event ComprobantesListRowDeleting As ComprobantesListRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event ComprobantesListRowDeleted As ComprobantesListRowChangeEventHandler

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Sub AddComprobantesListRow(ByVal row As ComprobantesListRow)
            Me.Rows.Add(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Function AddComprobantesListRow(ByVal FechaComprobante As Date, ByVal HoraComprobante As Date, ByVal IdCFDSerie As Integer, ByVal Serie As String, ByVal Folio As Integer, ByVal UUID As String, ByVal IdCliente As Integer, ByVal RFC As String, ByVal RazonSocial As String, ByVal SubTotal As Decimal, ByVal ImpTrasladados As Decimal, ByVal Total As Decimal, ByVal Estatus As String, ByVal FechaCancelacion As Date, ByVal IdDocumento As String) As ComprobantesListRow
            Dim rowComprobantesListRow As ComprobantesListRow = CType(Me.NewRow, ComprobantesListRow)
            Dim columnValuesArray() As Object = New Object() {FechaComprobante, HoraComprobante, IdCFDSerie, Serie, Folio, UUID, IdCliente, RFC, RazonSocial, SubTotal, ImpTrasladados, Total, Estatus, FechaCancelacion, IdDocumento}
            rowComprobantesListRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowComprobantesListRow)
            Return rowComprobantesListRow
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As ComprobantesListDataTable = CType(MyBase.Clone, ComprobantesListDataTable)
            cln.InitVars()
            Return cln
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New ComprobantesListDataTable()
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub InitVars()
            Me.columnFechaComprobante = MyBase.Columns("FechaComprobante")
            Me.columnHoraComprobante = MyBase.Columns("HoraComprobante")
            Me.columnIdCFDSerie = MyBase.Columns("IdCFDSerie")
            Me.columnSerie = MyBase.Columns("Serie")
            Me.columnFolio = MyBase.Columns("Folio")
            Me.columnUUID = MyBase.Columns("UUID")
            Me.columnIdCliente = MyBase.Columns("IdCliente")
            Me.columnRFC = MyBase.Columns("RFC")
            Me.columnRazonSocial = MyBase.Columns("RazonSocial")
            Me.columnSubTotal = MyBase.Columns("SubTotal")
            Me.columnImpTrasladados = MyBase.Columns("ImpTrasladados")
            Me.columnTotal = MyBase.Columns("Total")
            Me.columnEstatus = MyBase.Columns("Estatus")
            Me.columnFechaCancelacion = MyBase.Columns("FechaCancelacion")
            Me.columnIdDocumento = MyBase.Columns("IdDocumento")
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitClass()
            Me.columnFechaComprobante = New Global.System.Data.DataColumn("FechaComprobante", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFechaComprobante)
            Me.columnHoraComprobante = New Global.System.Data.DataColumn("HoraComprobante", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHoraComprobante)
            Me.columnIdCFDSerie = New Global.System.Data.DataColumn("IdCFDSerie", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIdCFDSerie)
            Me.columnSerie = New Global.System.Data.DataColumn("Serie", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSerie)
            Me.columnFolio = New Global.System.Data.DataColumn("Folio", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFolio)
            Me.columnUUID = New Global.System.Data.DataColumn("UUID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUUID)
            Me.columnIdCliente = New Global.System.Data.DataColumn("IdCliente", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIdCliente)
            Me.columnRFC = New Global.System.Data.DataColumn("RFC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRFC)
            Me.columnRazonSocial = New Global.System.Data.DataColumn("RazonSocial", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRazonSocial)
            Me.columnSubTotal = New Global.System.Data.DataColumn("SubTotal", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSubTotal)
            Me.columnImpTrasladados = New Global.System.Data.DataColumn("ImpTrasladados", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnImpTrasladados)
            Me.columnTotal = New Global.System.Data.DataColumn("Total", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTotal)
            Me.columnEstatus = New Global.System.Data.DataColumn("Estatus", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEstatus)
            Me.columnFechaCancelacion = New Global.System.Data.DataColumn("FechaCancelacion", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFechaCancelacion)
            Me.columnIdDocumento = New Global.System.Data.DataColumn("IdDocumento", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIdDocumento)
            Me.columnFechaComprobante.DateTimeMode = Global.System.Data.DataSetDateTime.Unspecified
            Me.columnHoraComprobante.DateTimeMode = Global.System.Data.DataSetDateTime.Unspecified
            Me.columnIdCFDSerie.DefaultValue = CType(0, Integer)
            Me.columnSerie.AllowDBNull = False
            Me.columnFolio.AllowDBNull = False
            Me.columnUUID.DefaultValue = CType("", String)
            Me.columnIdCliente.DefaultValue = CType(0, Integer)
            Me.columnFechaCancelacion.DateTimeMode = Global.System.Data.DataSetDateTime.Unspecified
            Me.columnIdDocumento.AllowDBNull = False
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function NewComprobantesListRow() As ComprobantesListRow
            Return CType(Me.NewRow, ComprobantesListRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New ComprobantesListRow(builder)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(ComprobantesListRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.ComprobantesListRowChangedEvent) Is Nothing) Then
                RaiseEvent ComprobantesListRowChanged(Me, New ComprobantesListRowChangeEvent(CType(e.Row, ComprobantesListRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.ComprobantesListRowChangingEvent) Is Nothing) Then
                RaiseEvent ComprobantesListRowChanging(Me, New ComprobantesListRowChangeEvent(CType(e.Row, ComprobantesListRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.ComprobantesListRowDeletedEvent) Is Nothing) Then
                RaiseEvent ComprobantesListRowDeleted(Me, New ComprobantesListRowChangeEvent(CType(e.Row, ComprobantesListRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.ComprobantesListRowDeletingEvent) Is Nothing) Then
                RaiseEvent ComprobantesListRowDeleting(Me, New ComprobantesListRowChangeEvent(CType(e.Row, ComprobantesListRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub RemoveComprobantesListRow(ByVal row As ComprobantesListRow)
            Me.Rows.Remove(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As InformesDS = New InformesDS()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "ComprobantesListDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current, Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0

                            Do While ((s1.Position <> s1.Length) _
                                        AndAlso (s1.ReadByte = s2.ReadByte))


                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If

                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close()
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close()
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class

    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(), _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")> _
    Partial Public Class ComprobantesFiscalesDataTable
        Inherits Global.System.Data.TypedTableBase(Of ComprobantesFiscalesRow)

        Private columnTipoComprobante As Global.System.Data.DataColumn

        Private columnSerie As Global.System.Data.DataColumn

        Private columnFolio As Global.System.Data.DataColumn

        Private columnUUID As Global.System.Data.DataColumn

        Private columnFechaComprobante As Global.System.Data.DataColumn

        Private columnFechaTimbrado As Global.System.Data.DataColumn

        Private columnFolioLetra As Global.System.Data.DataColumn

        Private columnSubTotal As Global.System.Data.DataColumn

        Private columnTotalDescuentos As Global.System.Data.DataColumn

        Private columnImpTrasladados As Global.System.Data.DataColumn

        Private columnImpRetenidos As Global.System.Data.DataColumn

        Private columnTotal As Global.System.Data.DataColumn

        Private columnTotalLetra As Global.System.Data.DataColumn

        Private columnIdDocumento As Global.System.Data.DataColumn

        Private columnDivisa As Global.System.Data.DataColumn

        Private columnAbrevDivisa As Global.System.Data.DataColumn

        Private columnTipoCambio As Global.System.Data.DataColumn

        Private columnActiva As Global.System.Data.DataColumn

        Private columnTipoPago As Global.System.Data.DataColumn

        Private columnDiasCredito As Global.System.Data.DataColumn

        Private columnReferencia As Global.System.Data.DataColumn

        Private columnRFC As Global.System.Data.DataColumn

        Private columnRazonSocial As Global.System.Data.DataColumn

        Private columnCalleFIS As Global.System.Data.DataColumn

        Private columnNumExtFIS As Global.System.Data.DataColumn

        Private columnNumIntFIS As Global.System.Data.DataColumn

        Private columnColoniaFIS As Global.System.Data.DataColumn

        Private columnCPReceptor As Global.System.Data.DataColumn

        Private columnPoblacionReceptor As Global.System.Data.DataColumn

        Private columnEstadoReceptor As Global.System.Data.DataColumn

        Private columnPaisReceptor As Global.System.Data.DataColumn

        Private columnCalleSucursal As Global.System.Data.DataColumn

        Private columnNumExtSucursal As Global.System.Data.DataColumn

        Private columnNumIntSucursal As Global.System.Data.DataColumn

        Private columnColoniaSucursal As Global.System.Data.DataColumn

        Private columnCPSucursal As Global.System.Data.DataColumn

        Private columnPoblacionSucursal As Global.System.Data.DataColumn

        Private columnEstadoSucursal As Global.System.Data.DataColumn

        Private columnPaisSucursal As Global.System.Data.DataColumn

        Private columnTelefonoSucursal As Global.System.Data.DataColumn

        Private columnEmailSucursal As Global.System.Data.DataColumn

        Private columnCodigoConcepto As Global.System.Data.DataColumn

        Private columnDescripcionConcepto As Global.System.Data.DataColumn

        Private columnFactorUnidad As Global.System.Data.DataColumn

        Private columnUnidadMedida As Global.System.Data.DataColumn

        Private columnCantidad As Global.System.Data.DataColumn

        Private columnPrecioUnitario As Global.System.Data.DataColumn

        Private columnPorcImpTras1 As Global.System.Data.DataColumn

        Private columnPorcImpTras2 As Global.System.Data.DataColumn

        Private columnPorcImpRet1 As Global.System.Data.DataColumn

        Private columnPorcImpRet2 As Global.System.Data.DataColumn

        Private columnCadenaOriginal As Global.System.Data.DataColumn

        Private columnSelloDigital As Global.System.Data.DataColumn

        Private columnNumCertificado As Global.System.Data.DataColumn

        Private columnNumAprobacion As Global.System.Data.DataColumn

        Private columnAnioAprobacion As Global.System.Data.DataColumn

        Private columnCadenaOriginalCert As Global.System.Data.DataColumn

        Private columnNumCertificadoSAT As Global.System.Data.DataColumn

        Private columnSelloSAT As Global.System.Data.DataColumn

        Private columnRFCEmisor As Global.System.Data.DataColumn

        Private columnRazonSocialEmisor As Global.System.Data.DataColumn

        Private columnCalleEmisor As Global.System.Data.DataColumn

        Private columnNumExtEmisor As Global.System.Data.DataColumn

        Private columnNumIntEmisor As Global.System.Data.DataColumn

        Private columnColoniaEmisor As Global.System.Data.DataColumn

        Private columnCPEmisor As Global.System.Data.DataColumn

        Private columnPoblacionEmisor As Global.System.Data.DataColumn

        Private columnEstadoEmisor As Global.System.Data.DataColumn

        Private columnMunicipioEmisor As Global.System.Data.DataColumn

        Private columnPaisEmisor As Global.System.Data.DataColumn

        Private columnMetodoPago As Global.System.Data.DataColumn

        Private columnCuentaPago As Global.System.Data.DataColumn

        Private columnFormaPago As Global.System.Data.DataColumn

        Private columnRegimenFiscal As Global.System.Data.DataColumn

        Private columnNumPedimento As Global.System.Data.DataColumn

        Private columnFechaPedimento As Global.System.Data.DataColumn

        Private columnAduana As Global.System.Data.DataColumn

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New()
            MyBase.New()
            Me.TableName = "ComprobantesFiscales"
            Me.BeginInit()
            Me.InitClass()
            Me.EndInit()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New()
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property TipoComprobanteColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTipoComprobante
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property SerieColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSerie
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property FolioColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFolio
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property UUIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUUID
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property FechaComprobanteColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFechaComprobante
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property FechaTimbradoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFechaTimbrado
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property FolioLetraColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFolioLetra
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property SubTotalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSubTotal
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property TotalDescuentosColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTotalDescuentos
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ImpTrasladadosColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnImpTrasladados
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ImpRetenidosColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnImpRetenidos
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property TotalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTotal
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property TotalLetraColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTotalLetra
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property IdDocumentoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIdDocumento
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property DivisaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDivisa
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property AbrevDivisaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAbrevDivisa
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property TipoCambioColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTipoCambio
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ActivaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnActiva
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property TipoPagoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTipoPago
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property DiasCreditoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDiasCredito
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ReferenciaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnReferencia
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property RFCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRFC
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property RazonSocialColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRazonSocial
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CalleFISColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCalleFIS
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property NumExtFISColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNumExtFIS
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property NumIntFISColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNumIntFIS
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ColoniaFISColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnColoniaFIS
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CPReceptorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCPReceptor
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PoblacionReceptorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPoblacionReceptor
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property EstadoReceptorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEstadoReceptor
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PaisReceptorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPaisReceptor
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CalleSucursalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCalleSucursal
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property NumExtSucursalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNumExtSucursal
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property NumIntSucursalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNumIntSucursal
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ColoniaSucursalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnColoniaSucursal
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CPSucursalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCPSucursal
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PoblacionSucursalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPoblacionSucursal
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property EstadoSucursalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEstadoSucursal
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PaisSucursalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPaisSucursal
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property TelefonoSucursalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTelefonoSucursal
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property EmailSucursalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEmailSucursal
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CodigoConceptoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCodigoConcepto
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property DescripcionConceptoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDescripcionConcepto
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property FactorUnidadColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFactorUnidad
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property UnidadMedidaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUnidadMedida
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CantidadColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCantidad
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PrecioUnitarioColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPrecioUnitario
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PorcImpTras1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnPorcImpTras1
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PorcImpTras2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnPorcImpTras2
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PorcImpRet1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnPorcImpRet1
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PorcImpRet2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnPorcImpRet2
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CadenaOriginalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCadenaOriginal
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property SelloDigitalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSelloDigital
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property NumCertificadoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNumCertificado
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property NumAprobacionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNumAprobacion
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property AnioAprobacionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAnioAprobacion
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CadenaOriginalCertColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCadenaOriginalCert
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property NumCertificadoSATColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNumCertificadoSAT
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property SelloSATColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSelloSAT
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property RFCEmisorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRFCEmisor
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property RazonSocialEmisorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRazonSocialEmisor
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CalleEmisorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCalleEmisor
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property NumExtEmisorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNumExtEmisor
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property NumIntEmisorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNumIntEmisor
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ColoniaEmisorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnColoniaEmisor
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CPEmisorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCPEmisor
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PoblacionEmisorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPoblacionEmisor
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property EstadoEmisorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEstadoEmisor
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property MunicipioEmisorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMunicipioEmisor
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PaisEmisorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPaisEmisor
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property MetodoPagoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMetodoPago
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CuentaPagoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCuentaPago
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property FormaPagoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFormaPago
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property RegimenFiscalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRegimenFiscal
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property NumPedimentoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNumPedimento
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property FechaPedimentoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFechaPedimento
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property AduanaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAduana
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Browsable(False)> _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Default Public ReadOnly Property Item(ByVal index As Integer) As ComprobantesFiscalesRow
            Get
                Return CType(Me.Rows(index), ComprobantesFiscalesRow)
            End Get
        End Property

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event ComprobantesFiscalesRowChanging As ComprobantesFiscalesRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event ComprobantesFiscalesRowChanged As ComprobantesFiscalesRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event ComprobantesFiscalesRowDeleting As ComprobantesFiscalesRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event ComprobantesFiscalesRowDeleted As ComprobantesFiscalesRowChangeEventHandler

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Sub AddComprobantesFiscalesRow(ByVal row As ComprobantesFiscalesRow)
            Me.Rows.Add(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Function AddComprobantesFiscalesRow( _
                    ByVal TipoComprobante As String, _
                    ByVal Serie As String, _
                    ByVal Folio As Integer, _
                    ByVal UUID As String, _
                    ByVal FechaComprobante As Date, _
                    ByVal FechaTimbrado As Date, _
                    ByVal FolioLetra As String, _
                    ByVal SubTotal As Decimal, _
                    ByVal TotalDescuentos As Decimal, _
                    ByVal ImpTrasladados As Decimal, _
                    ByVal ImpRetenidos As Decimal, _
                    ByVal Total As Decimal, _
                    ByVal TotalLetra As String, _
                    ByVal IdDocumento As String, _
                    ByVal Divisa As String, _
                    ByVal AbrevDivisa As String, _
                    ByVal TipoCambio As Decimal, _
                    ByVal Activa As Boolean, _
                    ByVal TipoPago As String, _
                    ByVal DiasCredito As Integer, _
                    ByVal Referencia As String, _
                    ByVal RFC As String, _
                    ByVal RazonSocial As String, _
                    ByVal CalleFIS As String, _
                    ByVal NumExtFIS As String, _
                    ByVal NumIntFIS As String, _
                    ByVal ColoniaFIS As String, _
                    ByVal CPReceptor As String, _
                    ByVal PoblacionReceptor As String, _
                    ByVal EstadoReceptor As String, _
                    ByVal PaisReceptor As String, _
                    ByVal CalleSucursal As String, _
                    ByVal NumExtSucursal As String, _
                    ByVal NumIntSucursal As String, _
                    ByVal ColoniaSucursal As String, _
                    ByVal CPSucursal As String, _
                    ByVal PoblacionSucursal As String, _
                    ByVal EstadoSucursal As String, _
                    ByVal PaisSucursal As String, _
                    ByVal TelefonoSucursal As String, _
                    ByVal EmailSucursal As String, _
                    ByVal CodigoConcepto As String, _
                    ByVal DescripcionConcepto As String, _
                    ByVal FactorUnidad As Integer, _
                    ByVal UnidadMedida As String, _
                    ByVal Cantidad As Decimal, _
                    ByVal PrecioUnitario As Decimal, _
                    ByVal PorcImpTras1 As Decimal, _
                    ByVal PorcImpTras2 As Decimal, _
                    ByVal PorcImpRet1 As Decimal, _
                    ByVal PorcImpRet2 As Decimal, _
                    ByVal CadenaOriginal As String, _
                    ByVal SelloDigital As String, _
                    ByVal NumCertificado As String, _
                    ByVal NumAprobacion As Integer, _
                    ByVal AnioAprobacion As Integer, _
                    ByVal CadenaOriginalCert As String, _
                    ByVal NumCertificadoSAT As String, _
                    ByVal SelloSAT As String, _
                    ByVal RFCEmisor As String, _
                    ByVal RazonSocialEmisor As String, _
                    ByVal CalleEmisor As String, _
                    ByVal NumExtEmisor As String, _
                    ByVal NumIntEmisor As String, _
                    ByVal ColoniaEmisor As String, _
                    ByVal CPEmisor As String, _
                    ByVal PoblacionEmisor As String, _
                    ByVal EstadoEmisor As String, _
                    ByVal MunicipioEmisor As String, _
                    ByVal PaisEmisor As String, _
                    ByVal MetodoPago As String, _
                    ByVal CuentaPago As String, _
                    ByVal FormaPago As String, _
                    ByVal RegimenFiscal As String, _
                    ByVal NumPedimento As String, _
                    ByVal FechaPedimento As Date, _
                    ByVal Aduana As String) As ComprobantesFiscalesRow
            Dim rowComprobantesFiscalesRow As ComprobantesFiscalesRow = CType(Me.NewRow, ComprobantesFiscalesRow)
            Dim columnValuesArray() As Object = New Object() {TipoComprobante, Serie, Folio, UUID, FechaComprobante, FechaTimbrado, FolioLetra, SubTotal, TotalDescuentos, ImpTrasladados, ImpRetenidos, Total, TotalLetra, IdDocumento, Divisa, AbrevDivisa, TipoCambio, Activa, TipoPago, DiasCredito, Referencia, RFC, RazonSocial, CalleFIS, NumExtFIS, NumIntFIS, ColoniaFIS, CPReceptor, PoblacionReceptor, EstadoReceptor, PaisReceptor, CalleSucursal, NumExtSucursal, NumIntSucursal, ColoniaSucursal, CPSucursal, PoblacionSucursal, EstadoSucursal, PaisSucursal, TelefonoSucursal, EmailSucursal, CodigoConcepto, DescripcionConcepto, FactorUnidad, UnidadMedida, Cantidad, PrecioUnitario, PorcImpTras1, PorcImpTras2, PorcImpRet1, PorcImpRet2, CadenaOriginal, SelloDigital, NumCertificado, NumAprobacion, AnioAprobacion, CadenaOriginalCert, NumCertificadoSAT, SelloSAT, RFCEmisor, RazonSocialEmisor, CalleEmisor, NumExtEmisor, NumIntEmisor, ColoniaEmisor, CPEmisor, PoblacionEmisor, EstadoEmisor, MunicipioEmisor, PaisEmisor, MetodoPago, CuentaPago, FormaPago, RegimenFiscal, NumPedimento, FechaPedimento, Aduana}
            rowComprobantesFiscalesRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowComprobantesFiscalesRow)
            Return rowComprobantesFiscalesRow
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As ComprobantesFiscalesDataTable = CType(MyBase.Clone, ComprobantesFiscalesDataTable)
            cln.InitVars()
            Return cln
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New ComprobantesFiscalesDataTable()
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub InitVars()
            Me.columnTipoComprobante = MyBase.Columns("TipoComprobante")
            Me.columnSerie = MyBase.Columns("Serie")
            Me.columnFolio = MyBase.Columns("Folio")
            Me.columnUUID = MyBase.Columns("UUID")
            Me.columnFechaComprobante = MyBase.Columns("FechaComprobante")
            Me.columnFechaTimbrado = MyBase.Columns("FechaTimbrado")
            Me.columnFolioLetra = MyBase.Columns("FolioLetra")
            Me.columnSubTotal = MyBase.Columns("SubTotal")
            Me.columnTotalDescuentos = MyBase.Columns("TotalDescuentos")
            Me.columnImpTrasladados = MyBase.Columns("ImpTrasladados")
            Me.columnImpRetenidos = MyBase.Columns("ImpRetenidos")
            Me.columnTotal = MyBase.Columns("Total")
            Me.columnTotalLetra = MyBase.Columns("TotalLetra")
            Me.columnIdDocumento = MyBase.Columns("IdDocumento")
            Me.columnDivisa = MyBase.Columns("Divisa")
            Me.columnAbrevDivisa = MyBase.Columns("AbrevDivisa")
            Me.columnTipoCambio = MyBase.Columns("TipoCambio")
            Me.columnActiva = MyBase.Columns("Activa")
            Me.columnTipoPago = MyBase.Columns("TipoPago")
            Me.columnDiasCredito = MyBase.Columns("DiasCredito")
            Me.columnReferencia = MyBase.Columns("Referencia")
            Me.columnRFC = MyBase.Columns("RFC")
            Me.columnRazonSocial = MyBase.Columns("RazonSocial")
            Me.columnCalleFIS = MyBase.Columns("CalleFIS")
            Me.columnNumExtFIS = MyBase.Columns("NumExtFIS")
            Me.columnNumIntFIS = MyBase.Columns("NumIntFIS")
            Me.columnColoniaFIS = MyBase.Columns("ColoniaFIS")
            Me.columnCPReceptor = MyBase.Columns("CPReceptor")
            Me.columnPoblacionReceptor = MyBase.Columns("PoblacionReceptor")
            Me.columnEstadoReceptor = MyBase.Columns("EstadoReceptor")
            Me.columnPaisReceptor = MyBase.Columns("PaisReceptor")
            Me.columnCalleSucursal = MyBase.Columns("CalleSucursal")
            Me.columnNumExtSucursal = MyBase.Columns("NumExtSucursal")
            Me.columnNumIntSucursal = MyBase.Columns("NumIntSucursal")
            Me.columnColoniaSucursal = MyBase.Columns("ColoniaSucursal")
            Me.columnCPSucursal = MyBase.Columns("CPSucursal")
            Me.columnPoblacionSucursal = MyBase.Columns("PoblacionSucursal")
            Me.columnEstadoSucursal = MyBase.Columns("EstadoSucursal")
            Me.columnPaisSucursal = MyBase.Columns("PaisSucursal")
            Me.columnTelefonoSucursal = MyBase.Columns("TelefonoSucursal")
            Me.columnEmailSucursal = MyBase.Columns("EmailSucursal")
            Me.columnCodigoConcepto = MyBase.Columns("CodigoConcepto")
            Me.columnDescripcionConcepto = MyBase.Columns("DescripcionConcepto")
            Me.columnFactorUnidad = MyBase.Columns("FactorUnidad")
            Me.columnUnidadMedida = MyBase.Columns("UnidadMedida")
            Me.columnCantidad = MyBase.Columns("Cantidad")
            Me.columnPrecioUnitario = MyBase.Columns("PrecioUnitario")
            Me.columnPorcImpTras1 = MyBase.Columns("PorcImpTras1")
            Me.columnPorcImpTras2 = MyBase.Columns("PorcImpTras2")
            Me.columnPorcImpRet1 = MyBase.Columns("PorcImpRet1")
            Me.columnPorcImpRet2 = MyBase.Columns("PorcImpRet2")
            Me.columnCadenaOriginal = MyBase.Columns("CadenaOriginal")
            Me.columnSelloDigital = MyBase.Columns("SelloDigital")
            Me.columnNumCertificado = MyBase.Columns("NumCertificado")
            Me.columnNumAprobacion = MyBase.Columns("NumAprobacion")
            Me.columnAnioAprobacion = MyBase.Columns("AnioAprobacion")
            Me.columnCadenaOriginalCert = MyBase.Columns("CadenaOriginalCert")
            Me.columnNumCertificadoSAT = MyBase.Columns("NumCertificadoSAT")
            Me.columnSelloSAT = MyBase.Columns("SelloSAT")
            Me.columnRFCEmisor = MyBase.Columns("RFCEmisor")
            Me.columnRazonSocialEmisor = MyBase.Columns("RazonSocialEmisor")
            Me.columnCalleEmisor = MyBase.Columns("CalleEmisor")
            Me.columnNumExtEmisor = MyBase.Columns("NumExtEmisor")
            Me.columnNumIntEmisor = MyBase.Columns("NumIntEmisor")
            Me.columnColoniaEmisor = MyBase.Columns("ColoniaEmisor")
            Me.columnCPEmisor = MyBase.Columns("CPEmisor")
            Me.columnPoblacionEmisor = MyBase.Columns("PoblacionEmisor")
            Me.columnEstadoEmisor = MyBase.Columns("EstadoEmisor")
            Me.columnMunicipioEmisor = MyBase.Columns("MunicipioEmisor")
            Me.columnPaisEmisor = MyBase.Columns("PaisEmisor")
            Me.columnMetodoPago = MyBase.Columns("MetodoPago")
            Me.columnCuentaPago = MyBase.Columns("CuentaPago")
            Me.columnFormaPago = MyBase.Columns("FormaPago")
            Me.columnRegimenFiscal = MyBase.Columns("RegimenFiscal")
            Me.columnNumPedimento = MyBase.Columns("NumPedimento")
            Me.columnFechaPedimento = MyBase.Columns("FechaPedimento")
            Me.columnAduana = MyBase.Columns("Aduana")
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitClass()
            Me.columnTipoComprobante = New Global.System.Data.DataColumn("TipoComprobante", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTipoComprobante)
            Me.columnSerie = New Global.System.Data.DataColumn("Serie", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSerie)
            Me.columnFolio = New Global.System.Data.DataColumn("Folio", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFolio)
            Me.columnUUID = New Global.System.Data.DataColumn("UUID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUUID)
            Me.columnFechaComprobante = New Global.System.Data.DataColumn("FechaComprobante", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFechaComprobante)
            Me.columnFechaTimbrado = New Global.System.Data.DataColumn("FechaTimbrado", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFechaTimbrado)
            Me.columnFolioLetra = New Global.System.Data.DataColumn("FolioLetra", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFolioLetra)
            Me.columnSubTotal = New Global.System.Data.DataColumn("SubTotal", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSubTotal)
            Me.columnTotalDescuentos = New Global.System.Data.DataColumn("TotalDescuentos", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTotalDescuentos)
            Me.columnImpTrasladados = New Global.System.Data.DataColumn("ImpTrasladados", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnImpTrasladados)
            Me.columnImpRetenidos = New Global.System.Data.DataColumn("ImpRetenidos", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnImpRetenidos)
            Me.columnTotal = New Global.System.Data.DataColumn("Total", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTotal)
            Me.columnTotalLetra = New Global.System.Data.DataColumn("TotalLetra", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTotalLetra)
            Me.columnIdDocumento = New Global.System.Data.DataColumn("IdDocumento", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIdDocumento)
            Me.columnDivisa = New Global.System.Data.DataColumn("Divisa", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDivisa)
            Me.columnAbrevDivisa = New Global.System.Data.DataColumn("AbrevDivisa", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAbrevDivisa)
            Me.columnTipoCambio = New Global.System.Data.DataColumn("TipoCambio", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTipoCambio)
            Me.columnActiva = New Global.System.Data.DataColumn("Activa", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnActiva)
            Me.columnTipoPago = New Global.System.Data.DataColumn("TipoPago", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTipoPago)
            Me.columnDiasCredito = New Global.System.Data.DataColumn("DiasCredito", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDiasCredito)
            Me.columnReferencia = New Global.System.Data.DataColumn("Referencia", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnReferencia)
            Me.columnRFC = New Global.System.Data.DataColumn("RFC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRFC)
            Me.columnRazonSocial = New Global.System.Data.DataColumn("RazonSocial", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRazonSocial)
            Me.columnCalleFIS = New Global.System.Data.DataColumn("CalleFIS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCalleFIS)
            Me.columnNumExtFIS = New Global.System.Data.DataColumn("NumExtFIS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNumExtFIS)
            Me.columnNumIntFIS = New Global.System.Data.DataColumn("NumIntFIS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNumIntFIS)
            Me.columnColoniaFIS = New Global.System.Data.DataColumn("ColoniaFIS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColoniaFIS)
            Me.columnCPReceptor = New Global.System.Data.DataColumn("CPReceptor", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCPReceptor)
            Me.columnPoblacionReceptor = New Global.System.Data.DataColumn("PoblacionReceptor", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPoblacionReceptor)
            Me.columnEstadoReceptor = New Global.System.Data.DataColumn("EstadoReceptor", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEstadoReceptor)
            Me.columnPaisReceptor = New Global.System.Data.DataColumn("PaisReceptor", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPaisReceptor)
            Me.columnCalleSucursal = New Global.System.Data.DataColumn("CalleSucursal", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCalleSucursal)
            Me.columnNumExtSucursal = New Global.System.Data.DataColumn("NumExtSucursal", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNumExtSucursal)
            Me.columnNumIntSucursal = New Global.System.Data.DataColumn("NumIntSucursal", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNumIntSucursal)
            Me.columnColoniaSucursal = New Global.System.Data.DataColumn("ColoniaSucursal", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColoniaSucursal)
            Me.columnCPSucursal = New Global.System.Data.DataColumn("CPSucursal", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCPSucursal)
            Me.columnPoblacionSucursal = New Global.System.Data.DataColumn("PoblacionSucursal", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPoblacionSucursal)
            Me.columnEstadoSucursal = New Global.System.Data.DataColumn("EstadoSucursal", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEstadoSucursal)
            Me.columnPaisSucursal = New Global.System.Data.DataColumn("PaisSucursal", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPaisSucursal)
            Me.columnTelefonoSucursal = New Global.System.Data.DataColumn("TelefonoSucursal", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTelefonoSucursal)
            Me.columnEmailSucursal = New Global.System.Data.DataColumn("EmailSucursal", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEmailSucursal)
            Me.columnCodigoConcepto = New Global.System.Data.DataColumn("CodigoConcepto", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCodigoConcepto)
            Me.columnDescripcionConcepto = New Global.System.Data.DataColumn("DescripcionConcepto", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDescripcionConcepto)
            Me.columnFactorUnidad = New Global.System.Data.DataColumn("FactorUnidad", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFactorUnidad)
            Me.columnUnidadMedida = New Global.System.Data.DataColumn("UnidadMedida", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUnidadMedida)
            Me.columnCantidad = New Global.System.Data.DataColumn("Cantidad", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCantidad)
            Me.columnPrecioUnitario = New Global.System.Data.DataColumn("PrecioUnitario", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPrecioUnitario)
            Me.columnPorcImpTras1 = New Global.System.Data.DataColumn("PorcImpTras1", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPorcImpTras1)
            Me.columnPorcImpTras2 = New Global.System.Data.DataColumn("PorcImpTras2", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPorcImpTras2)
            Me.columnPorcImpRet1 = New Global.System.Data.DataColumn("PorcImpRet1", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPorcImpRet1)
            Me.columnPorcImpRet2 = New Global.System.Data.DataColumn("PorcImpRet2", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPorcImpRet2)
            Me.columnCadenaOriginal = New Global.System.Data.DataColumn("CadenaOriginal", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCadenaOriginal)
            Me.columnSelloDigital = New Global.System.Data.DataColumn("SelloDigital", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSelloDigital)
            Me.columnNumCertificado = New Global.System.Data.DataColumn("NumCertificado", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNumCertificado)
            Me.columnNumAprobacion = New Global.System.Data.DataColumn("NumAprobacion", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNumAprobacion)
            Me.columnAnioAprobacion = New Global.System.Data.DataColumn("AnioAprobacion", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAnioAprobacion)
            Me.columnCadenaOriginalCert = New Global.System.Data.DataColumn("CadenaOriginalCert", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCadenaOriginalCert)
            Me.columnNumCertificadoSAT = New Global.System.Data.DataColumn("NumCertificadoSAT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNumCertificadoSAT)
            Me.columnSelloSAT = New Global.System.Data.DataColumn("SelloSAT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSelloSAT)
            Me.columnRFCEmisor = New Global.System.Data.DataColumn("RFCEmisor", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRFCEmisor)
            Me.columnRazonSocialEmisor = New Global.System.Data.DataColumn("RazonSocialEmisor", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRazonSocialEmisor)
            Me.columnCalleEmisor = New Global.System.Data.DataColumn("CalleEmisor", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCalleEmisor)
            Me.columnNumExtEmisor = New Global.System.Data.DataColumn("NumExtEmisor", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNumExtEmisor)
            Me.columnNumIntEmisor = New Global.System.Data.DataColumn("NumIntEmisor", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNumIntEmisor)
            Me.columnColoniaEmisor = New Global.System.Data.DataColumn("ColoniaEmisor", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColoniaEmisor)
            Me.columnCPEmisor = New Global.System.Data.DataColumn("CPEmisor", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCPEmisor)
            Me.columnPoblacionEmisor = New Global.System.Data.DataColumn("PoblacionEmisor", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPoblacionEmisor)
            Me.columnEstadoEmisor = New Global.System.Data.DataColumn("EstadoEmisor", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEstadoEmisor)
            Me.columnMunicipioEmisor = New Global.System.Data.DataColumn("MunicipioEmisor", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMunicipioEmisor)
            Me.columnPaisEmisor = New Global.System.Data.DataColumn("PaisEmisor", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPaisEmisor)
            Me.columnMetodoPago = New Global.System.Data.DataColumn("MetodoPago", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMetodoPago)
            Me.columnCuentaPago = New Global.System.Data.DataColumn("CuentaPago", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCuentaPago)
            Me.columnFormaPago = New Global.System.Data.DataColumn("FormaPago", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFormaPago)
            Me.columnRegimenFiscal = New Global.System.Data.DataColumn("RegimenFiscal", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRegimenFiscal)
            Me.columnNumPedimento = New Global.System.Data.DataColumn("NumPedimento", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNumPedimento)
            Me.columnFechaPedimento = New Global.System.Data.DataColumn("FechaPedimento", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFechaPedimento)
            Me.columnAduana = New Global.System.Data.DataColumn("Aduana", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAduana)
            Me.columnSerie.AllowDBNull = False
            Me.columnSerie.DefaultValue = CType("", String)
            Me.columnFolio.AllowDBNull = False
            Me.columnUUID.DefaultValue = CType("", String)
            Me.columnFechaComprobante.AllowDBNull = False
            Me.columnFechaComprobante.Caption = "FechaFactura"
            Me.columnFolioLetra.ReadOnly = True
            Me.columnFolioLetra.Caption = "FacturaLetra"
            Me.columnFolioLetra.MaxLength = 1035
            Me.columnSubTotal.AllowDBNull = False
            Me.columnTotalDescuentos.AllowDBNull = False
            Me.columnImpTrasladados.AllowDBNull = False
            Me.columnImpRetenidos.AllowDBNull = False
            Me.columnTotal.AllowDBNull = False
            Me.columnTotalLetra.ReadOnly = True
            Me.columnTotalLetra.MaxLength = 1024
            Me.columnDivisa.DefaultValue = CType("", String)
            Me.columnAbrevDivisa.DefaultValue = CType("", String)
            Me.columnTipoCambio.DefaultValue = CType(1D, Decimal)
            Me.columnActiva.AllowDBNull = False
            Me.columnTipoPago.ReadOnly = True
            Me.columnTipoPago.MaxLength = 15
            Me.columnDiasCredito.AllowDBNull = False
            Me.columnReferencia.DefaultValue = CType("", String)
            Me.columnRFC.ReadOnly = True
            Me.columnRFC.MaxLength = 2147483647
            Me.columnRazonSocial.ReadOnly = True
            Me.columnRazonSocial.MaxLength = 2147483647
            Me.columnCalleFIS.ReadOnly = True
            Me.columnCalleFIS.MaxLength = 2147483647
            Me.columnNumExtFIS.ReadOnly = True
            Me.columnNumExtFIS.MaxLength = 2147483647
            Me.columnNumIntFIS.ReadOnly = True
            Me.columnNumIntFIS.MaxLength = 2147483647
            Me.columnColoniaFIS.ReadOnly = True
            Me.columnColoniaFIS.MaxLength = 2147483647
            Me.columnCPReceptor.ReadOnly = True
            Me.columnCPReceptor.Caption = "CPCliente"
            Me.columnCPReceptor.MaxLength = 2147483647
            Me.columnPoblacionReceptor.ReadOnly = True
            Me.columnPoblacionReceptor.Caption = "PoblacionCliente"
            Me.columnPoblacionReceptor.MaxLength = 2147483647
            Me.columnEstadoReceptor.ReadOnly = True
            Me.columnEstadoReceptor.Caption = "EstadoCliente"
            Me.columnEstadoReceptor.MaxLength = 2147483647
            Me.columnPaisReceptor.Caption = "PaisCliente"
            Me.columnPaisReceptor.DefaultValue = CType("", String)
            Me.columnCalleSucursal.ReadOnly = True
            Me.columnCalleSucursal.MaxLength = 2147483647
            Me.columnNumExtSucursal.ReadOnly = True
            Me.columnNumExtSucursal.MaxLength = 2147483647
            Me.columnNumIntSucursal.ReadOnly = True
            Me.columnNumIntSucursal.MaxLength = 2147483647
            Me.columnColoniaSucursal.ReadOnly = True
            Me.columnColoniaSucursal.MaxLength = 2147483647
            Me.columnCPSucursal.ReadOnly = True
            Me.columnCPSucursal.MaxLength = 2147483647
            Me.columnPoblacionSucursal.ReadOnly = True
            Me.columnPoblacionSucursal.MaxLength = 2147483647
            Me.columnEstadoSucursal.ReadOnly = True
            Me.columnEstadoSucursal.MaxLength = 2147483647
            Me.columnPaisSucursal.DefaultValue = CType("", String)
            Me.columnTelefonoSucursal.AllowDBNull = False
            Me.columnTelefonoSucursal.MaxLength = 32
            Me.columnEmailSucursal.AllowDBNull = False
            Me.columnEmailSucursal.MaxLength = 128
            Me.columnCodigoConcepto.AllowDBNull = False
            Me.columnCodigoConcepto.MaxLength = 32
            Me.columnDescripcionConcepto.AllowDBNull = False
            Me.columnDescripcionConcepto.MaxLength = 512
            Me.columnFactorUnidad.AllowDBNull = False
            Me.columnUnidadMedida.AllowDBNull = False
            Me.columnUnidadMedida.MaxLength = 64
            Me.columnCantidad.AllowDBNull = False
            Me.columnPrecioUnitario.AllowDBNull = False
            Me.columnPorcImpTras1.AllowDBNull = False
            Me.columnPorcImpTras2.AllowDBNull = False
            Me.columnPorcImpRet1.AllowDBNull = False
            Me.columnPorcImpRet2.AllowDBNull = False
            Me.columnCadenaOriginal.DefaultValue = CType("", String)
            Me.columnSelloDigital.AllowDBNull = False
            Me.columnSelloDigital.MaxLength = 2048
            Me.columnNumCertificado.AllowDBNull = False
            Me.columnNumCertificado.MaxLength = 20
            Me.columnNumAprobacion.AllowDBNull = False
            Me.columnAnioAprobacion.AllowDBNull = False
            Me.columnCadenaOriginalCert.DefaultValue = CType("", String)
            Me.columnNumCertificadoSAT.DefaultValue = CType("", String)
            Me.columnSelloSAT.DefaultValue = CType("", String)
            Me.columnRFCEmisor.ReadOnly = True
            Me.columnRFCEmisor.MaxLength = 2147483647
            Me.columnRazonSocialEmisor.ReadOnly = True
            Me.columnRazonSocialEmisor.MaxLength = 2147483647
            Me.columnCalleEmisor.ReadOnly = True
            Me.columnCalleEmisor.MaxLength = 2147483647
            Me.columnNumExtEmisor.ReadOnly = True
            Me.columnNumExtEmisor.MaxLength = 2147483647
            Me.columnNumIntEmisor.ReadOnly = True
            Me.columnNumIntEmisor.MaxLength = 2147483647
            Me.columnColoniaEmisor.ReadOnly = True
            Me.columnColoniaEmisor.MaxLength = 2147483647
            Me.columnCPEmisor.ReadOnly = True
            Me.columnCPEmisor.MaxLength = 2147483647
            Me.columnPoblacionEmisor.ReadOnly = True
            Me.columnPoblacionEmisor.MaxLength = 2147483647
            Me.columnEstadoEmisor.ReadOnly = True
            Me.columnEstadoEmisor.MaxLength = 2147483647
            Me.columnMunicipioEmisor.ReadOnly = True
            Me.columnMunicipioEmisor.MaxLength = 2147483647
            Me.columnPaisEmisor.DefaultValue = CType("", String)
            Me.columnMetodoPago.DefaultValue = CType("", String)
            Me.columnCuentaPago.DefaultValue = CType("", String)
            Me.columnFormaPago.DefaultValue = CType("", String)
            Me.columnRegimenFiscal.DefaultValue = CType("", String)
            Me.columnNumPedimento.DefaultValue = CType("", String)
            Me.columnAduana.DefaultValue = CType("", String)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function NewComprobantesFiscalesRow() As ComprobantesFiscalesRow
            Return CType(Me.NewRow, ComprobantesFiscalesRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New ComprobantesFiscalesRow(builder)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(ComprobantesFiscalesRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.ComprobantesFiscalesRowChangedEvent) Is Nothing) Then
                RaiseEvent ComprobantesFiscalesRowChanged(Me, New ComprobantesFiscalesRowChangeEvent(CType(e.Row, ComprobantesFiscalesRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.ComprobantesFiscalesRowChangingEvent) Is Nothing) Then
                RaiseEvent ComprobantesFiscalesRowChanging(Me, New ComprobantesFiscalesRowChangeEvent(CType(e.Row, ComprobantesFiscalesRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.ComprobantesFiscalesRowDeletedEvent) Is Nothing) Then
                RaiseEvent ComprobantesFiscalesRowDeleted(Me, New ComprobantesFiscalesRowChangeEvent(CType(e.Row, ComprobantesFiscalesRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.ComprobantesFiscalesRowDeletingEvent) Is Nothing) Then
                RaiseEvent ComprobantesFiscalesRowDeleting(Me, New ComprobantesFiscalesRowChangeEvent(CType(e.Row, ComprobantesFiscalesRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub RemoveComprobantesFiscalesRow(ByVal row As ComprobantesFiscalesRow)
            Me.Rows.Remove(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As InformesDS = New InformesDS()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "ComprobantesFiscalesDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current, Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0

                            Do While ((s1.Position <> s1.Length) _
                                        AndAlso (s1.ReadByte = s2.ReadByte))


                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If

                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close()
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close()
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class

    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(), _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")> _
    Partial Public Class BalanceGralDataTable
        Inherits Global.System.Data.TypedTableBase(Of BalanceGralRow)

        Private columnIdAgrupacion As Global.System.Data.DataColumn

        Private columnAgrupacion As Global.System.Data.DataColumn

        Private columnDefinicion As Global.System.Data.DataColumn

        Private columnCuenta As Global.System.Data.DataColumn

        Private columnMonto As Global.System.Data.DataColumn

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New()
            MyBase.New()
            Me.TableName = "BalanceGral"
            Me.BeginInit()
            Me.InitClass()
            Me.EndInit()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New()
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property IdAgrupacionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIdAgrupacion
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property AgrupacionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAgrupacion
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property DefinicionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDefinicion
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CuentaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCuenta
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property MontoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMonto
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Browsable(False)> _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Default Public ReadOnly Property Item(ByVal index As Integer) As BalanceGralRow
            Get
                Return CType(Me.Rows(index), BalanceGralRow)
            End Get
        End Property

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event BalanceGralRowChanging As BalanceGralRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event BalanceGralRowChanged As BalanceGralRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event BalanceGralRowDeleting As BalanceGralRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event BalanceGralRowDeleted As BalanceGralRowChangeEventHandler

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Sub AddBalanceGralRow(ByVal row As BalanceGralRow)
            Me.Rows.Add(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Function AddBalanceGralRow(ByVal IdAgrupacion As Integer, ByVal Agrupacion As String, ByVal Definicion As String, ByVal Cuenta As String, ByVal Monto As Decimal) As BalanceGralRow
            Dim rowBalanceGralRow As BalanceGralRow = CType(Me.NewRow, BalanceGralRow)
            Dim columnValuesArray() As Object = New Object() {IdAgrupacion, Agrupacion, Definicion, Cuenta, Monto}
            rowBalanceGralRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowBalanceGralRow)
            Return rowBalanceGralRow
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As BalanceGralDataTable = CType(MyBase.Clone, BalanceGralDataTable)
            cln.InitVars()
            Return cln
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New BalanceGralDataTable()
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub InitVars()
            Me.columnIdAgrupacion = MyBase.Columns("IdAgrupacion")
            Me.columnAgrupacion = MyBase.Columns("Agrupacion")
            Me.columnDefinicion = MyBase.Columns("Definicion")
            Me.columnCuenta = MyBase.Columns("Cuenta")
            Me.columnMonto = MyBase.Columns("Monto")
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitClass()
            Me.columnIdAgrupacion = New Global.System.Data.DataColumn("IdAgrupacion", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIdAgrupacion)
            Me.columnAgrupacion = New Global.System.Data.DataColumn("Agrupacion", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAgrupacion)
            Me.columnDefinicion = New Global.System.Data.DataColumn("Definicion", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDefinicion)
            Me.columnCuenta = New Global.System.Data.DataColumn("Cuenta", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCuenta)
            Me.columnMonto = New Global.System.Data.DataColumn("Monto", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMonto)
            Me.columnAgrupacion.MaxLength = 64
            Me.columnDefinicion.MaxLength = 1
            Me.columnCuenta.MaxLength = 128
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function NewBalanceGralRow() As BalanceGralRow
            Return CType(Me.NewRow, BalanceGralRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New BalanceGralRow(builder)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(BalanceGralRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.BalanceGralRowChangedEvent) Is Nothing) Then
                RaiseEvent BalanceGralRowChanged(Me, New BalanceGralRowChangeEvent(CType(e.Row, BalanceGralRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.BalanceGralRowChangingEvent) Is Nothing) Then
                RaiseEvent BalanceGralRowChanging(Me, New BalanceGralRowChangeEvent(CType(e.Row, BalanceGralRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.BalanceGralRowDeletedEvent) Is Nothing) Then
                RaiseEvent BalanceGralRowDeleted(Me, New BalanceGralRowChangeEvent(CType(e.Row, BalanceGralRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.BalanceGralRowDeletingEvent) Is Nothing) Then
                RaiseEvent BalanceGralRowDeleting(Me, New BalanceGralRowChangeEvent(CType(e.Row, BalanceGralRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub RemoveBalanceGralRow(ByVal row As BalanceGralRow)
            Me.Rows.Remove(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As InformesDS = New InformesDS()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "BalanceGralDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current, Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0

                            Do While ((s1.Position <> s1.Length) _
                                        AndAlso (s1.ReadByte = s2.ReadByte))


                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If

                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close()
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close()
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class

    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(), _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")> _
    Partial Public Class EstadoResultadosDataTable
        Inherits Global.System.Data.TypedTableBase(Of EstadoResultadosRow)

        Private columnIdAgrupacion As Global.System.Data.DataColumn

        Private columnAgrupacion As Global.System.Data.DataColumn

        Private columnCuenta As Global.System.Data.DataColumn

        Private columnMontoPeriodo As Global.System.Data.DataColumn

        Private columnMontoAcumulado As Global.System.Data.DataColumn

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New()
            MyBase.New()
            Me.TableName = "EstadoResultados"
            Me.BeginInit()
            Me.InitClass()
            Me.EndInit()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New()
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property IdAgrupacionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIdAgrupacion
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property AgrupacionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAgrupacion
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CuentaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCuenta
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property MontoPeriodoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMontoPeriodo
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property MontoAcumuladoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMontoAcumulado
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Browsable(False)> _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Default Public ReadOnly Property Item(ByVal index As Integer) As EstadoResultadosRow
            Get
                Return CType(Me.Rows(index), EstadoResultadosRow)
            End Get
        End Property

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event EstadoResultadosRowChanging As EstadoResultadosRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event EstadoResultadosRowChanged As EstadoResultadosRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event EstadoResultadosRowDeleting As EstadoResultadosRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event EstadoResultadosRowDeleted As EstadoResultadosRowChangeEventHandler

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Sub AddEstadoResultadosRow(ByVal row As EstadoResultadosRow)
            Me.Rows.Add(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Function AddEstadoResultadosRow(ByVal IdAgrupacion As Integer, ByVal Agrupacion As String, ByVal Cuenta As String, ByVal MontoPeriodo As Decimal, ByVal MontoAcumulado As Decimal) As EstadoResultadosRow
            Dim rowEstadoResultadosRow As EstadoResultadosRow = CType(Me.NewRow, EstadoResultadosRow)
            Dim columnValuesArray() As Object = New Object() {IdAgrupacion, Agrupacion, Cuenta, MontoPeriodo, MontoAcumulado}
            rowEstadoResultadosRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowEstadoResultadosRow)
            Return rowEstadoResultadosRow
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As EstadoResultadosDataTable = CType(MyBase.Clone, EstadoResultadosDataTable)
            cln.InitVars()
            Return cln
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New EstadoResultadosDataTable()
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub InitVars()
            Me.columnIdAgrupacion = MyBase.Columns("IdAgrupacion")
            Me.columnAgrupacion = MyBase.Columns("Agrupacion")
            Me.columnCuenta = MyBase.Columns("Cuenta")
            Me.columnMontoPeriodo = MyBase.Columns("MontoPeriodo")
            Me.columnMontoAcumulado = MyBase.Columns("MontoAcumulado")
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitClass()
            Me.columnIdAgrupacion = New Global.System.Data.DataColumn("IdAgrupacion", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIdAgrupacion)
            Me.columnAgrupacion = New Global.System.Data.DataColumn("Agrupacion", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAgrupacion)
            Me.columnCuenta = New Global.System.Data.DataColumn("Cuenta", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCuenta)
            Me.columnMontoPeriodo = New Global.System.Data.DataColumn("MontoPeriodo", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMontoPeriodo)
            Me.columnMontoAcumulado = New Global.System.Data.DataColumn("MontoAcumulado", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMontoAcumulado)
            Me.columnAgrupacion.MaxLength = 64
            Me.columnCuenta.MaxLength = 128
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function NewEstadoResultadosRow() As EstadoResultadosRow
            Return CType(Me.NewRow, EstadoResultadosRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New EstadoResultadosRow(builder)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(EstadoResultadosRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.EstadoResultadosRowChangedEvent) Is Nothing) Then
                RaiseEvent EstadoResultadosRowChanged(Me, New EstadoResultadosRowChangeEvent(CType(e.Row, EstadoResultadosRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.EstadoResultadosRowChangingEvent) Is Nothing) Then
                RaiseEvent EstadoResultadosRowChanging(Me, New EstadoResultadosRowChangeEvent(CType(e.Row, EstadoResultadosRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.EstadoResultadosRowDeletedEvent) Is Nothing) Then
                RaiseEvent EstadoResultadosRowDeleted(Me, New EstadoResultadosRowChangeEvent(CType(e.Row, EstadoResultadosRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.EstadoResultadosRowDeletingEvent) Is Nothing) Then
                RaiseEvent EstadoResultadosRowDeleting(Me, New EstadoResultadosRowChangeEvent(CType(e.Row, EstadoResultadosRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub RemoveEstadoResultadosRow(ByVal row As EstadoResultadosRow)
            Me.Rows.Remove(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As InformesDS = New InformesDS()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "EstadoResultadosDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current, Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0

                            Do While ((s1.Position <> s1.Length) _
                                        AndAlso (s1.ReadByte = s2.ReadByte))


                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If

                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close()
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close()
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class

    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(), _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")> _
    Partial Public Class PolizaInformeDataTable
        Inherits Global.System.Data.TypedTableBase(Of PolizaInformeRow)

        Private columnPerfil As Global.System.Data.DataColumn

        Private columnIdPolizaTit As Global.System.Data.DataColumn

        Private columnFecha As Global.System.Data.DataColumn

        Private columnPolizaTipo As Global.System.Data.DataColumn

        Private columnFolio As Global.System.Data.DataColumn

        Private columnOrigen As Global.System.Data.DataColumn

        Private columnCuenta As Global.System.Data.DataColumn

        Private columnConcepto As Global.System.Data.DataColumn

        Private columnObservaciones As Global.System.Data.DataColumn

        Private columnCargo As Global.System.Data.DataColumn

        Private columnAbono As Global.System.Data.DataColumn

        Private columnOrden As Global.System.Data.DataColumn

        Private columnSegmento As Global.System.Data.DataColumn

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New()
            MyBase.New()
            Me.TableName = "PolizaInforme"
            Me.BeginInit()
            Me.InitClass()
            Me.EndInit()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New()
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PerfilColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPerfil
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property IdPolizaTitColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIdPolizaTit
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property FechaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFecha
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PolizaTipoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPolizaTipo
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property FolioColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFolio
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property OrigenColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOrigen
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CuentaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCuenta
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ConceptoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnConcepto
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ObservacionesColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnObservaciones
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CargoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCargo
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property AbonoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAbono
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property OrdenColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOrden
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property SegmentoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSegmento
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Browsable(False)> _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Default Public ReadOnly Property Item(ByVal index As Integer) As PolizaInformeRow
            Get
                Return CType(Me.Rows(index), PolizaInformeRow)
            End Get
        End Property

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event PolizaInformeRowChanging As PolizaInformeRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event PolizaInformeRowChanged As PolizaInformeRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event PolizaInformeRowDeleting As PolizaInformeRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event PolizaInformeRowDeleted As PolizaInformeRowChangeEventHandler

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Sub AddPolizaInformeRow(ByVal row As PolizaInformeRow)
            Me.Rows.Add(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Function AddPolizaInformeRow(ByVal Perfil As String, ByVal IdPolizaTit As String, ByVal Fecha As Date, ByVal PolizaTipo As String, ByVal Folio As Integer, ByVal Origen As String, ByVal Cuenta As String, ByVal Concepto As String, ByVal Observaciones As String, ByVal Cargo As Decimal, ByVal Abono As Decimal, ByVal Orden As Short, ByVal Segmento As String) As PolizaInformeRow
            Dim rowPolizaInformeRow As PolizaInformeRow = CType(Me.NewRow, PolizaInformeRow)
            Dim columnValuesArray() As Object = New Object() {Perfil, IdPolizaTit, Fecha, PolizaTipo, Folio, Origen, Cuenta, Concepto, Observaciones, Cargo, Abono, Orden, Segmento}
            rowPolizaInformeRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowPolizaInformeRow)
            Return rowPolizaInformeRow
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As PolizaInformeDataTable = CType(MyBase.Clone, PolizaInformeDataTable)
            cln.InitVars()
            Return cln
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New PolizaInformeDataTable()
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub InitVars()
            Me.columnPerfil = MyBase.Columns("Perfil")
            Me.columnIdPolizaTit = MyBase.Columns("IdPolizaTit")
            Me.columnFecha = MyBase.Columns("Fecha")
            Me.columnPolizaTipo = MyBase.Columns("PolizaTipo")
            Me.columnFolio = MyBase.Columns("Folio")
            Me.columnOrigen = MyBase.Columns("Origen")
            Me.columnCuenta = MyBase.Columns("Cuenta")
            Me.columnConcepto = MyBase.Columns("Concepto")
            Me.columnObservaciones = MyBase.Columns("Observaciones")
            Me.columnCargo = MyBase.Columns("Cargo")
            Me.columnAbono = MyBase.Columns("Abono")
            Me.columnOrden = MyBase.Columns("Orden")
            Me.columnSegmento = MyBase.Columns("Segmento")
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitClass()
            Me.columnPerfil = New Global.System.Data.DataColumn("Perfil", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPerfil)
            Me.columnIdPolizaTit = New Global.System.Data.DataColumn("IdPolizaTit", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIdPolizaTit)
            Me.columnFecha = New Global.System.Data.DataColumn("Fecha", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFecha)
            Me.columnPolizaTipo = New Global.System.Data.DataColumn("PolizaTipo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPolizaTipo)
            Me.columnFolio = New Global.System.Data.DataColumn("Folio", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFolio)
            Me.columnOrigen = New Global.System.Data.DataColumn("Origen", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOrigen)
            Me.columnCuenta = New Global.System.Data.DataColumn("Cuenta", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCuenta)
            Me.columnConcepto = New Global.System.Data.DataColumn("Concepto", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnConcepto)
            Me.columnObservaciones = New Global.System.Data.DataColumn("Observaciones", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnObservaciones)
            Me.columnCargo = New Global.System.Data.DataColumn("Cargo", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCargo)
            Me.columnAbono = New Global.System.Data.DataColumn("Abono", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAbono)
            Me.columnOrden = New Global.System.Data.DataColumn("Orden", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOrden)
            Me.columnSegmento = New Global.System.Data.DataColumn("Segmento", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSegmento)
            Me.columnPerfil.AllowDBNull = False
            Me.columnPerfil.MaxLength = 64
            Me.columnIdPolizaTit.AllowDBNull = False
            Me.columnIdPolizaTit.MaxLength = 18
            Me.columnFecha.AllowDBNull = False
            Me.columnPolizaTipo.AllowDBNull = False
            Me.columnPolizaTipo.MaxLength = 64
            Me.columnFolio.AllowDBNull = False
            Me.columnOrigen.AllowDBNull = False
            Me.columnOrigen.MaxLength = 32
            Me.columnCuenta.MaxLength = 64
            Me.columnConcepto.MaxLength = 128
            Me.columnObservaciones.AllowDBNull = False
            Me.columnObservaciones.MaxLength = 100
            Me.columnCargo.AllowDBNull = False
            Me.columnAbono.AllowDBNull = False
            Me.columnOrden.AllowDBNull = False
            Me.columnSegmento.AllowDBNull = False
            Me.columnSegmento.MaxLength = 32
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function NewPolizaInformeRow() As PolizaInformeRow
            Return CType(Me.NewRow, PolizaInformeRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New PolizaInformeRow(builder)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(PolizaInformeRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.PolizaInformeRowChangedEvent) Is Nothing) Then
                RaiseEvent PolizaInformeRowChanged(Me, New PolizaInformeRowChangeEvent(CType(e.Row, PolizaInformeRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.PolizaInformeRowChangingEvent) Is Nothing) Then
                RaiseEvent PolizaInformeRowChanging(Me, New PolizaInformeRowChangeEvent(CType(e.Row, PolizaInformeRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.PolizaInformeRowDeletedEvent) Is Nothing) Then
                RaiseEvent PolizaInformeRowDeleted(Me, New PolizaInformeRowChangeEvent(CType(e.Row, PolizaInformeRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.PolizaInformeRowDeletingEvent) Is Nothing) Then
                RaiseEvent PolizaInformeRowDeleting(Me, New PolizaInformeRowChangeEvent(CType(e.Row, PolizaInformeRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub RemovePolizaInformeRow(ByVal row As PolizaInformeRow)
            Me.Rows.Remove(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As InformesDS = New InformesDS()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "PolizaInformeDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current, Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0

                            Do While ((s1.Position <> s1.Length) _
                                        AndAlso (s1.ReadByte = s2.ReadByte))


                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If

                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close()
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close()
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class

    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(), _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")> _
    Partial Public Class ImagenesDataTable
        Inherits Global.System.Data.TypedTableBase(Of ImagenesRow)

        Private columnLogo As Global.System.Data.DataColumn

        Private columnQrCode As Global.System.Data.DataColumn

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New()
            MyBase.New()
            Me.TableName = "Imagenes"
            Me.BeginInit()
            Me.InitClass()
            Me.EndInit()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New()
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property LogoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLogo
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property QrCodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnQrCode
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Browsable(False)> _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Default Public ReadOnly Property Item(ByVal index As Integer) As ImagenesRow
            Get
                Return CType(Me.Rows(index), ImagenesRow)
            End Get
        End Property

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event ImagenesRowChanging As ImagenesRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event ImagenesRowChanged As ImagenesRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event ImagenesRowDeleting As ImagenesRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event ImagenesRowDeleted As ImagenesRowChangeEventHandler

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Sub AddImagenesRow(ByVal row As ImagenesRow)
            Me.Rows.Add(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Function AddImagenesRow(ByVal Logo() As Byte, ByVal QrCode() As Byte) As ImagenesRow
            Dim rowImagenesRow As ImagenesRow = CType(Me.NewRow, ImagenesRow)
            Dim columnValuesArray() As Object = New Object() {Logo, QrCode}
            rowImagenesRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowImagenesRow)
            Return rowImagenesRow
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As ImagenesDataTable = CType(MyBase.Clone, ImagenesDataTable)
            cln.InitVars()
            Return cln
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New ImagenesDataTable()
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub InitVars()
            Me.columnLogo = MyBase.Columns("Logo")
            Me.columnQrCode = MyBase.Columns("QrCode")
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitClass()
            Me.columnLogo = New Global.System.Data.DataColumn("Logo", GetType(Byte()), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLogo)
            Me.columnQrCode = New Global.System.Data.DataColumn("QrCode", GetType(Byte()), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnQrCode)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function NewImagenesRow() As ImagenesRow
            Return CType(Me.NewRow, ImagenesRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New ImagenesRow(builder)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(ImagenesRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.ImagenesRowChangedEvent) Is Nothing) Then
                RaiseEvent ImagenesRowChanged(Me, New ImagenesRowChangeEvent(CType(e.Row, ImagenesRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.ImagenesRowChangingEvent) Is Nothing) Then
                RaiseEvent ImagenesRowChanging(Me, New ImagenesRowChangeEvent(CType(e.Row, ImagenesRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.ImagenesRowDeletedEvent) Is Nothing) Then
                RaiseEvent ImagenesRowDeleted(Me, New ImagenesRowChangeEvent(CType(e.Row, ImagenesRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.ImagenesRowDeletingEvent) Is Nothing) Then
                RaiseEvent ImagenesRowDeleting(Me, New ImagenesRowChangeEvent(CType(e.Row, ImagenesRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub RemoveImagenesRow(ByVal row As ImagenesRow)
            Me.Rows.Remove(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As InformesDS = New InformesDS()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "ImagenesDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current, Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0

                            Do While ((s1.Position <> s1.Length) _
                                        AndAlso (s1.ReadByte = s2.ReadByte))


                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If

                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close()
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close()
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class

    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class ComprobantesEmitidosRow
        Inherits Global.System.Data.DataRow

        Private tableComprobantesEmitidos As ComprobantesEmitidosDataTable

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableComprobantesEmitidos = CType(Me.Table, ComprobantesEmitidosDataTable)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property RFC() As String
            Get
                Try
                    Return CType(Me(Me.tableComprobantesEmitidos.RFCColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RFC' in table 'ComprobantesEmitidos' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableComprobantesEmitidos.RFCColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Serie() As String
            Get
                Try
                    Return CType(Me(Me.tableComprobantesEmitidos.SerieColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Serie' in table 'ComprobantesEmitidos' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableComprobantesEmitidos.SerieColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Folio() As Integer
            Get
                Try
                    Return CType(Me(Me.tableComprobantesEmitidos.FolioColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Folio' in table 'ComprobantesEmitidos' is DBNull.", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tableComprobantesEmitidos.FolioColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property NumAprobacion() As String
            Get
                Try
                    Return CType(Me(Me.tableComprobantesEmitidos.NumAprobacionColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NumAprobacion' in table 'ComprobantesEmitidos' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableComprobantesEmitidos.NumAprobacionColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property HoraComprobante() As Date
            Get
                Try
                    Return CType(Me(Me.tableComprobantesEmitidos.HoraComprobanteColumn), Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HoraComprobante' in table 'ComprobantesEmitidos' is DBNull." & _
                            "", e)
                End Try
            End Get
            Set(value As Date)
                Me(Me.tableComprobantesEmitidos.HoraComprobanteColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Total() As Decimal
            Get
                Try
                    Return CType(Me(Me.tableComprobantesEmitidos.TotalColumn), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Total' in table 'ComprobantesEmitidos' is DBNull.", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tableComprobantesEmitidos.TotalColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ImpTrasladados() As Decimal
            Get
                Try
                    Return CType(Me(Me.tableComprobantesEmitidos.ImpTrasladadosColumn), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ImpTrasladados' in table 'ComprobantesEmitidos' is DBNull.", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tableComprobantesEmitidos.ImpTrasladadosColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Activa() As Boolean
            Get
                Try
                    Return CType(Me(Me.tableComprobantesEmitidos.ActivaColumn), Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Activa' in table 'ComprobantesEmitidos' is DBNull.", e)
                End Try
            End Get
            Set(value As Boolean)
                Me(Me.tableComprobantesEmitidos.ActivaColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Efecto() As String
            Get
                Return CType(Me(Me.tableComprobantesEmitidos.EfectoColumn), String)
            End Get
            Set(value As String)
                Me(Me.tableComprobantesEmitidos.EfectoColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsRFCNull() As Boolean
            Return Me.IsNull(Me.tableComprobantesEmitidos.RFCColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetRFCNull()
            Me(Me.tableComprobantesEmitidos.RFCColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsSerieNull() As Boolean
            Return Me.IsNull(Me.tableComprobantesEmitidos.SerieColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetSerieNull()
            Me(Me.tableComprobantesEmitidos.SerieColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsFolioNull() As Boolean
            Return Me.IsNull(Me.tableComprobantesEmitidos.FolioColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetFolioNull()
            Me(Me.tableComprobantesEmitidos.FolioColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsNumAprobacionNull() As Boolean
            Return Me.IsNull(Me.tableComprobantesEmitidos.NumAprobacionColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetNumAprobacionNull()
            Me(Me.tableComprobantesEmitidos.NumAprobacionColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsHoraComprobanteNull() As Boolean
            Return Me.IsNull(Me.tableComprobantesEmitidos.HoraComprobanteColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetHoraComprobanteNull()
            Me(Me.tableComprobantesEmitidos.HoraComprobanteColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTotalNull() As Boolean
            Return Me.IsNull(Me.tableComprobantesEmitidos.TotalColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTotalNull()
            Me(Me.tableComprobantesEmitidos.TotalColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsImpTrasladadosNull() As Boolean
            Return Me.IsNull(Me.tableComprobantesEmitidos.ImpTrasladadosColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetImpTrasladadosNull()
            Me(Me.tableComprobantesEmitidos.ImpTrasladadosColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsActivaNull() As Boolean
            Return Me.IsNull(Me.tableComprobantesEmitidos.ActivaColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetActivaNull()
            Me(Me.tableComprobantesEmitidos.ActivaColumn) = Global.System.Convert.DBNull
        End Sub
    End Class

    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class ComprobantesListRow
        Inherits Global.System.Data.DataRow

        Private tableComprobantesList As ComprobantesListDataTable

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableComprobantesList = CType(Me.Table, ComprobantesListDataTable)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property FechaComprobante() As Date
            Get
                Try
                    Return CType(Me(Me.tableComprobantesList.FechaComprobanteColumn), Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FechaComprobante' in table 'ComprobantesList' is DBNull.", e)
                End Try
            End Get
            Set(value As Date)
                Me(Me.tableComprobantesList.FechaComprobanteColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property HoraComprobante() As Date
            Get
                Try
                    Return CType(Me(Me.tableComprobantesList.HoraComprobanteColumn), Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HoraComprobante' in table 'ComprobantesList' is DBNull.", e)
                End Try
            End Get
            Set(value As Date)
                Me(Me.tableComprobantesList.HoraComprobanteColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property IdCFDSerie() As Integer
            Get
                Try
                    Return CType(Me(Me.tableComprobantesList.IdCFDSerieColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IdCFDSerie' in table 'ComprobantesList' is DBNull.", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tableComprobantesList.IdCFDSerieColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Serie() As String
            Get
                Return CType(Me(Me.tableComprobantesList.SerieColumn), String)
            End Get
            Set(value As String)
                Me(Me.tableComprobantesList.SerieColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Folio() As Integer
            Get
                Return CType(Me(Me.tableComprobantesList.FolioColumn), Integer)
            End Get
            Set(value As Integer)
                Me(Me.tableComprobantesList.FolioColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property UUID() As String
            Get
                Try
                    Return CType(Me(Me.tableComprobantesList.UUIDColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'UUID' in table 'ComprobantesList' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableComprobantesList.UUIDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property IdCliente() As Integer
            Get
                Try
                    Return CType(Me(Me.tableComprobantesList.IdClienteColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IdCliente' in table 'ComprobantesList' is DBNull.", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tableComprobantesList.IdClienteColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property RFC() As String
            Get
                Try
                    Return CType(Me(Me.tableComprobantesList.RFCColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RFC' in table 'ComprobantesList' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableComprobantesList.RFCColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property RazonSocial() As String
            Get
                Try
                    Return CType(Me(Me.tableComprobantesList.RazonSocialColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RazonSocial' in table 'ComprobantesList' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableComprobantesList.RazonSocialColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property SubTotal() As Decimal
            Get
                Try
                    Return CType(Me(Me.tableComprobantesList.SubTotalColumn), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SubTotal' in table 'ComprobantesList' is DBNull.", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tableComprobantesList.SubTotalColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ImpTrasladados() As Decimal
            Get
                Try
                    Return CType(Me(Me.tableComprobantesList.ImpTrasladadosColumn), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ImpTrasladados' in table 'ComprobantesList' is DBNull.", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tableComprobantesList.ImpTrasladadosColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Total() As Decimal
            Get
                Try
                    Return CType(Me(Me.tableComprobantesList.TotalColumn), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Total' in table 'ComprobantesList' is DBNull.", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tableComprobantesList.TotalColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Estatus() As String
            Get
                Try
                    Return CType(Me(Me.tableComprobantesList.EstatusColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Estatus' in table 'ComprobantesList' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableComprobantesList.EstatusColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property FechaCancelacion() As Date
            Get
                Try
                    Return CType(Me(Me.tableComprobantesList.FechaCancelacionColumn), Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FechaCancelacion' in table 'ComprobantesList' is DBNull.", e)
                End Try
            End Get
            Set(value As Date)
                Me(Me.tableComprobantesList.FechaCancelacionColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property IdDocumento() As String
            Get
                Return CType(Me(Me.tableComprobantesList.IdDocumentoColumn), String)
            End Get
            Set(value As String)
                Me(Me.tableComprobantesList.IdDocumentoColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsFechaComprobanteNull() As Boolean
            Return Me.IsNull(Me.tableComprobantesList.FechaComprobanteColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetFechaComprobanteNull()
            Me(Me.tableComprobantesList.FechaComprobanteColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsHoraComprobanteNull() As Boolean
            Return Me.IsNull(Me.tableComprobantesList.HoraComprobanteColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetHoraComprobanteNull()
            Me(Me.tableComprobantesList.HoraComprobanteColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsIdCFDSerieNull() As Boolean
            Return Me.IsNull(Me.tableComprobantesList.IdCFDSerieColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetIdCFDSerieNull()
            Me(Me.tableComprobantesList.IdCFDSerieColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsUUIDNull() As Boolean
            Return Me.IsNull(Me.tableComprobantesList.UUIDColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetUUIDNull()
            Me(Me.tableComprobantesList.UUIDColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsIdClienteNull() As Boolean
            Return Me.IsNull(Me.tableComprobantesList.IdClienteColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetIdClienteNull()
            Me(Me.tableComprobantesList.IdClienteColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsRFCNull() As Boolean
            Return Me.IsNull(Me.tableComprobantesList.RFCColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetRFCNull()
            Me(Me.tableComprobantesList.RFCColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsRazonSocialNull() As Boolean
            Return Me.IsNull(Me.tableComprobantesList.RazonSocialColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetRazonSocialNull()
            Me(Me.tableComprobantesList.RazonSocialColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsSubTotalNull() As Boolean
            Return Me.IsNull(Me.tableComprobantesList.SubTotalColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetSubTotalNull()
            Me(Me.tableComprobantesList.SubTotalColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsImpTrasladadosNull() As Boolean
            Return Me.IsNull(Me.tableComprobantesList.ImpTrasladadosColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetImpTrasladadosNull()
            Me(Me.tableComprobantesList.ImpTrasladadosColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTotalNull() As Boolean
            Return Me.IsNull(Me.tableComprobantesList.TotalColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTotalNull()
            Me(Me.tableComprobantesList.TotalColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsEstatusNull() As Boolean
            Return Me.IsNull(Me.tableComprobantesList.EstatusColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetEstatusNull()
            Me(Me.tableComprobantesList.EstatusColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsFechaCancelacionNull() As Boolean
            Return Me.IsNull(Me.tableComprobantesList.FechaCancelacionColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetFechaCancelacionNull()
            Me(Me.tableComprobantesList.FechaCancelacionColumn) = Global.System.Convert.DBNull
        End Sub
    End Class

    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class ComprobantesFiscalesRow
        Inherits Global.System.Data.DataRow

        Private tableComprobantesFiscales As ComprobantesFiscalesDataTable

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableComprobantesFiscales = CType(Me.Table, ComprobantesFiscalesDataTable)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TipoComprobante() As String
            Get
                Try
                    Return CType(Me(Me.tableComprobantesFiscales.TipoComprobanteColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TipoComprobante' in table 'ComprobantesFiscales' is DBNull." & _
                            "", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableComprobantesFiscales.TipoComprobanteColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Serie() As String
            Get
                Return CType(Me(Me.tableComprobantesFiscales.SerieColumn), String)
            End Get
            Set(value As String)
                Me(Me.tableComprobantesFiscales.SerieColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Folio() As Integer
            Get
                Return CType(Me(Me.tableComprobantesFiscales.FolioColumn), Integer)
            End Get
            Set(value As Integer)
                Me(Me.tableComprobantesFiscales.FolioColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property UUID() As String
            Get
                Try
                    Return CType(Me(Me.tableComprobantesFiscales.UUIDColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'UUID' in table 'ComprobantesFiscales' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableComprobantesFiscales.UUIDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property FechaComprobante() As Date
            Get
                Return CType(Me(Me.tableComprobantesFiscales.FechaComprobanteColumn), Date)
            End Get
            Set(value As Date)
                Me(Me.tableComprobantesFiscales.FechaComprobanteColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property FechaTimbrado() As Date
            Get
                Try
                    Return CType(Me(Me.tableComprobantesFiscales.FechaTimbradoColumn), Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FechaTimbrado' in table 'ComprobantesFiscales' is DBNull.", e)
                End Try
            End Get
            Set(value As Date)
                Me(Me.tableComprobantesFiscales.FechaTimbradoColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property FolioLetra() As String
            Get
                Try
                    Return CType(Me(Me.tableComprobantesFiscales.FolioLetraColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FolioLetra' in table 'ComprobantesFiscales' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableComprobantesFiscales.FolioLetraColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property SubTotal() As Decimal
            Get
                Return CType(Me(Me.tableComprobantesFiscales.SubTotalColumn), Decimal)
            End Get
            Set(value As Decimal)
                Me(Me.tableComprobantesFiscales.SubTotalColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TotalDescuentos() As Decimal
            Get
                Return CType(Me(Me.tableComprobantesFiscales.TotalDescuentosColumn), Decimal)
            End Get
            Set(value As Decimal)
                Me(Me.tableComprobantesFiscales.TotalDescuentosColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ImpTrasladados() As Decimal
            Get
                Return CType(Me(Me.tableComprobantesFiscales.ImpTrasladadosColumn), Decimal)
            End Get
            Set(value As Decimal)
                Me(Me.tableComprobantesFiscales.ImpTrasladadosColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ImpRetenidos() As Decimal
            Get
                Return CType(Me(Me.tableComprobantesFiscales.ImpRetenidosColumn), Decimal)
            End Get
            Set(value As Decimal)
                Me(Me.tableComprobantesFiscales.ImpRetenidosColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Total() As Decimal
            Get
                Return CType(Me(Me.tableComprobantesFiscales.TotalColumn), Decimal)
            End Get
            Set(value As Decimal)
                Me(Me.tableComprobantesFiscales.TotalColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TotalLetra() As String
            Get
                Try
                    Return CType(Me(Me.tableComprobantesFiscales.TotalLetraColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TotalLetra' in table 'ComprobantesFiscales' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableComprobantesFiscales.TotalLetraColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property IdDocumento() As String
            Get
                Try
                    Return CType(Me(Me.tableComprobantesFiscales.IdDocumentoColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IdDocumento' in table 'ComprobantesFiscales' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableComprobantesFiscales.IdDocumentoColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Divisa() As String
            Get
                Try
                    Return CType(Me(Me.tableComprobantesFiscales.DivisaColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Divisa' in table 'ComprobantesFiscales' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableComprobantesFiscales.DivisaColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property AbrevDivisa() As String
            Get
                Try
                    Return CType(Me(Me.tableComprobantesFiscales.AbrevDivisaColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AbrevDivisa' in table 'ComprobantesFiscales' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableComprobantesFiscales.AbrevDivisaColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TipoCambio() As Decimal
            Get
                Try
                    Return CType(Me(Me.tableComprobantesFiscales.TipoCambioColumn), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TipoCambio' in table 'ComprobantesFiscales' is DBNull.", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tableComprobantesFiscales.TipoCambioColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Activa() As Boolean
            Get
                Return CType(Me(Me.tableComprobantesFiscales.ActivaColumn), Boolean)
            End Get
            Set(value As Boolean)
                Me(Me.tableComprobantesFiscales.ActivaColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TipoPago() As String
            Get
                Try
                    Return CType(Me(Me.tableComprobantesFiscales.TipoPagoColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TipoPago' in table 'ComprobantesFiscales' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableComprobantesFiscales.TipoPagoColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property DiasCredito() As Integer
            Get
                Return CType(Me(Me.tableComprobantesFiscales.DiasCreditoColumn), Integer)
            End Get
            Set(value As Integer)
                Me(Me.tableComprobantesFiscales.DiasCreditoColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Referencia() As String
            Get
                Try
                    Return CType(Me(Me.tableComprobantesFiscales.ReferenciaColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Referencia' in table 'ComprobantesFiscales' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableComprobantesFiscales.ReferenciaColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property RFC() As String
            Get
                Try
                    Return CType(Me(Me.tableComprobantesFiscales.RFCColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RFC' in table 'ComprobantesFiscales' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableComprobantesFiscales.RFCColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property RazonSocial() As String
            Get
                Try
                    Return CType(Me(Me.tableComprobantesFiscales.RazonSocialColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RazonSocial' in table 'ComprobantesFiscales' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableComprobantesFiscales.RazonSocialColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CalleFIS() As String
            Get
                Try
                    Return CType(Me(Me.tableComprobantesFiscales.CalleFISColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CalleFIS' in table 'ComprobantesFiscales' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableComprobantesFiscales.CalleFISColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property NumExtFIS() As String
            Get
                Try
                    Return CType(Me(Me.tableComprobantesFiscales.NumExtFISColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NumExtFIS' in table 'ComprobantesFiscales' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableComprobantesFiscales.NumExtFISColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property NumIntFIS() As String
            Get
                Try
                    Return CType(Me(Me.tableComprobantesFiscales.NumIntFISColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NumIntFIS' in table 'ComprobantesFiscales' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableComprobantesFiscales.NumIntFISColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ColoniaFIS() As String
            Get
                Try
                    Return CType(Me(Me.tableComprobantesFiscales.ColoniaFISColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ColoniaFIS' in table 'ComprobantesFiscales' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableComprobantesFiscales.ColoniaFISColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CPReceptor() As String
            Get
                Try
                    Return CType(Me(Me.tableComprobantesFiscales.CPReceptorColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CPReceptor' in table 'ComprobantesFiscales' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableComprobantesFiscales.CPReceptorColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PoblacionReceptor() As String
            Get
                Try
                    Return CType(Me(Me.tableComprobantesFiscales.PoblacionReceptorColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PoblacionReceptor' in table 'ComprobantesFiscales' is DBNul" & _
                            "l.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableComprobantesFiscales.PoblacionReceptorColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property EstadoReceptor() As String
            Get
                Try
                    Return CType(Me(Me.tableComprobantesFiscales.EstadoReceptorColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EstadoReceptor' in table 'ComprobantesFiscales' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableComprobantesFiscales.EstadoReceptorColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PaisReceptor() As String
            Get
                Try
                    Return CType(Me(Me.tableComprobantesFiscales.PaisReceptorColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PaisReceptor' in table 'ComprobantesFiscales' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableComprobantesFiscales.PaisReceptorColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CalleSucursal() As String
            Get
                Try
                    Return CType(Me(Me.tableComprobantesFiscales.CalleSucursalColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CalleSucursal' in table 'ComprobantesFiscales' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableComprobantesFiscales.CalleSucursalColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property NumExtSucursal() As String
            Get
                Try
                    Return CType(Me(Me.tableComprobantesFiscales.NumExtSucursalColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NumExtSucursal' in table 'ComprobantesFiscales' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableComprobantesFiscales.NumExtSucursalColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property NumIntSucursal() As String
            Get
                Try
                    Return CType(Me(Me.tableComprobantesFiscales.NumIntSucursalColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NumIntSucursal' in table 'ComprobantesFiscales' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableComprobantesFiscales.NumIntSucursalColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ColoniaSucursal() As String
            Get
                Try
                    Return CType(Me(Me.tableComprobantesFiscales.ColoniaSucursalColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ColoniaSucursal' in table 'ComprobantesFiscales' is DBNull." & _
                            "", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableComprobantesFiscales.ColoniaSucursalColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CPSucursal() As String
            Get
                Try
                    Return CType(Me(Me.tableComprobantesFiscales.CPSucursalColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CPSucursal' in table 'ComprobantesFiscales' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableComprobantesFiscales.CPSucursalColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PoblacionSucursal() As String
            Get
                Try
                    Return CType(Me(Me.tableComprobantesFiscales.PoblacionSucursalColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PoblacionSucursal' in table 'ComprobantesFiscales' is DBNul" & _
                            "l.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableComprobantesFiscales.PoblacionSucursalColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property EstadoSucursal() As String
            Get
                Try
                    Return CType(Me(Me.tableComprobantesFiscales.EstadoSucursalColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EstadoSucursal' in table 'ComprobantesFiscales' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableComprobantesFiscales.EstadoSucursalColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PaisSucursal() As String
            Get
                Try
                    Return CType(Me(Me.tableComprobantesFiscales.PaisSucursalColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PaisSucursal' in table 'ComprobantesFiscales' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableComprobantesFiscales.PaisSucursalColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TelefonoSucursal() As String
            Get
                Return CType(Me(Me.tableComprobantesFiscales.TelefonoSucursalColumn), String)
            End Get
            Set(value As String)
                Me(Me.tableComprobantesFiscales.TelefonoSucursalColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property EmailSucursal() As String
            Get
                Return CType(Me(Me.tableComprobantesFiscales.EmailSucursalColumn), String)
            End Get
            Set(value As String)
                Me(Me.tableComprobantesFiscales.EmailSucursalColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CodigoConcepto() As String
            Get
                Return CType(Me(Me.tableComprobantesFiscales.CodigoConceptoColumn), String)
            End Get
            Set(value As String)
                Me(Me.tableComprobantesFiscales.CodigoConceptoColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property DescripcionConcepto() As String
            Get
                Return CType(Me(Me.tableComprobantesFiscales.DescripcionConceptoColumn), String)
            End Get
            Set(value As String)
                Me(Me.tableComprobantesFiscales.DescripcionConceptoColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property FactorUnidad() As Integer
            Get
                Return CType(Me(Me.tableComprobantesFiscales.FactorUnidadColumn), Integer)
            End Get
            Set(value As Integer)
                Me(Me.tableComprobantesFiscales.FactorUnidadColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property UnidadMedida() As String
            Get
                Return CType(Me(Me.tableComprobantesFiscales.UnidadMedidaColumn), String)
            End Get
            Set(value As String)
                Me(Me.tableComprobantesFiscales.UnidadMedidaColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Cantidad() As Decimal
            Get
                Return CType(Me(Me.tableComprobantesFiscales.CantidadColumn), Decimal)
            End Get
            Set(value As Decimal)
                Me(Me.tableComprobantesFiscales.CantidadColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PrecioUnitario() As Decimal
            Get
                Return CType(Me(Me.tableComprobantesFiscales.PrecioUnitarioColumn), Decimal)
            End Get
            Set(value As Decimal)
                Me(Me.tableComprobantesFiscales.PrecioUnitarioColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PorcImpTras1() As Decimal
            Get
                Return CType(Me(Me.tableComprobantesFiscales.PorcImpTras1Column), Decimal)
            End Get
            Set(value As Decimal)
                Me(Me.tableComprobantesFiscales.PorcImpTras1Column) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PorcImpTras2() As Decimal
            Get
                Return CType(Me(Me.tableComprobantesFiscales.PorcImpTras2Column), Decimal)
            End Get
            Set(value As Decimal)
                Me(Me.tableComprobantesFiscales.PorcImpTras2Column) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PorcImpRet1() As Decimal
            Get
                Return CType(Me(Me.tableComprobantesFiscales.PorcImpRet1Column), Decimal)
            End Get
            Set(value As Decimal)
                Me(Me.tableComprobantesFiscales.PorcImpRet1Column) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PorcImpRet2() As Decimal
            Get
                Return CType(Me(Me.tableComprobantesFiscales.PorcImpRet2Column), Decimal)
            End Get
            Set(value As Decimal)
                Me(Me.tableComprobantesFiscales.PorcImpRet2Column) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CadenaOriginal() As String
            Get
                Try
                    Return CType(Me(Me.tableComprobantesFiscales.CadenaOriginalColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CadenaOriginal' in table 'ComprobantesFiscales' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableComprobantesFiscales.CadenaOriginalColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property SelloDigital() As String
            Get
                Return CType(Me(Me.tableComprobantesFiscales.SelloDigitalColumn), String)
            End Get
            Set(value As String)
                Me(Me.tableComprobantesFiscales.SelloDigitalColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property NumCertificado() As String
            Get
                Return CType(Me(Me.tableComprobantesFiscales.NumCertificadoColumn), String)
            End Get
            Set(value As String)
                Me(Me.tableComprobantesFiscales.NumCertificadoColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property NumAprobacion() As Integer
            Get
                Return CType(Me(Me.tableComprobantesFiscales.NumAprobacionColumn), Integer)
            End Get
            Set(value As Integer)
                Me(Me.tableComprobantesFiscales.NumAprobacionColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property AnioAprobacion() As Integer
            Get
                Return CType(Me(Me.tableComprobantesFiscales.AnioAprobacionColumn), Integer)
            End Get
            Set(value As Integer)
                Me(Me.tableComprobantesFiscales.AnioAprobacionColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CadenaOriginalCert() As String
            Get
                Try
                    Return CType(Me(Me.tableComprobantesFiscales.CadenaOriginalCertColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CadenaOriginalCert' in table 'ComprobantesFiscales' is DBNu" & _
                            "ll.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableComprobantesFiscales.CadenaOriginalCertColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property NumCertificadoSAT() As String
            Get
                Try
                    Return CType(Me(Me.tableComprobantesFiscales.NumCertificadoSATColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NumCertificadoSAT' in table 'ComprobantesFiscales' is DBNul" & _
                            "l.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableComprobantesFiscales.NumCertificadoSATColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property SelloSAT() As String
            Get
                Try
                    Return CType(Me(Me.tableComprobantesFiscales.SelloSATColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SelloSAT' in table 'ComprobantesFiscales' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableComprobantesFiscales.SelloSATColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property RFCEmisor() As String
            Get
                Try
                    Return CType(Me(Me.tableComprobantesFiscales.RFCEmisorColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RFCEmisor' in table 'ComprobantesFiscales' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableComprobantesFiscales.RFCEmisorColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property RazonSocialEmisor() As String
            Get
                Try
                    Return CType(Me(Me.tableComprobantesFiscales.RazonSocialEmisorColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RazonSocialEmisor' in table 'ComprobantesFiscales' is DBNul" & _
                            "l.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableComprobantesFiscales.RazonSocialEmisorColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CalleEmisor() As String
            Get
                Try
                    Return CType(Me(Me.tableComprobantesFiscales.CalleEmisorColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CalleEmisor' in table 'ComprobantesFiscales' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableComprobantesFiscales.CalleEmisorColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property NumExtEmisor() As String
            Get
                Try
                    Return CType(Me(Me.tableComprobantesFiscales.NumExtEmisorColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NumExtEmisor' in table 'ComprobantesFiscales' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableComprobantesFiscales.NumExtEmisorColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property NumIntEmisor() As String
            Get
                Try
                    Return CType(Me(Me.tableComprobantesFiscales.NumIntEmisorColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NumIntEmisor' in table 'ComprobantesFiscales' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableComprobantesFiscales.NumIntEmisorColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ColoniaEmisor() As String
            Get
                Try
                    Return CType(Me(Me.tableComprobantesFiscales.ColoniaEmisorColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ColoniaEmisor' in table 'ComprobantesFiscales' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableComprobantesFiscales.ColoniaEmisorColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CPEmisor() As String
            Get
                Try
                    Return CType(Me(Me.tableComprobantesFiscales.CPEmisorColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CPEmisor' in table 'ComprobantesFiscales' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableComprobantesFiscales.CPEmisorColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PoblacionEmisor() As String
            Get
                Try
                    Return CType(Me(Me.tableComprobantesFiscales.PoblacionEmisorColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PoblacionEmisor' in table 'ComprobantesFiscales' is DBNull." & _
                            "", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableComprobantesFiscales.PoblacionEmisorColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property EstadoEmisor() As String
            Get
                Try
                    Return CType(Me(Me.tableComprobantesFiscales.EstadoEmisorColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EstadoEmisor' in table 'ComprobantesFiscales' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableComprobantesFiscales.EstadoEmisorColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property MunicipioEmisor() As String
            Get
                Try
                    Return CType(Me(Me.tableComprobantesFiscales.MunicipioEmisorColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MunicipioEmisor' in table 'ComprobantesFiscales' is DBNull." & _
                            "", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableComprobantesFiscales.MunicipioEmisorColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PaisEmisor() As String
            Get
                Try
                    Return CType(Me(Me.tableComprobantesFiscales.PaisEmisorColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PaisEmisor' in table 'ComprobantesFiscales' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableComprobantesFiscales.PaisEmisorColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property MetodoPago() As String
            Get
                Try
                    Return CType(Me(Me.tableComprobantesFiscales.MetodoPagoColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MetodoPago' in table 'ComprobantesFiscales' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableComprobantesFiscales.MetodoPagoColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CuentaPago() As String
            Get
                Try
                    Return CType(Me(Me.tableComprobantesFiscales.CuentaPagoColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CuentaPago' in table 'ComprobantesFiscales' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableComprobantesFiscales.CuentaPagoColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property FormaPago() As String
            Get
                Try
                    Return CType(Me(Me.tableComprobantesFiscales.FormaPagoColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FormaPago' in table 'ComprobantesFiscales' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableComprobantesFiscales.FormaPagoColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property RegimenFiscal() As String
            Get
                Try
                    Return CType(Me(Me.tableComprobantesFiscales.RegimenFiscalColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RegimenFiscal' in table 'ComprobantesFiscales' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableComprobantesFiscales.RegimenFiscalColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property NumPedimento() As String
            Get
                Try
                    Return CType(Me(Me.tableComprobantesFiscales.NumPedimentoColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NumPedimento' in table 'ComprobantesFiscales' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableComprobantesFiscales.NumPedimentoColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property FechaPedimento() As Date
            Get
                Try
                    Return CType(Me(Me.tableComprobantesFiscales.FechaPedimentoColumn), Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FechaPedimento' in table 'ComprobantesFiscales' is DBNull.", e)
                End Try
            End Get
            Set(value As Date)
                Me(Me.tableComprobantesFiscales.FechaPedimentoColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Aduana() As String
            Get
                Try
                    Return CType(Me(Me.tableComprobantesFiscales.AduanaColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Aduana' in table 'ComprobantesFiscales' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableComprobantesFiscales.AduanaColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTipoComprobanteNull() As Boolean
            Return Me.IsNull(Me.tableComprobantesFiscales.TipoComprobanteColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTipoComprobanteNull()
            Me(Me.tableComprobantesFiscales.TipoComprobanteColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsUUIDNull() As Boolean
            Return Me.IsNull(Me.tableComprobantesFiscales.UUIDColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetUUIDNull()
            Me(Me.tableComprobantesFiscales.UUIDColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsFechaTimbradoNull() As Boolean
            Return Me.IsNull(Me.tableComprobantesFiscales.FechaTimbradoColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetFechaTimbradoNull()
            Me(Me.tableComprobantesFiscales.FechaTimbradoColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsFolioLetraNull() As Boolean
            Return Me.IsNull(Me.tableComprobantesFiscales.FolioLetraColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetFolioLetraNull()
            Me(Me.tableComprobantesFiscales.FolioLetraColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTotalLetraNull() As Boolean
            Return Me.IsNull(Me.tableComprobantesFiscales.TotalLetraColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTotalLetraNull()
            Me(Me.tableComprobantesFiscales.TotalLetraColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsIdDocumentoNull() As Boolean
            Return Me.IsNull(Me.tableComprobantesFiscales.IdDocumentoColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetIdDocumentoNull()
            Me(Me.tableComprobantesFiscales.IdDocumentoColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsDivisaNull() As Boolean
            Return Me.IsNull(Me.tableComprobantesFiscales.DivisaColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetDivisaNull()
            Me(Me.tableComprobantesFiscales.DivisaColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsAbrevDivisaNull() As Boolean
            Return Me.IsNull(Me.tableComprobantesFiscales.AbrevDivisaColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetAbrevDivisaNull()
            Me(Me.tableComprobantesFiscales.AbrevDivisaColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTipoCambioNull() As Boolean
            Return Me.IsNull(Me.tableComprobantesFiscales.TipoCambioColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTipoCambioNull()
            Me(Me.tableComprobantesFiscales.TipoCambioColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTipoPagoNull() As Boolean
            Return Me.IsNull(Me.tableComprobantesFiscales.TipoPagoColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTipoPagoNull()
            Me(Me.tableComprobantesFiscales.TipoPagoColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsReferenciaNull() As Boolean
            Return Me.IsNull(Me.tableComprobantesFiscales.ReferenciaColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetReferenciaNull()
            Me(Me.tableComprobantesFiscales.ReferenciaColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsRFCNull() As Boolean
            Return Me.IsNull(Me.tableComprobantesFiscales.RFCColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetRFCNull()
            Me(Me.tableComprobantesFiscales.RFCColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsRazonSocialNull() As Boolean
            Return Me.IsNull(Me.tableComprobantesFiscales.RazonSocialColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetRazonSocialNull()
            Me(Me.tableComprobantesFiscales.RazonSocialColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCalleFISNull() As Boolean
            Return Me.IsNull(Me.tableComprobantesFiscales.CalleFISColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCalleFISNull()
            Me(Me.tableComprobantesFiscales.CalleFISColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsNumExtFISNull() As Boolean
            Return Me.IsNull(Me.tableComprobantesFiscales.NumExtFISColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetNumExtFISNull()
            Me(Me.tableComprobantesFiscales.NumExtFISColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsNumIntFISNull() As Boolean
            Return Me.IsNull(Me.tableComprobantesFiscales.NumIntFISColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetNumIntFISNull()
            Me(Me.tableComprobantesFiscales.NumIntFISColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsColoniaFISNull() As Boolean
            Return Me.IsNull(Me.tableComprobantesFiscales.ColoniaFISColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetColoniaFISNull()
            Me(Me.tableComprobantesFiscales.ColoniaFISColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCPReceptorNull() As Boolean
            Return Me.IsNull(Me.tableComprobantesFiscales.CPReceptorColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCPReceptorNull()
            Me(Me.tableComprobantesFiscales.CPReceptorColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsPoblacionReceptorNull() As Boolean
            Return Me.IsNull(Me.tableComprobantesFiscales.PoblacionReceptorColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetPoblacionReceptorNull()
            Me(Me.tableComprobantesFiscales.PoblacionReceptorColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsEstadoReceptorNull() As Boolean
            Return Me.IsNull(Me.tableComprobantesFiscales.EstadoReceptorColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetEstadoReceptorNull()
            Me(Me.tableComprobantesFiscales.EstadoReceptorColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsPaisReceptorNull() As Boolean
            Return Me.IsNull(Me.tableComprobantesFiscales.PaisReceptorColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetPaisReceptorNull()
            Me(Me.tableComprobantesFiscales.PaisReceptorColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCalleSucursalNull() As Boolean
            Return Me.IsNull(Me.tableComprobantesFiscales.CalleSucursalColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCalleSucursalNull()
            Me(Me.tableComprobantesFiscales.CalleSucursalColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsNumExtSucursalNull() As Boolean
            Return Me.IsNull(Me.tableComprobantesFiscales.NumExtSucursalColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetNumExtSucursalNull()
            Me(Me.tableComprobantesFiscales.NumExtSucursalColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsNumIntSucursalNull() As Boolean
            Return Me.IsNull(Me.tableComprobantesFiscales.NumIntSucursalColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetNumIntSucursalNull()
            Me(Me.tableComprobantesFiscales.NumIntSucursalColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsColoniaSucursalNull() As Boolean
            Return Me.IsNull(Me.tableComprobantesFiscales.ColoniaSucursalColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetColoniaSucursalNull()
            Me(Me.tableComprobantesFiscales.ColoniaSucursalColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCPSucursalNull() As Boolean
            Return Me.IsNull(Me.tableComprobantesFiscales.CPSucursalColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCPSucursalNull()
            Me(Me.tableComprobantesFiscales.CPSucursalColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsPoblacionSucursalNull() As Boolean
            Return Me.IsNull(Me.tableComprobantesFiscales.PoblacionSucursalColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetPoblacionSucursalNull()
            Me(Me.tableComprobantesFiscales.PoblacionSucursalColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsEstadoSucursalNull() As Boolean
            Return Me.IsNull(Me.tableComprobantesFiscales.EstadoSucursalColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetEstadoSucursalNull()
            Me(Me.tableComprobantesFiscales.EstadoSucursalColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsPaisSucursalNull() As Boolean
            Return Me.IsNull(Me.tableComprobantesFiscales.PaisSucursalColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetPaisSucursalNull()
            Me(Me.tableComprobantesFiscales.PaisSucursalColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCadenaOriginalNull() As Boolean
            Return Me.IsNull(Me.tableComprobantesFiscales.CadenaOriginalColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCadenaOriginalNull()
            Me(Me.tableComprobantesFiscales.CadenaOriginalColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCadenaOriginalCertNull() As Boolean
            Return Me.IsNull(Me.tableComprobantesFiscales.CadenaOriginalCertColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCadenaOriginalCertNull()
            Me(Me.tableComprobantesFiscales.CadenaOriginalCertColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsNumCertificadoSATNull() As Boolean
            Return Me.IsNull(Me.tableComprobantesFiscales.NumCertificadoSATColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetNumCertificadoSATNull()
            Me(Me.tableComprobantesFiscales.NumCertificadoSATColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsSelloSATNull() As Boolean
            Return Me.IsNull(Me.tableComprobantesFiscales.SelloSATColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetSelloSATNull()
            Me(Me.tableComprobantesFiscales.SelloSATColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsRFCEmisorNull() As Boolean
            Return Me.IsNull(Me.tableComprobantesFiscales.RFCEmisorColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetRFCEmisorNull()
            Me(Me.tableComprobantesFiscales.RFCEmisorColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsRazonSocialEmisorNull() As Boolean
            Return Me.IsNull(Me.tableComprobantesFiscales.RazonSocialEmisorColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetRazonSocialEmisorNull()
            Me(Me.tableComprobantesFiscales.RazonSocialEmisorColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCalleEmisorNull() As Boolean
            Return Me.IsNull(Me.tableComprobantesFiscales.CalleEmisorColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCalleEmisorNull()
            Me(Me.tableComprobantesFiscales.CalleEmisorColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsNumExtEmisorNull() As Boolean
            Return Me.IsNull(Me.tableComprobantesFiscales.NumExtEmisorColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetNumExtEmisorNull()
            Me(Me.tableComprobantesFiscales.NumExtEmisorColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsNumIntEmisorNull() As Boolean
            Return Me.IsNull(Me.tableComprobantesFiscales.NumIntEmisorColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetNumIntEmisorNull()
            Me(Me.tableComprobantesFiscales.NumIntEmisorColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsColoniaEmisorNull() As Boolean
            Return Me.IsNull(Me.tableComprobantesFiscales.ColoniaEmisorColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetColoniaEmisorNull()
            Me(Me.tableComprobantesFiscales.ColoniaEmisorColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCPEmisorNull() As Boolean
            Return Me.IsNull(Me.tableComprobantesFiscales.CPEmisorColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCPEmisorNull()
            Me(Me.tableComprobantesFiscales.CPEmisorColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsPoblacionEmisorNull() As Boolean
            Return Me.IsNull(Me.tableComprobantesFiscales.PoblacionEmisorColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetPoblacionEmisorNull()
            Me(Me.tableComprobantesFiscales.PoblacionEmisorColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsEstadoEmisorNull() As Boolean
            Return Me.IsNull(Me.tableComprobantesFiscales.EstadoEmisorColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetEstadoEmisorNull()
            Me(Me.tableComprobantesFiscales.EstadoEmisorColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsMunicipioEmisorNull() As Boolean
            Return Me.IsNull(Me.tableComprobantesFiscales.MunicipioEmisorColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetMunicipioEmisorNull()
            Me(Me.tableComprobantesFiscales.MunicipioEmisorColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsPaisEmisorNull() As Boolean
            Return Me.IsNull(Me.tableComprobantesFiscales.PaisEmisorColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetPaisEmisorNull()
            Me(Me.tableComprobantesFiscales.PaisEmisorColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsMetodoPagoNull() As Boolean
            Return Me.IsNull(Me.tableComprobantesFiscales.MetodoPagoColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetMetodoPagoNull()
            Me(Me.tableComprobantesFiscales.MetodoPagoColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCuentaPagoNull() As Boolean
            Return Me.IsNull(Me.tableComprobantesFiscales.CuentaPagoColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCuentaPagoNull()
            Me(Me.tableComprobantesFiscales.CuentaPagoColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsFormaPagoNull() As Boolean
            Return Me.IsNull(Me.tableComprobantesFiscales.FormaPagoColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetFormaPagoNull()
            Me(Me.tableComprobantesFiscales.FormaPagoColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsRegimenFiscalNull() As Boolean
            Return Me.IsNull(Me.tableComprobantesFiscales.RegimenFiscalColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetRegimenFiscalNull()
            Me(Me.tableComprobantesFiscales.RegimenFiscalColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsNumPedimentoNull() As Boolean
            Return Me.IsNull(Me.tableComprobantesFiscales.NumPedimentoColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetNumPedimentoNull()
            Me(Me.tableComprobantesFiscales.NumPedimentoColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsFechaPedimentoNull() As Boolean
            Return Me.IsNull(Me.tableComprobantesFiscales.FechaPedimentoColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetFechaPedimentoNull()
            Me(Me.tableComprobantesFiscales.FechaPedimentoColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsAduanaNull() As Boolean
            Return Me.IsNull(Me.tableComprobantesFiscales.AduanaColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetAduanaNull()
            Me(Me.tableComprobantesFiscales.AduanaColumn) = Global.System.Convert.DBNull
        End Sub
    End Class

    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class BalanceGralRow
        Inherits Global.System.Data.DataRow

        Private tableBalanceGral As BalanceGralDataTable

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableBalanceGral = CType(Me.Table, BalanceGralDataTable)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property IdAgrupacion() As Integer
            Get
                Try
                    Return CType(Me(Me.tableBalanceGral.IdAgrupacionColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IdAgrupacion' in table 'BalanceGral' is DBNull.", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tableBalanceGral.IdAgrupacionColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Agrupacion() As String
            Get
                Try
                    Return CType(Me(Me.tableBalanceGral.AgrupacionColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Agrupacion' in table 'BalanceGral' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableBalanceGral.AgrupacionColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Definicion() As String
            Get
                Try
                    Return CType(Me(Me.tableBalanceGral.DefinicionColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Definicion' in table 'BalanceGral' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableBalanceGral.DefinicionColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Cuenta() As String
            Get
                Try
                    Return CType(Me(Me.tableBalanceGral.CuentaColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Cuenta' in table 'BalanceGral' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableBalanceGral.CuentaColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Monto() As Decimal
            Get
                Try
                    Return CType(Me(Me.tableBalanceGral.MontoColumn), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Monto' in table 'BalanceGral' is DBNull.", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tableBalanceGral.MontoColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsIdAgrupacionNull() As Boolean
            Return Me.IsNull(Me.tableBalanceGral.IdAgrupacionColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetIdAgrupacionNull()
            Me(Me.tableBalanceGral.IdAgrupacionColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsAgrupacionNull() As Boolean
            Return Me.IsNull(Me.tableBalanceGral.AgrupacionColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetAgrupacionNull()
            Me(Me.tableBalanceGral.AgrupacionColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsDefinicionNull() As Boolean
            Return Me.IsNull(Me.tableBalanceGral.DefinicionColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetDefinicionNull()
            Me(Me.tableBalanceGral.DefinicionColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCuentaNull() As Boolean
            Return Me.IsNull(Me.tableBalanceGral.CuentaColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCuentaNull()
            Me(Me.tableBalanceGral.CuentaColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsMontoNull() As Boolean
            Return Me.IsNull(Me.tableBalanceGral.MontoColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetMontoNull()
            Me(Me.tableBalanceGral.MontoColumn) = Global.System.Convert.DBNull
        End Sub
    End Class

    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class EstadoResultadosRow
        Inherits Global.System.Data.DataRow

        Private tableEstadoResultados As EstadoResultadosDataTable

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableEstadoResultados = CType(Me.Table, EstadoResultadosDataTable)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property IdAgrupacion() As Integer
            Get
                Try
                    Return CType(Me(Me.tableEstadoResultados.IdAgrupacionColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IdAgrupacion' in table 'EstadoResultados' is DBNull.", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tableEstadoResultados.IdAgrupacionColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Agrupacion() As String
            Get
                Try
                    Return CType(Me(Me.tableEstadoResultados.AgrupacionColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Agrupacion' in table 'EstadoResultados' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableEstadoResultados.AgrupacionColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Cuenta() As String
            Get
                Try
                    Return CType(Me(Me.tableEstadoResultados.CuentaColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Cuenta' in table 'EstadoResultados' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableEstadoResultados.CuentaColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property MontoPeriodo() As Decimal
            Get
                Try
                    Return CType(Me(Me.tableEstadoResultados.MontoPeriodoColumn), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MontoPeriodo' in table 'EstadoResultados' is DBNull.", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tableEstadoResultados.MontoPeriodoColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property MontoAcumulado() As Decimal
            Get
                Try
                    Return CType(Me(Me.tableEstadoResultados.MontoAcumuladoColumn), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MontoAcumulado' in table 'EstadoResultados' is DBNull.", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tableEstadoResultados.MontoAcumuladoColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsIdAgrupacionNull() As Boolean
            Return Me.IsNull(Me.tableEstadoResultados.IdAgrupacionColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetIdAgrupacionNull()
            Me(Me.tableEstadoResultados.IdAgrupacionColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsAgrupacionNull() As Boolean
            Return Me.IsNull(Me.tableEstadoResultados.AgrupacionColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetAgrupacionNull()
            Me(Me.tableEstadoResultados.AgrupacionColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCuentaNull() As Boolean
            Return Me.IsNull(Me.tableEstadoResultados.CuentaColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCuentaNull()
            Me(Me.tableEstadoResultados.CuentaColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsMontoPeriodoNull() As Boolean
            Return Me.IsNull(Me.tableEstadoResultados.MontoPeriodoColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetMontoPeriodoNull()
            Me(Me.tableEstadoResultados.MontoPeriodoColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsMontoAcumuladoNull() As Boolean
            Return Me.IsNull(Me.tableEstadoResultados.MontoAcumuladoColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetMontoAcumuladoNull()
            Me(Me.tableEstadoResultados.MontoAcumuladoColumn) = Global.System.Convert.DBNull
        End Sub
    End Class

    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class PolizaInformeRow
        Inherits Global.System.Data.DataRow

        Private tablePolizaInforme As PolizaInformeDataTable

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablePolizaInforme = CType(Me.Table, PolizaInformeDataTable)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Perfil() As String
            Get
                Return CType(Me(Me.tablePolizaInforme.PerfilColumn), String)
            End Get
            Set(value As String)
                Me(Me.tablePolizaInforme.PerfilColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property IdPolizaTit() As String
            Get
                Return CType(Me(Me.tablePolizaInforme.IdPolizaTitColumn), String)
            End Get
            Set(value As String)
                Me(Me.tablePolizaInforme.IdPolizaTitColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Fecha() As Date
            Get
                Return CType(Me(Me.tablePolizaInforme.FechaColumn), Date)
            End Get
            Set(value As Date)
                Me(Me.tablePolizaInforme.FechaColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PolizaTipo() As String
            Get
                Return CType(Me(Me.tablePolizaInforme.PolizaTipoColumn), String)
            End Get
            Set(value As String)
                Me(Me.tablePolizaInforme.PolizaTipoColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Folio() As Integer
            Get
                Return CType(Me(Me.tablePolizaInforme.FolioColumn), Integer)
            End Get
            Set(value As Integer)
                Me(Me.tablePolizaInforme.FolioColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Origen() As String
            Get
                Return CType(Me(Me.tablePolizaInforme.OrigenColumn), String)
            End Get
            Set(value As String)
                Me(Me.tablePolizaInforme.OrigenColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Cuenta() As String
            Get
                Try
                    Return CType(Me(Me.tablePolizaInforme.CuentaColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Cuenta' in table 'PolizaInforme' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tablePolizaInforme.CuentaColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Concepto() As String
            Get
                Try
                    Return CType(Me(Me.tablePolizaInforme.ConceptoColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Concepto' in table 'PolizaInforme' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tablePolizaInforme.ConceptoColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Observaciones() As String
            Get
                Return CType(Me(Me.tablePolizaInforme.ObservacionesColumn), String)
            End Get
            Set(value As String)
                Me(Me.tablePolizaInforme.ObservacionesColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Cargo() As Decimal
            Get
                Return CType(Me(Me.tablePolizaInforme.CargoColumn), Decimal)
            End Get
            Set(value As Decimal)
                Me(Me.tablePolizaInforme.CargoColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Abono() As Decimal
            Get
                Return CType(Me(Me.tablePolizaInforme.AbonoColumn), Decimal)
            End Get
            Set(value As Decimal)
                Me(Me.tablePolizaInforme.AbonoColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Orden() As Short
            Get
                Return CType(Me(Me.tablePolizaInforme.OrdenColumn), Short)
            End Get
            Set(value As Short)
                Me(Me.tablePolizaInforme.OrdenColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Segmento() As String
            Get
                Return CType(Me(Me.tablePolizaInforme.SegmentoColumn), String)
            End Get
            Set(value As String)
                Me(Me.tablePolizaInforme.SegmentoColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCuentaNull() As Boolean
            Return Me.IsNull(Me.tablePolizaInforme.CuentaColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCuentaNull()
            Me(Me.tablePolizaInforme.CuentaColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsConceptoNull() As Boolean
            Return Me.IsNull(Me.tablePolizaInforme.ConceptoColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetConceptoNull()
            Me(Me.tablePolizaInforme.ConceptoColumn) = Global.System.Convert.DBNull
        End Sub
    End Class

    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class ImagenesRow
        Inherits Global.System.Data.DataRow

        Private tableImagenes As ImagenesDataTable

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableImagenes = CType(Me.Table, ImagenesDataTable)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Logo() As Byte()
            Get
                Try
                    Return CType(Me(Me.tableImagenes.LogoColumn), Byte())
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Logo' in table 'Imagenes' is DBNull.", e)
                End Try
            End Get
            Set(value As Byte())
                Me(Me.tableImagenes.LogoColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property QrCode() As Byte()
            Get
                Try
                    Return CType(Me(Me.tableImagenes.QrCodeColumn), Byte())
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'QrCode' in table 'Imagenes' is DBNull.", e)
                End Try
            End Get
            Set(value As Byte())
                Me(Me.tableImagenes.QrCodeColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsLogoNull() As Boolean
            Return Me.IsNull(Me.tableImagenes.LogoColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetLogoNull()
            Me(Me.tableImagenes.LogoColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsQrCodeNull() As Boolean
            Return Me.IsNull(Me.tableImagenes.QrCodeColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetQrCodeNull()
            Me(Me.tableImagenes.QrCodeColumn) = Global.System.Convert.DBNull
        End Sub
    End Class

    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Class ComprobantesEmitidosRowChangeEvent
        Inherits Global.System.EventArgs

        Private eventRow As ComprobantesEmitidosRow

        Private eventAction As Global.System.Data.DataRowAction

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New(ByVal row As ComprobantesEmitidosRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New()
            Me.eventRow = row
            Me.eventAction = action
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Row() As ComprobantesEmitidosRow
            Get
                Return Me.eventRow
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class

    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Class ComprobantesListRowChangeEvent
        Inherits Global.System.EventArgs

        Private eventRow As ComprobantesListRow

        Private eventAction As Global.System.Data.DataRowAction

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New(ByVal row As ComprobantesListRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New()
            Me.eventRow = row
            Me.eventAction = action
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Row() As ComprobantesListRow
            Get
                Return Me.eventRow
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class

    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Class ComprobantesFiscalesRowChangeEvent
        Inherits Global.System.EventArgs

        Private eventRow As ComprobantesFiscalesRow

        Private eventAction As Global.System.Data.DataRowAction

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New(ByVal row As ComprobantesFiscalesRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New()
            Me.eventRow = row
            Me.eventAction = action
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Row() As ComprobantesFiscalesRow
            Get
                Return Me.eventRow
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class

    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Class BalanceGralRowChangeEvent
        Inherits Global.System.EventArgs

        Private eventRow As BalanceGralRow

        Private eventAction As Global.System.Data.DataRowAction

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New(ByVal row As BalanceGralRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New()
            Me.eventRow = row
            Me.eventAction = action
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Row() As BalanceGralRow
            Get
                Return Me.eventRow
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class

    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Class EstadoResultadosRowChangeEvent
        Inherits Global.System.EventArgs

        Private eventRow As EstadoResultadosRow

        Private eventAction As Global.System.Data.DataRowAction

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New(ByVal row As EstadoResultadosRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New()
            Me.eventRow = row
            Me.eventAction = action
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Row() As EstadoResultadosRow
            Get
                Return Me.eventRow
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class

    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Class PolizaInformeRowChangeEvent
        Inherits Global.System.EventArgs

        Private eventRow As PolizaInformeRow

        Private eventAction As Global.System.Data.DataRowAction

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New(ByVal row As PolizaInformeRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New()
            Me.eventRow = row
            Me.eventAction = action
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Row() As PolizaInformeRow
            Get
                Return Me.eventRow
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class

    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Class ImagenesRowChangeEvent
        Inherits Global.System.EventArgs

        Private eventRow As ImagenesRow

        Private eventAction As Global.System.Data.DataRowAction

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New(ByVal row As ImagenesRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New()
            Me.eventRow = row
            Me.eventAction = action
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Row() As ImagenesRow
            Get
                Return Me.eventRow
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class
