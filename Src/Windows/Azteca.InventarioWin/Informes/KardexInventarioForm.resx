<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="C1CommandHolder1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="cmdImprimir.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>